{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/Subject.js","webpack:///./src/app/login/login.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["export { Subject } from 'rxjs';\n//# sourceMappingURL=Subject.js.map","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class LoginService {\n\n\n    constructor(private http: HttpClient) {}\n    private apiUrl = environment.apiUrl;\n\n    // Items Predictor Analysis \n    login(uname,password): Observable<any> {\n            const formData = new FormData();\n\n            formData.append('email', uname);\n            formData.append('password', password);\n            return this.http.post(this.apiUrl +\"/users/applogin\", formData)\n            .pipe(map((response: Response) => {\n                            return response;\n                        })\n            );\n    }\n     // Items Predictor Analysis \n    checkEmail(email): Observable<any> {\n            const formData = new FormData();\n\n            formData.append('email', email);\n            return this.http.post(this.apiUrl +\"/users/forgotPasswordApi\", formData)\n            .pipe(map((response: Response) => {\n                            return response;\n                        })\n            );\n    }\n         // resetPassword \n    resetPassword(password,id): Observable<any> {\n            const formData = new FormData();\n            formData.append('password', password);\n            formData.append('confirm_password', password);\n            formData.append('id', id);\n\n            return this.http.post(this.apiUrl +\"/users/resetPasswordApi\", formData)\n            .pipe(map((response: Response) => {\n                            return response;\n                        })\n            );\n    }\n           // Items Predictor Analysis \n    createSubscription(token:any,plan_id, user_id): Observable<any> {\n            const formData = new FormData();\n            formData.append('token', token.id);\n            formData.append('email', token.email);\n            \n            formData.append('plan_id', plan_id);\n            formData.append('user_id', user_id);\n            \n            return this.http.post(this.apiUrl +\"/users/createSubscription\", formData)\n            .pipe(map((response: Response) => {\n                            return response;\n                        })\n            );\n    }\n      // Items Predictor Analysis \n    autoLogin(user_id): Observable<any> {\n            const formData = new FormData();\n\n            formData.append('user_id', user_id);\n            return this.http.post(this.apiUrl +\"/users/autologin\", formData)\n            .pipe(map((response: Response) => {\n                            return response;\n                        })\n            );\n    }\n        getPlans(): Observable<any> {\n            return this.http.get(this.apiUrl +\"/plans/getPlans\")\n            .pipe(map((response: Response) => {\n                            return response;\n                        })\n            );\n    }\n}\n\n\n"],"sourceRoot":""}