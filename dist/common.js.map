{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/Subject.js","webpack:///./src/app/dentist/dentist.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA+B;AAC/B,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAmC;AACQ;AAEmB;AAET;AAGrD;IAII,wBAAoB,IAAgB,EAAS,cAA6B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAS,mBAAc,GAAd,cAAc,CAAe;QACtE,gBAAgB;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,8BAA8B,EAAE,6CAA6C,CAAC,CAAC;IACxG,CAAC;IAGD,cAAc;IACb,oCAAW,GAAX,UAAY,OAAc,EAAE,SAAa,EAAE,KAAwC;QAAvE,wCAAc;QAAE,2CAAa;QAAE,gCAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;QAC/E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oFAAoF,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACpI,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB;YACb,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACb,CAAC;IACN,CAAC;IAEE,iBAAiB;IACpB,uCAAc,GAAd,UAAe,UAAU,EAAE,KAAwC;QAAxC,gCAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;QACnE,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAEhC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAClC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wDAAwD,EAAE,QAAQ,CAAC;aACxF,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB;YACb,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACb,CAAC;IACN,CAAC;IAED,iBAAiB;IACjB,uCAAc,GAAd,UAAe,UAAU,EAAE,KAAK,EAAE,KAAwC;QAAxC,gCAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;QAC1E,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAEhC,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;QAC3C,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC9B,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAClC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAElC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wDAAwD,EAAE,QAAQ,CAAC;aACxF,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB;YACb,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACb,CAAC;IACN,CAAC;IApDQ,cAAc;QAD1B,gEAAU,EAAE;yCAKiB,+DAAU,EAAyB,kEAAa;OAJjE,cAAc,CAqD1B;IAAD,qBAAC;CAAA;AArD0B","file":"common.js","sourcesContent":["export { Subject } from 'rxjs';\n//# sourceMappingURL=Subject.js.map","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\n\n@Injectable()\nexport class DentistService {\n\n   public token: string;\n    private headers: HttpHeaders;\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   // Get Dentist\n    getDentists(user_id = '23', clinic_id='1', token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/AccountingInvoicesAndReceipts/dentists/23/1\", { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n       // Delete Dentist\n    deleteDentists(dentist_id, token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n\n    formData.append('id', dentist_id);\n    formData.append('token', token);\n\n        return this.http.post(\"http://localhost/jeeveanalytics/server/Dentists/delete\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    // Update Dentist\n    updateDentists(dentist_id, value, token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n\n    formData.append('provider_id', dentist_id);\n    formData.append('name', value);\n     formData.append('user_id', '23');\n    formData.append('clinic_id', '1');\n\n    formData.append('token', token);\n    \n        return this.http.post(\"http://localhost/jeeveanalytics/server/Dentists/update\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n}\n\n"],"sourceRoot":""}