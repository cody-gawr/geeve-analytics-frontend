{"version":3,"sources":["webpack:///./src/app/in-office-history/dialog-overview-example.html","webpack:///./src/app/in-office-history/in-office-history.component.html","webpack:///./src/app/in-office-history/in-office-history.component.scss","webpack:///./src/app/in-office-history/in-office-history.component.ts","webpack:///./src/app/in-office-history/in-office-history.module.ts","webpack:///./src/app/in-office-history/in-office-history.routing.ts","webpack:///./src/app/in-office-history/in-office-history.service.ts","webpack:///./src/app/in-office-history/invoice-details.html"],"names":[],"mappings":"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","file":"in-office-history-in-office-history-module.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title>Add In-Office Plan Details</h1>\\n<div mat-dialog-content>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.plan_name\\\" placeholder=\\\"Plan Name\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.plan_description\\\" placeholder=\\\"Plan Description\\\"\\n\\n    class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n  </mat-form-field>\\n\\n\\n\\n  <mat-form-field>\\n      <input matInput tabindex=\\\"1\\\" id=\\\"total_amount\\\" [(ngModel)]=\\\"data.total_amount\\\" type=\\\"number\\\" min=\\\"0\\\"  placeholder=\\\"Plan Fee\\\" class=\\\"form-control-dialog\\\" (change)=\\\"deposite_amount(data.deposite_amount)\\\" required=\\\"true\\\">\\n    </mat-form-field>\\n\\n\\n  <mat-form-field>\\n      <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.setup_fee\\\" placeholder=\\\"Setup Fee\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n   </mat-form-field>\\n\\n\\n  <mat-form-field>\\n      <input matInput tabindex=\\\"1\\\" id=\\\"deposite_amount\\\" type=\\\"number\\\" min=\\\"0\\\"  (change)=\\\"deposite_amount(data.deposite_amount)\\\" [(ngModel)]=\\\"data.deposite_amount\\\" placeholder=\\\"Deposited Amount\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n      <input matInput tabindex=\\\"1\\\" id=\\\"balance_amount\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.balance_amount\\\" placeholder=\\\"Balance Amount\\\" class=\\\"form-control-dialog\\\" readonly>\\n    </mat-form-field>\\n      \\n    <mat-form-field>\\n      <mat-label>Frequency of payments</mat-label> \\n      <mat-select tabindex=\\\"1\\\" [(ngModel)]= \\\"data.payment_frequency\\\" required=\\\"true\\\">\\n        <mat-option value=\\\"MONTHLY\\\">MONTHLY</mat-option>\\n        <mat-option value=\\\"WEEKLY\\\">WEEKLY</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n\\n      <mat-form-field>\\n          <input matInput tabindex=\\\"1\\\" id=\\\"duration\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.duration\\\" placeholder=\\\"Duration (Period of Loan)\\\" (change)=\\\"durationcal(data.duration)\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n        </mat-form-field>\\n\\n        \\n        <mat-form-field>\\n            <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" step=\\\".01\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.monthly_weekly_payment\\\" placeholder=\\\"Monthly/Weekly Payment\\\" class=\\\"form-control-dialog\\\" readonly>\\n          </mat-form-field>\\n    \\n          <mat-form-field>\\n              <input matInput tabindex=\\\"1\\\" type=\\\"date\\\" [(ngModel)]=\\\"data.start_date\\\" placeholder=\\\"Start Date\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input matInput tabindex=\\\"1\\\" type=\\\"date\\\" [(ngModel)]=\\\"data.due_date\\\"  placeholder=\\\"Due Date\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n              </mat-form-field>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"save(data)\\\" tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\\n\\n\\n\"","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>In-office Payment Plans | {{patientname | titlecase}} <button class=\\\"sa-pull-right mat-raised-button mat-gray\\\" mat-raised-button (click)=\\\"openDialog()\\\" [disabled]=\\\"rows == ''\\\" >Add More Plan</button></mat-card-title>\\r\\n               <!-- ============================================================== -->\\r\\n                <!-- column -->\\r\\n                <!-- ============================================================== -->\\r\\n             \\r\\n\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                    <!-- Card column -->\\r\\n                    <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\" class=\\\"sa_mattabs_design sa_matforms_design\\\">\\r\\n\\r\\n                            <mat-tab-group dynamicHeight>\\r\\n                         \\r\\n                        <!-- Plan Details tab -->\\r\\n                              <mat-tab label=\\\" Payment Plans/History\\\">\\r\\n                               \\r\\n                                   \\r\\n                         <ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\r\\n                                  [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\r\\n                             <ngx-datatable-column prop=\\\"sr\\\" name=\\\"sr\\\">\\r\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                              <span>Id</span>\\r\\n                            </ng-template>\\r\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n                                <span>\\r\\n                                  {{rowIndex + 1}}\\r\\n                                </span>\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column prop=\\\"plan_name\\\" name=\\\"plan_name\\\">\\r\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                              <span>Plan Name</span>\\r\\n                            </ng-template>\\r\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                                <span >\\r\\n                                  {{value}}\\r\\n                                </span>\\r\\n                                    </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                      \\r\\n                             <ngx-datatable-column prop=\\\"start_date\\\" name=\\\"start_date\\\">\\r\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                              <span>Start Date</span>\\r\\n                            </ng-template>\\r\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                                <span >\\r\\n                                    {{value | date: 'dd-MM-yyyy'}}\\r\\n                                </span>\\r\\n                               \\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                      \\r\\n                            <ngx-datatable-column prop=\\\"total_amount\\\" name=\\\"total_amount\\\">\\r\\n                              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                             <span>Amount</span>\\r\\n                           </ng-template>\\r\\n                             <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                               <span >\\r\\n                                 $ {{value}}\\r\\n                               </span>\\r\\n                              \\r\\n                             </ng-template>\\r\\n                           </ngx-datatable-column>\\r\\n\\r\\n                           <ngx-datatable-column prop=\\\"amount_paid\\\" name=\\\"amount_paid\\\">\\r\\n                            <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                           <span>Paid</span>\\r\\n                         </ng-template>\\r\\n                           <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                             <span >\\r\\n                              $ {{value}}\\r\\n                             </span>\\r\\n                            \\r\\n                           </ng-template>\\r\\n                         </ngx-datatable-column>\\r\\n                      \\r\\n                         <ngx-datatable-column prop=\\\"amount_balance\\\" name=\\\"amount_balance\\\">\\r\\n                          <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                         <span>Balance</span>\\r\\n                       </ng-template>\\r\\n                         <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                           <span >\\r\\n                            $ {{value}}\\r\\n                           </span>\\r\\n                          \\r\\n                         </ng-template>\\r\\n                       </ngx-datatable-column>\\r\\n                    \\r\\n                       <ngx-datatable-column prop=\\\"patient_status\\\" name=\\\"patient_status\\\">\\r\\n                        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                       <span>Patient Status</span>\\r\\n                     </ng-template>\\r\\n                       <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                         <span >\\r\\n                           {{value}}\\r\\n                         </span>\\r\\n                        \\r\\n                       </ng-template>\\r\\n                     </ngx-datatable-column>\\r\\n                        \\r\\n\\r\\n                     <ngx-datatable-column name=\\\"id\\\">\\r\\n                      <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                     <span>Actions</span>\\r\\n                   </ng-template>\\r\\n                     <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" style=\\\"width:266px!important;\\\">\\r\\n                       <a class=\\\"action_btn golden\\\" title= 'Patients Details' (click) = \\\"invoiceDialog()\\\"><i class=\\\"ti-eye  m-r-10\\\"></i></a>\\r\\n                       <button class=\\\"action_btn danger\\\" mat-menu-item (click) = \\\"deleteInofficeMembersPlan(rowIndex)\\\">\\r\\n                      <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\r\\n                     </ng-template>\\r\\n                   </ngx-datatable-column>\\r\\n\\r\\n                  </ngx-datatable>\\r\\n\\r\\n                            </mat-tab>\\r\\n\\r\\n                      <!-- Contract Upload tab -->\\r\\n                                <mat-tab label=\\\"Contract Upload\\\">\\r\\n                             \\r\\n                                  <form *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" class=\\\"basic-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                                    <div class=\\\"bd_UpoadImage\\\" fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                                        <label>Upload Agreement</label><br>\\r\\n                                        <div class=\\\"upload-btn\\\">\\r\\n                                            <span>Choose file</span>\\r\\n                                            <input class=\\\"\\\" type=\\\"file\\\" placeholder=\\\"\\\" name= \\\"file\\\" id=\\\"file\\\" (change)=\\\"uploadImage($event.target.files)\\\">\\r\\n                                            <input type='hidden'  placeholder=\\\"\\\" id=\\\"imageURL\\\" >\\r\\n                                        </div>\\r\\n                                                          \\r\\n                                     </div>\\r\\n                               \\r\\n                                   <p>\\r\\n                                      <button mat-raised-button color=\\\"dc\\\">Save</button>\\r\\n                                   </p>\\r\\n                                   </form>\\r\\n                                  <p *ngIf=\\\"contract_url; else empty\\\">\\r\\n                                    Download Agreement\\r\\n                                    <a mat-raised-button class=\\\"contractupload\\\" color=\\\"accent\\\" target=\\\"_blank\\\" href=\\\"{{contract_url}}\\\">Download</a>\\r\\n                                </p>\\r\\n                                </mat-tab>\\r\\n\\r\\n\\r\\n                            </mat-tab-group>\\r\\n                       </div>\\r\\n                </div>\\r\\n\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n \"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 90%; }\\n\\n.sa_plan_show {\\n  width: 100%;\\n  text-align: left;\\n  margin-bottom: 10px; }\\n\\n.sa_plan_show td {\\n  padding: 4px 10px;\\n  background: #f2f2f2;\\n  border: 1px solid #ccc; }\\n\\n.sa_userstable {\\n  width: 100%; }\\n\\n.sa_plan_show th {\\n  padding: 4px 10px;\\n  background: #f2f2f2;\\n  border: 1px solid #ccc;\\n  font-weight: 400;\\n  width: 280px; }\\n\\n.sa_upload_sec {\\n  text-align: center;\\n  padding: 40px 20px 20px;\\n  border: 2px dotted #ccc;\\n  min-height: 220px; }\\n\\n.sa_download_sec {\\n  text-align: center;\\n  padding: 40px 20px 20px;\\n  background: #f2f2f2;\\n  min-height: 220px; }\\n\\n.mat-card .mat-card-content {\\n  font-size: 1rem;\\n  line-height: 31px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVtZW1iZXJzL2NsaWVudDIvc3JjL2FwcC9pbi1vZmZpY2UtaGlzdG9yeS9pbi1vZmZpY2UtaGlzdG9yeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFnQjtFQUNoQixpQkFBZ0I7RUFDaEIsWUFBVyxFQUNaOztBQUVEO0VBQ0UsV0FBVSxFQUNYOztBQUVEO0VBQWMsWUFBVTtFQUFFLGlCQUFlO0VBQUUsb0JBQWtCLEVBQUc7O0FBQ2hFO0VBQWlCLGtCQUFnQjtFQUFFLG9CQUFrQjtFQUFFLHVCQUFxQixFQUFHOztBQUMvRTtFQUFlLFlBQVUsRUFBRzs7QUFDNUI7RUFBaUIsa0JBQWdCO0VBQUUsb0JBQWtCO0VBQUUsdUJBQXFCO0VBQUUsaUJBQWU7RUFBRSxhQUFXLEVBQUc7O0FBQzdHO0VBQWUsbUJBQWtCO0VBQy9CLHdCQUF1QjtFQUN2Qix3QkFBdUI7RUFDdkIsa0JBQWdCLEVBQ2pCOztBQUVEO0VBQWlCLG1CQUFrQjtFQUNqQyx3QkFBdUI7RUFDeEIsb0JBQWtCO0VBQUUsa0JBQWdCLEVBQUU7O0FBRXRDO0VBQ0MsZ0JBQWU7RUFDZixrQkFBaUIsRUFBRSIsImZpbGUiOiJzcmMvYXBwL2luLW9mZmljZS1oaXN0b3J5L2luLW9mZmljZS1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybSB7XHJcbiAgbWluLXdpZHRoOiAxNTBweDtcclxuICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcclxuICB3aWR0aDogOTAlO1xyXG59XHJcblxyXG4uc2FfcGxhbl9zaG93e3dpZHRoOjEwMCU7IHRleHQtYWxpZ246bGVmdDsgbWFyZ2luLWJvdHRvbToxMHB4O31cclxuLnNhX3BsYW5fc2hvdyB0ZHtwYWRkaW5nOjRweCAxMHB4OyBiYWNrZ3JvdW5kOiNmMmYyZjI7IGJvcmRlcjoxcHggc29saWQgI2NjYzt9XHJcbi5zYV91c2Vyc3RhYmxle3dpZHRoOjEwMCU7fVxyXG4uc2FfcGxhbl9zaG93IHRoe3BhZGRpbmc6NHB4IDEwcHg7IGJhY2tncm91bmQ6I2YyZjJmMjsgYm9yZGVyOjFweCBzb2xpZCAjY2NjOyBmb250LXdlaWdodDo0MDA7IHdpZHRoOjI4MHB4O31cclxuLnNhX3VwbG9hZF9zZWN7dGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDQwcHggMjBweCAyMHB4O1xyXG4gIGJvcmRlcjogMnB4IGRvdHRlZCAjY2NjO1xyXG4gIG1pbi1oZWlnaHQ6MjIwcHg7XHJcbn1cclxuXHJcbi5zYV9kb3dubG9hZF9zZWN7dGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDQwcHggMjBweCAyMHB4O1xyXG4gYmFja2dyb3VuZDojZjJmMmYyOyBtaW4taGVpZ2h0OjIyMHB4O31cclxuXHJcbiAubWF0LWNhcmQgLm1hdC1jYXJkLWNvbnRlbnQge1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxuICBsaW5lLWhlaWdodDogMzFweDt9Il19 */\"","import { Component,OnInit,Inject, EventEmitter,Output, AfterViewInit  } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, Validators } from '@angular/forms';\nimport { InOfficeHistoryService } from './in-office-history.service';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatTableDataSource,MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { NotifierService } from 'angular-notifier';\nimport { DatePipe,formatDate } from '@angular/common';\n\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { empty } from 'rxjs';\nimport { HeaderService } from '../layouts/full/header/header.service';\nimport { PatientInfoService } from '../patient-info/patient-info.service';\n\nconst data: any = [];\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example.html',\n})\n\n\nexport class DialogOverviewExampleDialogComponent {\n  public totalAmount;\n  public balanceamt;\n  public monthlyweeklyamt;\n  public durationval;\n\n  constructor(\n     public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n \n  save(data) {\n         \n    $('.form-control-dialog').each(function(){\n    var likeElement = $(this).click();\n  });\n  console.log(data)\n    if(data.plan_name != undefined && data.plan_description != undefined && data.total_amount != undefined && data.setup_fee != undefined && data.deposite_amount != undefined && data.balance_amount != undefined && data.payment_frequency != undefined && data.duration != undefined && data.monthly_weekly_payment != undefined && data.start_date != undefined && data.due_date != undefined){\n        this.dialogRef.close(data);\n     }\n   }\n    deposite_amount(depositeamount){\n    this.totalAmount = $('#total_amount').val();\n    this.balanceamt = this.totalAmount-depositeamount;       \n    this.data.balance_amount = this.balanceamt;\n    this.durationcal(this.durationval);\n\n    }\n    public durationcal(durationval){\n    this.durationval= durationval;\n      this.monthlyweeklyamt =this.balanceamt/this.durationval;\n      this.data.monthly_weekly_payment= this.monthlyweeklyamt;\n      // alert(this.monthlyweeklyamt);\n    }\n      \n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n }\n @Component({\n  selector: 'app-invoice-details-dialog',\n  templateUrl: './invoice-details.html',\n})\nexport class InvoiceDetailsDialogComponent {\n \n  constructor(\n     public dialogRef2: MatDialogRef<InvoiceDetailsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    onNoClick(): void {\n      this.dialogRef2.close();\n    }\n }\n\n\n@Component({\n  selector: 'app-formlayout',\n  templateUrl: './in-office-history.component.html',\n  styleUrls: ['./in-office-history.component.scss']\n})\nexport class InOfficeHistoryComponent implements AfterViewInit {\n  private readonly notifier: NotifierService;\n\n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\n  bufferValue = 75;\n  public id:any ={};\n  public imageURL:any;\n  public contract_url:any;\n\n  public form: FormGroup;\n  options: FormGroup;\n  private warningMessage: string;\n\n  public patient_name;\n  public patient_email;\n  public plan_name;\n  public plan_description;\n  public clinic_id;\n  public total_amount;\n  public setup_fee;\n  public deposite_amount;\n  public balance_amount;\n  public payment_frequency;\n  public duration;\n  public monthly_weekly_payment;\n  public start_date;\n  public due_date;\n  public patientname;\n  public patientemail;\n  public inoffice_payment_id;\n  public invoicedata;\n  public invoiceId;\n  public subscriptionId;\n  public total_paid;\n\n  temp = [...data];\n  table;\n  loadingIndicator = true;\n\n  rows = [];\n \n  constructor(notifierService: NotifierService,private headerService:HeaderService, private fb: FormBuilder,public dialog: MatDialog,  private inOfficeHistoryService: InOfficeHistoryService, private route: ActivatedRoute,private _cookieService: CookieService, private router: Router,breakpointObserver: BreakpointObserver) {\n    this.notifier = notifierService;\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n    }\n\n   openDialog(): void {\n   \n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n     width: '250px',\n     data: {plan_name: this.plan_name ,plan_description: this.plan_description,clinic_id: this.clinic_id,total_amount:this.total_amount,setup_fee:this.setup_fee,deposite_amount:this.deposite_amount,balance_amount:this.balance_amount,payment_frequency:this.payment_frequency,duration:this.duration,monthly_weekly_payment:this.monthly_weekly_payment,start_date:this.start_date,due_date:this.due_date   }\n \n    });\n    \n \n\n  dialogRef.afterClosed().subscribe(result => {\n  \n   this.inOfficeHistoryService.addPaymentPlans(this.patientname,this.patientemail, result.plan_name,result.plan_description,result.clinic_id,result.total_amount,result.setup_fee,result.deposite_amount,result.balance_amount,result.payment_frequency,result.duration,result.monthly_weekly_payment,result.start_date,result.due_date).subscribe((res) => {\n   \n\n   if(res.message == 'success'){\n    \n            this.notifier.notify( 'success', 'New Plan Added' ,'vertical');\n            this.getInofficeMembersByID();\n           }\n        }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n        }\n        );  \n        });\n\n  }\n  \n  invoiceDialog(): void {\n   \n    this.inOfficeHistoryService.getInofficeMembersPlanInvoices(this.id,this.inoffice_payment_id).subscribe(updateres => {\n    this.invoicedata = updateres.data[0]['inoffice_payments_invoices'];\n    console.log(this.invoicedata);\n    const dialogRef2 = this.dialog.open(InvoiceDetailsDialogComponent, {\n    width: '250px',\n  \n    data: {invoicedata: this.invoicedata ,}\n    });\n    \n     });\n  }\n  ngAfterViewInit() {\n   \n    this.id = this.route.snapshot.paramMap.get(\"id\");\n    this.getClinicPatientsbyId()\n    // this.getInofficeMembersByID();\n    $('.header_filters').removeClass('hide_header'); \n    $('nb.header_filters').removeClass('flex_direct_mar'); \n    $('.header_filters').addClass('hide_header');\n      this.route.params.subscribe(params =>  {\n        // this.getClinicGoals();\n        $('#title').html('In-office Payment Plans');\n     });\n    this.form = this.fb.group({\n    });\n     }\n\n  \n  //  initiate_clinic(){  \n  //     this.clinic_id = $('#currentClinicid').attr('cid');\n  //   if(this.clinic_id)\n  //   this.getInofficeMembersByID();\n  //     }\n\n    \n    getInofficeMembersByID(){\n    \n     this.inOfficeHistoryService.getInofficeMembersByID(this.id,this.clinic_id).subscribe((res) => {\n  \n      if(res.message == 'success'){\n        this.rows = res.data;\n        this.patientname = res.data[0]['patient_name'];\n        this.patientemail = res.data[0]['patient_email'];\n        this.inoffice_payment_id = res.data[0]['inoffice_paymentID'];\n          // console.log(this.rows);\n       }\n       else if(res.status == '401'){\n             this._cookieService.put(\"username\",'');\n             this._cookieService.put(\"email\", '');\n             this._cookieService.put(\"token\", '');\n             this._cookieService.put(\"userid\", '');\n              this.router.navigateByUrl('/login');\n          }\n   }, error => {\n     this.warningMessage = \"Please Provide Valid Inputs!\";\n   }\n   );\n  }\n\n  getPatientContract(){\n      this.inOfficeHistoryService.getPatientContract(this.id).subscribe((res) => {\n          if(res.message == 'success'){\n         this.contract_url = res.data['contract_upload'];\n          }\n        \n         else if(res.status == '401'){\n               this._cookieService.put(\"token\", '');\n               this._cookieService.put(\"userid\", '');\n                this.router.navigateByUrl('/login');\n            }\n     }, error => {\n       this.warningMessage = \"Please Provide Valid Inputs!\";\n     }    \n     );\n    }\n    getClinicPatientsbyId(){\n      \n      this.inOfficeHistoryService.getClinicPatientsbyId(this.id).subscribe((res) => {\n         if(res.message == 'success'){\n         this.clinic_id = res.data[0]['clinic_id'];\n         this.getInofficeMembersByID();\n            }\n        \n         else if(res.status == '401'){\n               this._cookieService.put(\"token\", '');\n               this._cookieService.put(\"userid\", '');\n                this.router.navigateByUrl('/login');\n            }\n     }, error => {\n       this.warningMessage = \"Please Provide Valid Inputs!\";\n     }    \n     );\n    }\n\n  onSubmit() {\n    if(this.imageURL == undefined){\n      alert(\"Please Upload file\");\n    \n    }else{\n      $('.ajax-loader').show();      \n\n        this.inOfficeHistoryService.updatePatients(this.id,this.imageURL).subscribe((res) => {\n      $('.ajax-loader').hide();      \n\n        // console.log(this.imageURL);\n          if(res.message == 'success'){\n            this.notifier.notify( 'success', 'Document Uploaded' ,'vertical');\n               this.getPatientContract();\n            }\n           }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n            }   \n           );\n        }\n      }\n  public fileToUpload;\n  uploadImage(files: FileList) {\n    this.fileToUpload = files.item(0);\n    const extension = this.fileToUpload.name.split('.')[1].toLowerCase();\n    if(extension !== \"pdf\"){\n      alert('Please Upload PDF file');\n      \n      return null;\n    }else\n    {\n      $('.ajax-loader').show();      \n\n      let formData = new FormData();\n    formData.append('file', this.fileToUpload, this.fileToUpload.name);\n\n    this.inOfficeHistoryService.contractUpload(formData).subscribe((res) => {\n      $('.ajax-loader').hide();      \n\n        if(res.message == 'success'){\n        this.imageURL= res.data;\n          }\n        });\n      }\n  }\n\n  public deleteInofficeMembersPlan(row) {\n    if(confirm(\"Are you sure to delete this plan?\")) {\n       if(this.rows[row]['patientID']) {\n         this.inOfficeHistoryService.deleteInofficeMembersPlan(this.rows[row]['patientID'],this.rows[row]['inoffice_paymentID']).subscribe((res) => {\n          if(res.message == 'success'){\n            this.getInofficeMembersByID();\n           this.notifier.notify( 'success', 'Plan Removed' ,'vertical');\n             \n          }\n       }, error => {\n         this.warningMessage = \"Please Provide Valid Inputs!\";\n       }    \n       );\n       }\n       else {\n        \n         this.rows.splice(row, 1);\n       this.rows = [...this.rows];\n       }\n     }\n}\n\n}","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { InOfficeHistoryRoutes } from './in-office-history.routing';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { QuillModule } from 'ngx-quill';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { DatePipe } from '@angular/common';\n\nimport { InOfficeHistoryComponent,DialogOverviewExampleDialogComponent,InvoiceDetailsDialogComponent } from './in-office-history.component';\n\nimport { InOfficeHistoryService } from './in-office-history.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(InOfficeHistoryRoutes),\n    DemoMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    QuillModule,\n    MatInputModule,\n    NgxDatatableModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    MatTreeModule,\n    MatDatepickerModule,\n    NgMultiSelectDropDownModule.forRoot()\n  ],\n  providers: [\n    InOfficeHistoryService,\n    DatePipe\n  ],\n  entryComponents: [DialogOverviewExampleDialogComponent,InvoiceDetailsDialogComponent],\n  declarations: [\n    InOfficeHistoryComponent,DialogOverviewExampleDialogComponent,InvoiceDetailsDialogComponent\n  ]\n})\nexport class InOfficeHistoryModule {}\n","import { Routes } from '@angular/router';\n\nimport { InOfficeHistoryComponent } from './in-office-history.component';\n\nexport const InOfficeHistoryRoutes: Routes = [\n  {\n   path: '',\n    component: InOfficeHistoryComponent,\n    data: {\n      title: 'In-Office History'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class InOfficeHistoryService {\n\n   public token: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n  \n    getPatientContract(patient_id, token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Patients/getPatientContract?patient_id=\"+patient_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                    })\n        );\n    }\n  \n    updatePatients(patient_id,contract_upload,token = this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n    \n        formData.append('patient_id', patient_id);\n        formData.append('contract_upload', contract_upload);\n        formData.append('token', token);\n       \n            return this.http.post(this.apiUrl +\"/InofficePayments/UploadContract/\", formData)\n            .pipe(map((response: Response) => {\n          //      console.log(response);\n                            return response;\n                        })\n            );\n    }\n    contractUpload( formData): Observable<any> {\n       \n        formData.append('id', this._cookieService.get(\"userid\"));\n        formData.append('token', this._cookieService.get(\"token\"));\n\n    return this.http.post(this.apiUrl +\"/Patients/logoUpload/\", formData)\n    .pipe(map((response: Response) => {\n        // console.log(response);\n        \n                    return response;\n                })\n    );\n    }\n    deleteInofficeMembersPlan(patient_id,inoffice_payment_id,token = this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n    \n        formData.append('patient_id', patient_id);\n        formData.append('inoffice_payment_id', inoffice_payment_id);\n        formData.append('token', token);\n       \n            return this.http.post(this.apiUrl +\"/InofficePayments/deleteInofficeMembersPlan/\", formData)\n            .pipe(map((response: Response) => {\n          //      console.log(response);\n                            return response;\n                        })\n            );\n    }\n\n    getInofficeMembersByID(patient_id,clinic_id,user_id = this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/InofficePayments/getInofficeMembersByID?patient_id=\"+patient_id+\"&user_id=\"+this._cookieService.get(\"userid\")+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                // console.log(response);\n                return response;\n              \n                })\n        );\n    }\n    addPaymentPlans(patient_name, patient_email,plan_name,plan_description,clinic_id,total_amount,setup_fee,deposite_amount,balance_amount,payment_frequency,duration,monthly_weekly_payment,start_date,due_date,token =this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n        formData.append('patient_name', patient_name);\n        formData.append('patient_email', patient_email);\n        formData.append('plan_name',plan_name);\n        formData.append('plan_description', plan_description);\n        formData.append('user_id', this._cookieService.get(\"userid\"));\n        formData.append('clinic_id', clinic_id);\n        formData.append('total_amount',total_amount);\n        formData.append('setup_fee', setup_fee);\n        formData.append('deposite_amount',deposite_amount );\n        formData.append('balance_amount',balance_amount );\n        formData.append('payment_frequency',payment_frequency );\n        formData.append('duration',duration );\n        formData.append('monthly_weekly_payment',monthly_weekly_payment );\n        formData.append('start_date',start_date );\n        formData.append('due_date',due_date );\n        formData.append('token', token);\n\n            return this.http.post(this.apiUrl +\"/InofficePayments/addPaymentPlans/\", formData)\n            .pipe(map((response: Response) => {\n                           return response;\n            })\n            );\n        }\n    getInofficeMembersPlanInvoices(patient_id,inoffice_payment_id, token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/InofficePayments/getInofficeMembersPlanInvoices?patient_id=\"+patient_id+\"&inoffice_payment_id=\"+inoffice_payment_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                })\n        );\n    }\n    getClinicPatientsbyId(patient_id,user_id = this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Patients/getClinicPatientsbyId?patient_id=\"+patient_id+\"&user_id=\"+this._cookieService.get(\"userid\")+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                })\n        );\n    }\n}","module.exports = \"<h1 mat-dialog-title>Invoice Details</h1>\\n<ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='data.invoicedata'>\\n    \\n <ngx-datatable-column prop=\\\"sr\\\" name=\\\"sr\\\">\\n              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n            <span>Id</span>\\n          </ng-template>\\n            <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n              <span>\\n                {{rowIndex + 1}}\\n              </span>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column prop=\\\"invoiceId\\\" name=\\\"invoiceId\\\">\\n              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n            <span>Invoice Id</span>\\n          </ng-template>\\n            <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n              <span >\\n                {{value}}\\n              </span>\\n                  </ng-template>\\n          </ngx-datatable-column>\\n                    \\n            <ngx-datatable-column prop=\\\"subscriptionId\\\" name=\\\"subscriptionId\\\">\\n              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n              <span>Subscription Id</span>\\n            </ng-template>\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n                <span >\\n                  {{value}}\\n                </span>\\n              \\n              </ng-template>\\n            </ngx-datatable-column>\\n\\n            <ngx-datatable-column prop=\\\"total_paid\\\" name=\\\"total_paid\\\">\\n            <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n            <span>Total Paid</span>\\n          </ng-template>\\n            <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n              <span >\\n              $ {{value}}\\n              </span>\\n            \\n            </ng-template>\\n          </ngx-datatable-column>\\n      \\n  </ngx-datatable>\""],"sourceRoot":""}