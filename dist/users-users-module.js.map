{"version":3,"sources":["webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.routing.ts","webpack:///./src/app/users/users.service.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>Users  <button class=\\\"sa-pull-right mat-raised-button mat-gray\\\" mat-raised-button (click)=\\\"openDialog()\\\"disabled =\\\"true \\\">Add User</button></mat-card-title>\\n\\n        <mat-form-field>\\n            <input matInput type='text' class=\\\"form-control\\\" placeholder='Type to filter User name...' (keyup)='updateFilter($event)'\\n            />\\n        </mat-form-field>\\n        <ngx-datatable #table class='material' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\n       <ngx-datatable-column name=\\\"Id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Id</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span>\\n            {{value}}\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Username\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>User Name</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'username')\\\" *ngIf=\\\"!editing[rowIndex + '-username'] && value != ''\\\">\\n            {{value}}\\n          </span>\\n           <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'username')\\\" *ngIf=\\\"!editing[rowIndex + '-username'] && value == ''\\\">\\n            Enter Username\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'username', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-username']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n       <ngx-datatable-column name=\\\"Email\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'email')\\\" *ngIf=\\\"!editing[rowIndex + '-email'] && value != ''\\\">\\n            {{value}}\\n          </span>\\n           <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'email')\\\" *ngIf=\\\"!editing[rowIndex + '-email'] && value == ''\\\">\\n            Enter Email\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'email', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-email']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"usertype\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>User Type</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'usertype')\\\" *ngIf=\\\"!editing[rowIndex + '-usertype']\\\">\\n          &nbsp;&nbsp;  {{value}}  \\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'usertype', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-usertype']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Created\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span>\\n            {{value| date}}\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Actions</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" style=\\\"width:266px!important;\\\">\\n       \\n          <button class=\\\"action_btn danger\\\" mat-menu-item (click) = \\\"deleteUsers(rowIndex)\\\">\\n         <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n        </ngx-datatable>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".lds-roller div::after {\\n  background: black; }\\n\\n.spinner {\\n  position: relative;\\n  background: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWlCLEVBQ3BCOztBQUNEO0VBQ0ksbUJBQWtCO0VBQ2xCLGlCQUFnQixFQUNuQiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxkcy1yb2xsZXIgZGl2OjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogYmxhY2s7XG59XG4uc3Bpbm5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG59Il19 */\"","import { Component, Inject , ViewChild, AfterViewInit } from '@angular/core';\nimport { UsersService } from './users.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements AfterViewInit {\n  name: string;\n  address: string;\n  contact_name: string;\n  fileInput: any ;\n\n\n  ngAfterViewInit() {\n    this.getUsers();\n        $('#title').html('Users');\n        $('.header_filters').hide();\n        \n  }\n  data = [\n    {\n        \"dentist\": \"Ethel Price\",\n        \"provider\": \"female\",\n        \"company\": \"Johnson\",\n        \"age\": 22\n    }\n];\n  editing = {};\n  rows = [];\n  temp = [...data];\n  table;\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [{ prop: 'id' }, { name: 'username' }, { name: 'email' }, { name: 'user_type' }, { name: 'created' }];\n\n  constructor(private usersService: UsersService, public dialog: MatDialog,private _cookieService: CookieService, private router: Router) {\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n  }\n  private warningMessage: string;\n\n\n  private getUsers() {\n  this.usersService.getUsers().subscribe((res) => {\n       if(res.message == 'success'){\n        this.rows = res.data;\n        this.temp = [...res.data];        \n        this.table = data;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n\n  }\n  private deleteUsers(row) {\n           if(confirm(\"Are you sure to delete this user?\")) {\n              if(this.rows[row]['id']) {\n                this.usersService.deleteUser(this.rows[row]['id']).subscribe((res) => {\n                 if(res.message == 'success'){\n                  alert('User Removed');\n                    this.getUsers();\n                 }\n              }, error => {\n                this.warningMessage = \"Please Provide Valid Inputs!\";\n              }    \n              );\n              }\n              else {\n                this.rows.splice(row, 1);\n              this.rows = [...this.rows];\n              }\n            }\n  }\n  addDentist() {\n    var temp ={};\n    temp['providerId'] ='Enter Provider Id';\n    temp['name'] ='Enter Name';\n    var length = this.rows.length;\n    this.editing[length + '-providerId'] = true;\n    this.editing[length + '-name'] = true;\n    \n    this.rows.push(temp);\n    this.table =data;\n  }\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.username.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n  }\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    if(event.target.value == '')\n      alert('Value cannot be empty!');\n    else {\n    this.rows[rowIndex][cell] = event.target.value;\n    this.usersService.updateUser(this.rows[rowIndex]['id'], this.rows[rowIndex][cell],cell).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('User Updated');\n          this.getUsers();\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );  \n    this.rows = [...this.rows];\n  }\n  }\n\n  enableEditing(rowIndex, cell) {\n\n    this.editing[rowIndex + '-' + cell] = true;\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { UsersService } from './users.service';\nimport { UsersComponent  } from './users.component';\nimport { UsersRoutes } from './users.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(UsersRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule,\n    FormsModule\n  ],\n  providers: [\n    UsersService\n  ],\n  declarations: [ UsersComponent ]\n})\nexport class UsersModule { }","import { Routes } from '@angular/router';\n\nimport { UsersComponent } from './users.component';\n\nexport const UsersRoutes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n    data: {\n      title: 'Users'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n\n@Injectable()\nexport class UsersService {\n\n   public token: string;\n   public api_url: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        \n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   // Get Dentist\n    getUsers(user_id = this._cookieService.get(\"userid\"), clinic_id='1', token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Users/getPracticeOwners?token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n       // Delete Clinic\n    deleteUser(user_id, token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n    formData.append('id', user_id);\n    formData.append('token', token);\n\n        return this.http.post(this.apiUrl +\"/Users/delete\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    // Update Clinic\n    updateUser(user_id, value, column, token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n\n    formData.append('id', user_id);\n    formData.append(column, value);\n     formData.append('user_id', this._cookieService.get(\"userid\"));\n    formData.append('clinic_id', '1');\n\n    formData.append('token', token);\n    \n        return this.http.post(this.apiUrl +\"/Users/edit/\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n        // Update Clinic\n    addClinic(name, address, contact_name, token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n\n    formData.append('clinicName', name);\n    formData.append('address', address);\n    formData.append('contactName', contact_name);\n\n     formData.append('user_id', this._cookieService.get(\"userid\"));\n    formData.append('token', token);\n    \n        return this.http.post(this.apiUrl +\"/Practices/add/\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n}\n\n"],"sourceRoot":""}