{"version":3,"sources":["webpack:///./src/app/payment/payment.component.html","webpack:///./src/app/payment/payment.component.scss","webpack:///./src/app/payment/payment.component.ts","webpack:///./src/app/payment/payment.module.ts","webpack:///./src/app/payment/payment.routing.ts","webpack:///./src/app/payment/payment.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,uG;;;;;;;;;;;ACAA,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;;ACAb;AAkBlD;IAAA;IAqBA,CAAC;IApBC,mCAAQ,GAAR;IAEA,CAAC;IACD,uCAAY,GAAZ;QACE,IAAI,OAAO,GAAS,MAAO,CAAC,cAAc,CAAC,SAAS,CAAC;YACnD,GAAG,EAAE,4CAA4C;YACjD,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,UAAU,KAAU;gBACzB,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;SACF,CAAC,CAAC;QAEH,OAAO,CAAC,IAAI,CAAC;YACX,IAAI,EAAE,WAAW;YACjB,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;IAEL,CAAC;IApBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;OACW,gBAAgB,CAqB5B;IAAD,uBAAC;CAAA;AArB4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBY;AACM;AACA;AAOpB;AACuC;AACV;AAEN;AACK;AACJ;AACa;AAuBhE;IAAA;IAA4B,CAAC;IAAhB,aAAa;QArBzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,8DAAa,CAAC;gBACpC,6EAAe,CAAC,OAAO,CAAC,4CAA4C,CAAC;gBACrE,+DAAa;gBACb,+DAAa;gBACb,gEAAc;gBACd,mEAAiB;gBACjB,iEAAe;gBACf,qEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;aACpB;YACD,SAAS,EAAE;gBACT,+DAAc;aACf;YACD,YAAY,EAAE;gBACZ,mEAAgB;aACjB;SACF,CAAC;OACW,aAAa,CAAG;IAAD,oBAAC;CAAA;AAAH;;;;;;;;;;;;;ACrC1B;AAAA;AAAA;AAAuD;AAEhD,IAAM,aAAa,GAAW;IACnC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;QAC3B,IAAI,EAAE;YACJ,KAAK,EAAE,SAAS;SACjB;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACQ;AAEM;AAEY;AAG7D;IAGI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAC5B,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;IADG,CAAC;IAGxC,4BAA4B;IAC5B,8BAAK,GAAL,UAAM,KAAK,EAAC,QAAQ;QACZ,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAEhC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAE,iBAAiB,EAAE,QAAQ,CAAC;aAC9D,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB;YACb,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACb,CAAC;IACV,CAAC;IAjBQ,cAAc;QAD1B,gEAAU,EAAE;yCAIiB,+DAAU;OAH3B,cAAc,CAmB1B;IAAD,qBAAC;CAAA;AAnB0B","file":"payment-payment-module.js","sourcesContent":["module.exports = \"<h1>Default Stripe Form</h1>\\n\\n<button (click)=\\\"openCheckout()\\\">Purchase</button>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQvcGF5bWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService, CookieOptionsArgs } from \"angular2-cookie/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { PaymentService } from './payment.service';\nimport { StripeService, StripeCardComponent, ElementOptions, ElementsOptions } from \"@nomadreservations/ngx-stripe\";\n\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss']\n})\nexport class PaymentComponent implements OnInit {\n  ngOnInit() {\n\n  }\n  openCheckout() {\n    var handler = (<any>window).StripeCheckout.configure({\n      key: 'pk_test_fgXaq2pYYYwd4H3WbbIl4l8D00A63MKWFc',\n      locale: 'auto',\n      token: function (token: any) {\n        alert(token.id);\n        console.log(token);\n      }\n    });\n\n    handler.open({\n      name: 'Demo Site',\n      description: '2 widgets',\n      amount: 2000\n    });\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatIconModule,\n  MatCardModule,\n  MatInputModule,\n  MatCheckboxModule,\n  MatButtonModule\n} from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { PaymentRoutes } from './payment.routing';\nimport { PaymentComponent } from './payment.component';\nimport { PaymentService } from './payment.service';\nimport { NgxStripeModule } from '@nomadreservations/ngx-stripe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(PaymentRoutes),\n    NgxStripeModule.forRoot('pk_test_fgXaq2pYYYwd4H3WbbIl4l8D00A63MKWFc'),\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    PaymentService\n  ],\n  declarations: [\n    PaymentComponent,\n  ]\n})\nexport class PaymentModule {}\n","import { Routes } from '@angular/router';\n\nimport { PaymentComponent } from './payment.component';\n\nexport const PaymentRoutes: Routes = [\n  {\n    path: '',\n    component: PaymentComponent,\n    data: {\n      title: 'Payment'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class PaymentService {\n\n\n    constructor(private http: HttpClient) {}\n    private apiUrl = environment.apiUrl;\n\n    // Items Predictor Analysis \n    login(uname,password): Observable<any> {\n            const formData = new FormData();\n\n            formData.append('email', uname);\n            formData.append('password', password);\n            return this.http.post(this.apiUrl +\"/users/applogin\", formData)\n            .pipe(map((response: Response) => {\n                            return response;\n                        })\n            );\n    }\n\n}\n\n\n"],"sourceRoot":""}