{"version":3,"sources":["webpack:///./src/app/roles-users/dialog-overview-example.html","webpack:///./src/app/roles-users/roles-overview-example.html","webpack:///./src/app/roles-users/roles-users.component.html","webpack:///./src/app/roles-users/roles-users.component.scss","webpack:///./src/app/roles-users/roles-users.component.ts","webpack:///./src/app/roles-users/roles-users.module.ts","webpack:///./src/app/roles-users/roles-users.routing.ts"],"names":[],"mappings":"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","file":"roles-users-roles-users-module.js","sourcesContent":["module.exports = \"<div class=\\\"AddUserPopup\\\"> \\n<h1 mat-dialog-title>Add User</h1>\\n<div mat-dialog-content>\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.display_name\\\" placeholder=\\\"Display Name\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.email\\\" placeholder=\\\"Email\\\">\\n  </mat-form-field>\\n  <div class=\\\"selectIcon\\\">\\n     <select fxFlex.gt-sm=\\\"50%\\\" fxFlex.gt-xs=\\\"50%\\\" fxFlex=\\\"100\\\" class=\\\"sa_select form-control\\\" name=\\\"user_type\\\" [(ngModel)]=\\\"data.user_type\\\" (ngModelChange)=\\\"loadDentist($event)\\\">\\n      <option value =\\\"\\\" selected>Select User Type</option>\\n      <option value =\\\"1\\\">Employee</option>\\n      <option value =\\\"2\\\">Receptionist</option>\\n   </select> \\n </div>\\n <div class=\\\"selectIcon\\\" *ngIf=\\\"show_dentist == true\\\">\\n  <select class=\\\"sa_select sa_select_set_roles form-control\\\" name=\\\"dentist_id\\\" [(ngModel)]=\\\"data.dentist_id\\\" >\\n      <option value =\\\"\\\" selected=\\\"true\\\">Select Dentist</option>\\n      <option *ngFor=\\\"let dentist of data.dentists\\\" value =\\\"{{dentist.providerId}}\\\">{{dentist.name}}</option>\\n   </select> \\n </div>\\n   <input type='hidden' tabindex=\\\"1\\\" [(ngModel)]=\\\"data.password\\\"  placeholder=\\\"Email\\\">\\n  <!--  <input type=\\\"file\\\" (change)=\\\"onChange($event)\\\"> -->\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"data\\\"  tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\\n</div>\"","module.exports = \"<div class=\\\"SetRolesPopup_outer\\\">\\n<h1 mat-dialog-title>Set Roles</h1>\\n<div class=\\\"SetRolesPopup\\\">\\n  <div class=\\\"selectIcon\\\">\\n  <select class=\\\"sa_select sa_select_set_roles form-control\\\" name=\\\"user_type\\\" [(ngModel)]=\\\"data.user_type\\\" (ngModelChange)=\\\"loadPermisions($event)\\\">\\n      <option value =\\\"\\\" selected=\\\"true\\\">Select User Type</option>\\n      <option *ngFor=\\\"let role of data.roles\\\" value =\\\"{{role.id}}\\\">{{role.role}}</option>\\n   </select> \\n </div>\\n  <div class=\\\"SetRoles_checkbox\\\">\\n    <mat-checkbox class=\\\"role_permissions\\\" *ngIf=\\\"selected_id <=4\\\" [(ngModel)]=\\\"data.selectedRole['dashboard1_'+selected_id]\\\">Dashboard 1</mat-checkbox>\\n    <mat-checkbox class=\\\"role_permissions\\\" *ngIf=\\\"selected_id <=4\\\" [(ngModel)]=\\\"data.selectedRole['dashboard2_'+selected_id]\\\">Dashboard 2</mat-checkbox>\\n    <mat-checkbox class=\\\"role_permissions\\\" *ngIf=\\\"selected_id <4\\\" [(ngModel)]=\\\"data.selectedRole['dashboard3_'+selected_id]\\\">Dashboard 3</mat-checkbox>\\n    <mat-checkbox class=\\\"role_permissions\\\" *ngIf=\\\"selected_id <4\\\" [(ngModel)]=\\\"data.selectedRole['dashboard4_'+selected_id]\\\">Dashboard 4</mat-checkbox>\\n    <mat-checkbox class=\\\"role_permissions\\\" *ngIf=\\\"selected_id != 3 && selected_id != 4 && selected_id >= 1\\\" [(ngModel)]=\\\"data.selectedRole['dashboard5_'+selected_id]\\\">Dashboard 5</mat-checkbox>\\n  </div>\\n\\n  <!--  <input type=\\\"file\\\" (change)=\\\"onChange($event)\\\"> -->\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"data\\\"  tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\\n</div>\"","module.exports = \"<mat-card class=\\\"roles_users\\\">\\n    <mat-card-content>\\n        <mat-card-title>Users <div class=\\\"sa-pull-right\\\"><button class=\\\"mat-raised-button mat-gray mr-15\\\" mat-raised-button (click)=\\\"openRoleDialog()\\\">Set Roles</button><button class=\\\"mat-raised-button mat-gray\\\" mat-raised-button (click)=\\\"openDialog()\\\">Add User</button></div>\\n        </mat-card-title>\\n\\n        <mat-form-field>\\n            <input matInput type='text' class=\\\"form-control\\\" placeholder='Type to filter Users name...' (keyup)='updateFilter($event)'\\n            />\\n        </mat-form-field>\\n        <ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\n       <ngx-datatable-column name=\\\"Sr\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Id</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span>\\n            {{value}}\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"displayName\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Display Name</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'displayName')\\\" *ngIf=\\\"!editing[rowIndex + '-displayName']\\\">\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'displayName', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-displayName']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n       <ngx-datatable-column name=\\\"Email\\\">\\n       \\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'email')\\\" *ngIf=\\\"!editing[rowIndex + '-email']\\\">\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'email', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-email']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n       <ngx-datatable-column name=\\\"usertype\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>User Type</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span >\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'contactName', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-contactName']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Created\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span>\\n            {{value| date}}\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Actions</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" style=\\\"width:266px!important;\\\">\\n           \\n        <!--   <a [routerLink]=\\\"['/importcsv',value]\\\" class=\\\"action_btn golden\\\" title= 'Import CSV'><i class=\\\"ti-pencil  m-r-10\\\"></i></a> -->\\n          <button class=\\\"action_btn danger\\\" mat-menu-item (click) = \\\"deleteUser(rowIndex)\\\">\\n         <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n        </ngx-datatable>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".lds-roller div::after {\\n  background: black; }\\n\\n.spinner {\\n  position: relative;\\n  background: none; }\\n\\n.mat-dialog-container {\\n  min-width: 700px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVtZW1iZXJzL2NsaWVudDIvc3JjL2FwcC9yb2xlcy11c2Vycy9yb2xlcy11c2Vycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFpQixFQUNwQjs7QUFDRDtFQUNJLG1CQUFrQjtFQUNsQixpQkFBZ0IsRUFDbkI7O0FBQ0Q7RUFFSSw0QkFBMkIsRUFFOUIiLCJmaWxlIjoic3JjL2FwcC9yb2xlcy11c2Vycy9yb2xlcy11c2Vycy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sZHMtcm9sbGVyIGRpdjo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IGJsYWNrO1xufVxuLnNwaW5uZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLm1hdC1kaWFsb2ctY29udGFpbmVyIHtcblxuICAgIG1pbi13aWR0aDogNzAwcHggIWltcG9ydGFudDtcblxufSJdfQ== */\"","import { Component, Inject , ViewChild, AfterViewInit } from '@angular/core';\nimport { RolesUsersService } from './roles-users.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA,MatInputModule } from '@angular/material';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { EventEmitter , Output, Input} from '@angular/core';\nimport { DentistService } from '../dentist/dentist.service';\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example.html',\n})\n\n\nexport class DialogOverviewExampleDialogComponent {\n   public clinic_id:any ={};\nshow_dentist = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n    @Output() public onDentist: EventEmitter<any> = new EventEmitter();\n   public selected_id;\n\n    loadDentist(val) {\n      if(val == '4')\n        this.show_dentist = true;\n    }\n}\n\n@Component({\n  selector: 'app-roles-overview-example-dialog',\n  templateUrl: './roles-overview-example.html',\n})\n\n\nexport class RolesOverviewExampleDialogComponent {\n   public clinic_id:any ={};\n  constructor(\n    public rolesRef: MatDialogRef<RolesOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.rolesRef.close();\n  }\n  //   loadPermisions(val) {\n  //   data.selected_id = val;\n  // }\n   @Output() public onAdd: EventEmitter<any> = new EventEmitter();\n   public selected_id;\n    loadPermisions(val) {\n      this.selected_id =val;\n      this.onAdd.emit(val);\n    }\n}\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './roles-users.component.html',\n  styleUrls: ['./roles-users.component.scss']\n})\nexport class RolesUsersComponent implements AfterViewInit {\n  display_name: string;\n  email: string;\n  user_type='';\n  fileInput: any ;\n  public clinic_id;\n  dentist_id = '';\npassword:string;\ndentists:any=[];\n  ngAfterViewInit() {\n    $('.header_filters').removeClass('hide_header'); \n    $('.header_filters').removeClass('flex_direct_mar'); \n    \n    this.getUsers();\n    this.getRoles();\n    this.getDentists();\n    this.clinic_id = this.route.snapshot.paramMap.get(\"id\");\n        $('#title').html('Users');\n        $('.external_clinic').show();\n        $('.dentist_dropdown').hide();\n        $('.header_filters').addClass('flex_direct_mar');\n  }\n  editing = {};\n  rows = [];\n  temp = [...data];\n\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [{ prop: 'sr' }, { name: 'displayName' }, { name: 'email' }, { name: 'usertype' }, { name: 'created' }];\n\n  @ViewChild(RolesUsersComponent) table: RolesUsersComponent;\n  constructor(private rolesUsersService: RolesUsersService, public dialog: MatDialog,private _cookieService: CookieService, private router: Router, private route: ActivatedRoute, private dentistService: DentistService) {\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n  }\n  private warningMessage: string;\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n      width: '250px',\n      data: { display_name: this.display_name, email: this.email, user_type: this.user_type, password: this.password,dentists:this.dentists,dentist_id:this.dentist_id }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n       if(result != undefined) {\n     this.rolesUsersService.checkUserEmail(result.email).subscribe((res) => {\n           if(res.message == 'success'){\n           if(res.data <=0)\n           this.add_user(result.display_name, result.email, result.user_type, 'jeeveanalytics',this.clinic_id,result.dentist_id);\n            else\n            alert(\"Email Already Exists!\");\n           }\n        }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    });\n   }\n    });\n  }\n  openRoleDialog(): void {\n    const rolesRef = this.dialog.open(RolesOverviewExampleDialogComponent, {\n      width: '250px',\n      data: { display_name: this.display_name, email: this.email, user_type: this.user_type, password: this.password, roles:this.roles, selectedRole:this.selectedRole, selected_id:this.selected_id,dentists:this.dentists}\n    });\n    const sub = rolesRef.componentInstance.onAdd.subscribe((val) => {\n    this.selected_id = val;\n    });\n    rolesRef.afterClosed().subscribe(result => {\n     if(result != undefined) {\n      this.roles.forEach(res1 => {\n          var checkedRoles1='';\n          var checkedRoles =[];\n          if(result.selectedRole['dashboard1_'+res1.id])\n            checkedRoles.push('dashboard1');\n           if(result.selectedRole['dashboard2_'+res1.id])\n            checkedRoles.push('dashboard2');\n           if(result.selectedRole['dashboard3_'+res1.id])\n            checkedRoles.push('dashboard3');\n           if(result.selectedRole['dashboard4_'+res1.id])\n            checkedRoles.push('dashboard4');\n           if(result.selectedRole['dashboard5_'+res1.id])\n            checkedRoles.push('dashboard5');\n            var checkedRoles1 = checkedRoles.join();\n              this.rolesUsersService.saveRoles(res1.id, checkedRoles1).subscribe((res) => {\n                 if(res.message == 'success'){\n                  alert('Permissions Saved!');\n                  this.getRoles();\n                 }\n              }, error => {\n                this.warningMessage = \"Please Provide Valid Inputs!\";\n              });\n         });\n    }\n    });\n  }\n    // Get Dentist\n    getDentists() {\n      this.dentistService.getDentists(this.clinic_id).subscribe((res) => {\n           if(res.message == 'success'){\n            res.data.forEach(result => {\n              var temp=[];\n            temp['providerId'] = result.providerId;\n            temp['name'] = result.name;\n            this.dentists.push(temp);\n            });\n           }\n        }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n        }    \n        );\n  }\n\n  add_user(display_name, email, user_type, password,clinic_id,dentist_id) {\n  if(dentist_id =='' || dentist_id == undefined)\n    dentist_id ='';\n  this.rolesUsersService.addRoleUser(display_name, email, user_type, password,clinic_id,dentist_id).subscribe((res) => {\n       //if(res.message == 'success'){\n        alert('User Added');\n        this.getUsers();\n     //  }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    });\n  }\n\n  private getUsers() {\n  this.rolesUsersService.getUsers().subscribe((res) => {\n       if(res.message == 'success'){\n        this.rows = res.data;\n        this.temp = [...res.data];        \n        this.table = data;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    });\n  }\n\n  public roles =[];\n  public abc=true;\n  public selectedRole: any[] = [];\n\n  public selected_id:any;\n  private getRoles() {      \n  this.rolesUsersService.getRoles().subscribe((res) => {\n       if(res.message == 'success'){ \n        this.roles=[];\n         res.data.forEach(result => {\n          if(result.id != '1' && result.id != '2') {\n          this.selectedRole['dashboard1_'+result.id] = false;\n          this.selectedRole['dashboard2_'+result.id] = false;\n          this.selectedRole['dashboard3_'+result.id] = false;\n          this.selectedRole['dashboard4_'+result.id] = false;\n          this.selectedRole['dashboard5_'+result.id] = false;\n\n            var temp=[];\n            temp['id'] = result.id;\n            temp['role'] = result.role;\n            temp['permisions'] = result.permisions;\n            this.roles.push(temp);\n            var dashboards = result.permisions.split(',');\n            dashboards.forEach(results=>{\n               this.selectedRole[results+'_'+result.id] = true;\n            })\n          }\n         });\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    });\n\n  }\n\n  private deleteUser(row) {\n           if(confirm(\"Are you sure to delete User?\")) {\n    if(this.rows[row]['id']) {\n  this.rolesUsersService.deleteUser(this.rows[row]['id']).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('User Removed');\n          this.getUsers();\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n    }\n    else {\n      this.rows.splice(row, 1);\n    this.rows = [...this.rows];\n\n    }\n  }\n  }\n\n  addDentist() {\n    console.log(this.rows);\n    var temp ={};\n    temp['providerId'] ='Enter Provider Id';\n    temp['name'] ='Enter Name';\n    var length = this.rows.length;\n    this.editing[length + '-providerId'] = true;\n    this.editing[length + '-name'] = true;\n    \n    this.rows.push(temp);\n    this.table =data;\n  }\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.displayName.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n  }\n\n updateValue(event, cell, rowIndex) {\n  if((this.rows[rowIndex]['providerId']  == 'Enter Provider Id') || (this.rows[rowIndex]['name']  == 'Enter Name')) {\n    this.editing[length + '-providerId'] = true;\n    this.editing[length + '-name'] = true;\n  }\n  else {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rolesUsersService.updateRoleUser(this.rows[rowIndex]['id'], this.rows[rowIndex][cell],cell).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('User Details Updated');\n         // this.getDentists();\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );  \n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n  }\n  }\n\n  enableEditing(rowIndex, cell) {\n    this.editing[rowIndex + '-' + cell] = true;\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { RolesUsersService } from './roles-users.service';\nimport { RolesUsersComponent,\n  DialogOverviewExampleDialogComponent,\n  RolesOverviewExampleDialogComponent  } from './roles-users.component';\nimport { RolesUsersRoutes } from './roles-users.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(RolesUsersRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule,\n    FormsModule,\n    MatFormFieldModule\n  ],\n  providers: [\n    RolesUsersService\n  ],\n  entryComponents: [DialogOverviewExampleDialogComponent,RolesOverviewExampleDialogComponent],\n  declarations: [ RolesUsersComponent,\n    DialogOverviewExampleDialogComponent,RolesOverviewExampleDialogComponent ]\n})\nexport class RolesUsersModule { }","import { Routes } from '@angular/router';\n\nimport { RolesUsersComponent } from './roles-users.component';\n\nexport const RolesUsersRoutes: Routes = [\n  {\n    path: '',\n    component: RolesUsersComponent,\n    data: {\n      title: 'Roles Users'\n    }\n  }\n];\n"],"sourceRoot":""}