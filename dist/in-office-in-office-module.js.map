{"version":3,"sources":["webpack:///./src/app/in-office/dialog-overview-example.html","webpack:///./src/app/in-office/in-office.component.html","webpack:///./src/app/in-office/in-office.component.scss","webpack:///./src/app/in-office/in-office.component.ts","webpack:///./src/app/in-office/in-office.module.ts","webpack:///./src/app/in-office/in-office.routing.ts","webpack:///./src/app/in-office/in-office.service.ts","webpack:///./src/app/in-office/update-in-office.html"],"names":[],"mappings":"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","file":"in-office-in-office-module.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title>Add In-Office Plan</h1>\\n<div mat-dialog-content>\\n\\n  <mat-form-field>\\n\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.patient_name\\\" placeholder=\\\"Patient Name\\\"  class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n   \\n  </mat-form-field>\\n \\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.patient_email\\\" placeholder=\\\"Email\\\" id=\\\"email\\\" [formControl]=\\\"email\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n    <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n  </mat-form-field>\\n  <input matInput style=\\\"color: #FF0000;\\\" tabindex=\\\"1\\\" *ngIf=\\\"valplans\\\" [(ngModel)]=\\\"valplans\\\" required=\\\"true\\\" readonly>\\n\\n  <mat-form-field>\\n      <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.plan_name\\\" placeholder=\\\"Plan Name\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.plan_description\\\" placeholder=\\\"Plan Description\\\"\\n\\n      class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n    </mat-form-field>\\n\\n\\n\\n    <mat-form-field>\\n        <input matInput tabindex=\\\"1\\\" id=\\\"total_amount\\\"  [(ngModel)]=\\\"data.total_amount\\\"  type=\\\"number\\\" min=\\\"0\\\"  placeholder=\\\"Plan Fee\\\" class=\\\"form-control-dialog\\\" (change)=\\\"deposite_amount(data.deposite_amount)\\\" required=\\\"true\\\">\\n      </mat-form-field>\\n\\n\\n    <mat-form-field>\\n        <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.setup_fee\\\" placeholder=\\\"Setup Fee\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n     </mat-form-field>\\n\\n\\n    <mat-form-field>\\n        <input matInput tabindex=\\\"1\\\" id=\\\"deposite_amount\\\" type=\\\"number\\\" min=\\\"0\\\"  (change)=\\\"deposite_amount(data.deposite_amount)\\\" [(ngModel)]=\\\"data.deposite_amount\\\" placeholder=\\\"Deposited Amount\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field>\\n        <input matInput tabindex=\\\"1\\\" id=\\\"balance_amount\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.balance_amount\\\" placeholder=\\\"Balance Amount\\\" class=\\\"form-control-dialog\\\" readonly>\\n      </mat-form-field>\\n        \\n        <mat-form-field>\\n            <mat-label>Frequency of payments</mat-label> \\n            <mat-select tabindex=\\\"1\\\" [(ngModel)]= \\\"data.payment_frequency\\\" required=\\\"true\\\" >\\n              <mat-option value=\\\"MONTHLY\\\">MONTHLY</mat-option>\\n              <mat-option value=\\\"WEEKLY\\\">WEEKLY</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        <mat-form-field>\\n            <input matInput tabindex=\\\"1\\\" id=\\\"duration\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.duration\\\" placeholder=\\\"Duration (Period of Loan)\\\" (change)=\\\"durationcal(data.duration)\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n          </mat-form-field>\\n\\n          \\n          <mat-form-field>\\n              <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" step=\\\".01\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.monthly_weekly_payment\\\" placeholder=\\\"Monthly/Weekly Payment\\\" class=\\\"form-control-dialog\\\" readonly>\\n            </mat-form-field>\\n      \\n            <mat-form-field>\\n                <input matInput tabindex=\\\"1\\\" type=\\\"date\\\" [(ngModel)]=\\\"data.start_date\\\" placeholder=\\\"Start Date\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n              </mat-form-field>\\n\\n              <mat-form-field>\\n                  <input matInput tabindex=\\\"1\\\" type=\\\"date\\\" [(ngModel)]=\\\"data.due_date\\\" placeholder=\\\"Due Date\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n                </mat-form-field>\\n          \\n<!--        \\n            <mat-form-field>\\n                <mat-label>Start Date</mat-label> \\n                <input matInput [matDatepicker]=\\\"picker1\\\" tabindex=\\\"1\\\" [(ngModel)]=\\\"data.start_date\\\" placeholder=\\\"Choose a date\\\" required=\\\"true\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker1></mat-datepicker>\\n\\n              </mat-form-field>\\n\\n   \\n              <mat-form-field>\\n                <mat-label>Monthly Due Date</mat-label> \\n                <input matInput [matDatepicker]=\\\"picker2\\\" tabindex=\\\"1\\\" [(ngModel)]=\\\"data.due_date\\\" placeholder=\\\"Choose a date\\\" required=\\\"true\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker2></mat-datepicker>\\n              </mat-form-field>  -->\\n\\n              <!--  <input type=\\\"file\\\" (change)=\\\"onChange($event)\\\"> -->\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"save(data)\\\" tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\"","module.exports = \"\\n<input type=\\\"button\\\" id=\\\"clinic_initiate\\\" (click) = \\\"initiate_clinic()\\\"  [style.display]=\\\"'none'\\\">\\n\\n<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>In-Office Payment Plans <button class=\\\"sa-pull-right mat-raised-button mat-gray\\\" mat-raised-button (click)=\\\"openDialog()\\\">Add In-Office Plan</button></mat-card-title>\\n\\n        <mat-form-field>\\n            <input matInput type='text' class=\\\"form-control\\\" placeholder='Type to filter Plan name...' (keyup)='updateFilter($event)'\\n            />\\n        </mat-form-field>\\n        <ngx-datatable #table class='material' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows' >\\n       <ngx-datatable-column name=\\\"Id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Id</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span>\\n            {{rowIndex+1}} \\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column prop=\\\"patient_name\\\" name=\\\"patient_name\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Patient Name</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n             {{value}}\\n     </ng-template>\\n    </ngx-datatable-column>\\n       <ngx-datatable-column prop=\\\"patient_email\\\" name=\\\"patient_email\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Email</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n           {{value}}\\n      </ng-template>\\n\\n    </ngx-datatable-column>\\n\\n\\n    <!-- <ngx-datatable-column prop=\\\"plan_name\\\" name=\\\"plan_name\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n       <span>Plan Name</span>\\n     </ng-template>\\n       <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n         <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'plan_name')\\\" *ngIf=\\\"!editing[rowIndex + '-plan_name'] && value != ''\\\">\\n           {{value}}\\n         </span>\\n         \\n       </ng-template>\\n     </ngx-datatable-column> -->\\n\\n\\n       <ngx-datatable-column prop=\\\"amount_owing\\\" name=\\\"amount_owing\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n       <span>Amount Owing</span>\\n     </ng-template>\\n       <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          $ {{value}}\\n        </ng-template>\\n     </ngx-datatable-column>\\n\\n\\n     <ngx-datatable-column prop=\\\"amount_paid\\\" name=\\\"amount_paid\\\">\\n      <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n     <span>Amount Paid</span>\\n   </ng-template>\\n     <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          $ {{value}}\\n      </ng-template>\\n   </ngx-datatable-column>\\n   \\n      \\n   <ngx-datatable-column prop=\\\"total_amount\\\" name=\\\"total_amount\\\">\\n      <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n     <span>Total Amount</span>\\n   </ng-template>\\n     <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n        $ {{value}}\\n      </ng-template>\\n   </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Actions </span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" style=\\\"width:266px!important;\\\">\\n            <a [routerLink]=\\\"['/in-office-history',value]\\\" class=\\\"action_btn golden\\\" title= 'In-office History'><i class=\\\"ti-eye  m-r-10\\\"></i></a>{{rows.clinic_id}}\\n            <a class=\\\"action_btn golden\\\" (click)=\\\"openUpdateDialog(value)\\\" title= 'Update Patient'><i class=\\\"ti-settings  m-r-10\\\"></i></a>\\n\\n          <button class=\\\"action_btn danger\\\" mat-menu-item (click) = \\\"deletePlan(rowIndex)\\\">\\n         \\n         <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n        </ngx-datatable>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".lds-roller div::after {\\n  background: black; }\\n\\n.spinner {\\n  position: relative;\\n  background: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVtZW1iZXJzL2NsaWVudDIvc3JjL2FwcC9pbi1vZmZpY2UvaW4tb2ZmaWNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWlCLEVBQ3BCOztBQUNEO0VBQ0ksbUJBQWtCO0VBQ2xCLGlCQUFnQixFQUNuQiIsImZpbGUiOiJzcmMvYXBwL2luLW9mZmljZS9pbi1vZmZpY2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGRzLXJvbGxlciBkaXY6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcbn1cbi5zcGlubmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbn0iXX0= */\"","import { Component, Inject ,EventEmitter,Output, ViewChild, AfterViewInit } from '@angular/core';\nimport { InOfficeService } from './in-office.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormControl, FormGroupDirective,  NgForm,  Validators} from '@angular/forms';\nimport { NotifierService } from 'angular-notifier';\nimport { empty } from 'rxjs';\n\ndeclare var require: any;\nconst data: any = [];\n\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example.html',\n})\n\nexport class DialogOverviewExampleDialogComponent {\n\n\n  public clinic_id:any ={};\n  private warningMessage: string;\n  public valplans;\n  public totalAmount;\n  public balanceamt;\n  public monthlyweeklyamt;\n  public durationval;\n  constructor(\n    \n    private inofficeService: InOfficeService,\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n\n     save(data) {\n      this.clinic_id = $('#currentClinicid').attr('cid');\n\n      this.inofficeService.getemailvalidation(data.patient_email,this.clinic_id).subscribe((res) => {\n    \n        if(res.message == 'error'){\n        this.valplans=res.data['message'];\n        $('#email').focus();\n        return false;\n\n//            $('#email').first().focus();\n\n            }else{\n              if(data.patient_name != undefined && data.patient_email != undefined  && data.plan_name != undefined && data.plan_description != undefined && data.total_amount != undefined && data.setup_fee != undefined && data.deposite_amount != undefined && data.balance_amount != undefined && data.payment_frequency != undefined && data.duration != undefined && data.monthly_weekly_payment != undefined && data.start_date != undefined && data.due_date != undefined){\n                this.dialogRef.close(data);\n              }\n            }\n      }, error => {\n        this.warningMessage = \"Please Provide Valid Inputs!\";\n        return false;\n      }    \n      ); \n      \n          $('.form-control-dialog').each(function(){\n          var likeElement = $(this).click();\n        });\n       // console.log(data)\n     \n         }\n\n\n         \n  deposite_amount(depositeamount){\n      this.totalAmount = $('#total_amount').val();\n      this.balanceamt = this.totalAmount-depositeamount;       \n      this.data.balance_amount = this.balanceamt;\n      this.durationcal(this.durationval);\n      \n      }\n  public durationcal(durationval){\n    this.durationval= durationval;\n        this.monthlyweeklyamt =this.balanceamt/this.durationval;\n        this.data.monthly_weekly_payment= this.monthlyweeklyamt.toFixed(2);\n        // alert(this.monthlyweeklyamt);\n      }\n\n      email = new FormControl('', [Validators.required, Validators.email]);\n\n      getErrorMessage() {\n        return this.email.hasError('required')\n          ? 'You must enter a value'\n          : this.email.hasError('email')\n            ? 'Not a valid email'\n            : '';\n        }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n@Component({\n  selector: 'app-update-in-office-dialog',\n  templateUrl: './update-in-office.html',\n})\nexport class UpdateInOfficeDialogComponent {\n\n\n  constructor(private inofficeService: InOfficeService,\n    public dialogUpdateRef: MatDialogRef<UpdateInOfficeDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    update(data) {\n         \n      $('.form-control-dialog').each(function(){\n      var likeElement = $(this).click();\n    });\n    // console.log(data);\n  \n      if(data.patient_name != undefined && data.patient_address != undefined  && data.patient_dob != undefined && data.patient_age != undefined && data.patient_gender != undefined && data.patient_phone_no != undefined && data.patient_home_phno != undefined){\n\n          this.dialogUpdateRef.close(data);\n       }\n     }\n    \n    onNoClick(): void {\n    this.dialogUpdateRef.close();\n  }\n}\n\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './in-office.component.html',\n  styleUrls: ['./in-office.component.scss']\n})\nexport class InOfficeComponent implements AfterViewInit {\n  private readonly notifier: NotifierService;\n  name: string;\n  address: string;\n  contact_name: string;\n  fileInput: any ;\n  clinic_id: any;\n\n  treat = new FormControl();\n\n  ngAfterViewInit() {\n    this.initiate_clinic();\n        $('#title').html('In-Office Payment Plan');\n        $('.header_filters').removeClass('hide_header');\n        $('.external_clinic').show();\n        $('.dentist_dropdown').hide();\n        $('.header_filters').addClass('flex_direct_mar');\n  \n  }\n  editing = {};\n  rows = [];\n \n  temp = [...data];\n  table;\n  loadingIndicator = true;\n  reorderable = true;\n  public totalAmount;\n\n  public patient_name;\n  public patient_email;\n  public plan_name;\n  public plan_description;\n  public total_amount;\n  public setup_fee;\n  public deposite_amount;\n  public balance_amount;\n  public payment_frequency;\n  public duration;\n  public monthly_weekly_payment;\n  public start_date;\n  public due_date;\n  public patient_address;\n  public patient_dob ;\n  public patient_age;\n  public patient_gender;\n  public patient_phone_no;\n  public patient_home_phno;\n  public patient_id;\n \n  constructor(notifierService: NotifierService,private inofficeService: InOfficeService, public dialog: MatDialog,private _cookieService: CookieService, private router: Router) {\n    this.notifier = notifierService;\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n  }\n  private warningMessage: string;\n\n  initiate_clinic(){  \n    this.clinic_id = $('#currentClinicid').attr('cid');\n  if(this.clinic_id)\n      this.getInofficeMembers();\n    }\n    \n    \n    private getInofficeMembers() {\n    this.rows=[];\n    this.inofficeService.getInofficeMembers(this.clinic_id).subscribe((res) => {\n    \n         if(res.message == 'success'){\n          this.rows = res.data;\n          // console.log(this.rows);\n\n          this.temp = [...res.data];        \n          this.table = data;\n         }\n      }, error => {\n        this.warningMessage = \"Please Provide Valid Inputs!\";\n      }    \n      );\n  \n    }\n\n    openDialog(): void {\n    \n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n      width: '250px',\n      data: { patient_name: this.patient_name, patient_email: this.patient_email, plan_name: this.plan_name ,plan_description: this.plan_description , clinic_id: this.clinic_id,total_amount:this.total_amount,setup_fee:this.setup_fee,deposite_amount:this.deposite_amount,balance_amount:this.balance_amount,payment_frequency:this.payment_frequency,duration:this.duration,monthly_weekly_payment:this.monthly_weekly_payment,start_date:this.start_date,due_date:this.due_date   }\n\n    });\n   \n    dialogRef.afterClosed().subscribe(result => {\n   this.inofficeService.addPaymentPlans(result.patient_name, result.patient_email, result.plan_name,result.plan_description,result.clinic_id,result.total_amount,result.setup_fee,result.deposite_amount,result.balance_amount,result.payment_frequency,result.duration,result.monthly_weekly_payment,result.start_date,result.due_date).subscribe((res) => {\n\n   if(res.message == 'success'){\n    \n            this.notifier.notify( 'success', 'New Patient Added' ,'vertical');\n            this.getInofficeMembers();\n           }\n        }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n        }\n        );  \n        });\n  }\n\n  openUpdateDialog(patientid): void {\n   \n    this.inofficeService.getInofficeMembersByID(patientid,this.clinic_id).subscribe(updateres => {\n\n    const dialogUpdateRef = this.dialog.open(UpdateInOfficeDialogComponent, {\n     width: '250px',\n     data: {patient_name: updateres.data[0].patient_name ,patient_address: updateres.data[0].patient_address,patient_dob: updateres.data[0].patient_dob,patient_age:updateres.data[0].patient_age,patient_gender:updateres.data[0].patient_gender,patient_phone_no:updateres.data[0].patient_phone_no,patient_home_phno:updateres.data[0].patient_home_phno,patient_id:patientid}\n \n     });\n    \n\n  dialogUpdateRef.afterClosed().subscribe(result => {\n    if(result) {\n      $('.ajax-loader').show();     \n    this.inofficeService.updatePatientsDetails(result.patient_name,result.patient_address,result.patient_dob,result.patient_age,result.patient_gender,result.patient_phone_no,result.patient_home_phno,result.patient_id).subscribe((res) => {   \n      $('.ajax-loader').hide();      \n       if(res.message == 'success'){    \n            this.notifier.notify( 'success', 'Patient Updated' ,'vertical');\n             }\n        }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n        });  \n        }\n        });\n      });\n  }\n\n  public deletePlan(row) {\n           if(confirm(\"Are you sure to delete this plan?\")) {\n              if(this.rows[row]['id']) {\n                this.inofficeService.deletePlan(this.rows[row]['id'],this.clinic_id).subscribe((res) => {\n                 if(res.message == 'success'){\n          \n                  this.notifier.notify( 'success', 'Plan Removed' ,'vertical');\n                    this.getInofficeMembers();\n                 }\n              }, error => {\n                this.warningMessage = \"Please Provide Valid Inputs!\";\n              }    \n              );\n              }\n              else {\n                this.getInofficeMembers();\n                this.rows.splice(row, 1);\n              this.rows = [...this.rows];\n              }\n            }\n  }\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n      // filter our data\n    const temp = this.temp.filter(function(d) {    \n      return d.patient_name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n  }\n\n  enableEditing(rowIndex, cell) {\n\n    this.editing[rowIndex + '-' + cell] = true;\n//console.log(this.editing);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { InOfficeService } from './in-office.service';\nimport { InOfficeComponent,DialogOverviewExampleDialogComponent,UpdateInOfficeDialogComponent  } from './in-office.component';\nimport { InOfficeRoutes } from './in-office.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(InOfficeRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [\n    InOfficeService\n  ],\n  entryComponents: [DialogOverviewExampleDialogComponent,UpdateInOfficeDialogComponent],\n  declarations: [ InOfficeComponent,DialogOverviewExampleDialogComponent,UpdateInOfficeDialogComponent ]\n})\nexport class InOfficeModule { }","import { Routes } from '@angular/router';\n\nimport { InOfficeComponent } from './in-office.component';\n\nexport const InOfficeRoutes: Routes = [\n  {\n    path: '',\n    component: InOfficeComponent,\n    data: {\n      title: 'In Office'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n\n@Injectable()\nexport class InOfficeService {\n\n   public token: string;\n   public api_url: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        \n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n\n       // Delete Clinic\n    deletePlan(id,clinic_id,user_id = this._cookieService.get(\"userid\"),token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n    formData.append('patient_id', id);\n    formData.append('clinic_id', clinic_id);\n    formData.append('user_id', user_id);\n    formData.append('token', token);\n\n        return this.http.post(this.apiUrl +\"/InofficePayments/deleteInofficeMembers/\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n  \n\n    addPaymentPlans(patient_name, patient_email,plan_name,plan_description,clinic_id,total_amount,setup_fee,deposite_amount,balance_amount,payment_frequency,duration,monthly_weekly_payment,start_date,due_date,token =this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n        formData.append('patient_name', patient_name);\n        formData.append('patient_email', patient_email);\n        formData.append('plan_name',plan_name);\n        formData.append('plan_description', plan_description);\n        formData.append('user_id', this._cookieService.get(\"userid\"));\n        formData.append('clinic_id', clinic_id);\n        formData.append('total_amount',total_amount);\n        formData.append('setup_fee', setup_fee);\n        formData.append('deposite_amount',deposite_amount );\n        formData.append('balance_amount',balance_amount );\n        formData.append('payment_frequency',payment_frequency );\n        formData.append('duration',duration );\n        formData.append('monthly_weekly_payment',monthly_weekly_payment );\n        formData.append('start_date',start_date );\n        formData.append('due_date',due_date );\n        formData.append('token', token);\n\n            return this.http.post(this.apiUrl +\"/InofficePayments/addPaymentPlans/\", formData)\n            .pipe(map((response: Response) => {\n                // console.log(response);\n                            return response;\n            })\n            );\n        }\n\n    getInofficeMembers(clinic_id,token = this._cookieService.get(\"token\"),user_id = this._cookieService.get(\"userid\")): \n    Observable<any> {\n        return this.http.get(this.apiUrl +\"/InofficePayments/getInofficeMembers?token=\"+this._cookieService.get(\"token\")+\"&clinic_id=\"+clinic_id+\"&user_id=\"+this._cookieService.get(\"userid\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n            // console.log(response);\n                    return response;\n                })\n        );\n    }\n    updatePatientsDetails(patient_name, patient_address,patient_dob,patient_age,patient_gender,patient_phone_no,patient_home_phno,patient_id,token =this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n        formData.append('patient_name', patient_name);\n        formData.append('patient_address', patient_address);\n        formData.append('patient_dob',patient_dob);\n        formData.append('patient_age', patient_age);\n        formData.append('patient_gender', patient_gender);\n        formData.append('patient_phone_no',patient_phone_no);\n        formData.append('patient_home_phno', patient_home_phno);\n        formData.append('patient_id', patient_id);\n        formData.append('token', token);\n       \n            return this.http.post(this.apiUrl +\"/InofficePayments/updatePatientsDetails/\", formData)\n            .pipe(map((response: Response) => {\n\n                            return response;\n            })\n            );\n        }\n\n    getInofficeMembersByID(patient_id,clinic_id,user_id = this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/InofficePayments/getInofficeMembersByID?patient_id=\"+patient_id+\"&user_id=\"+this._cookieService.get(\"userid\")+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                })\n        );\n    }\n\n    getemailvalidation(patient_email,clinic_id,user_id = this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Patients/getemailvalidation?patient_email=\"+patient_email+\"&user_id=\"+this._cookieService.get(\"userid\")+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                })\n        );\n    }\n   \n   \n    \n}\n\n","module.exports = \"<h1 mat-dialog-title>Update Patient Details</h1>\\n<div mat-dialog-content>\\n\\n  <mat-form-field>\\n\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.patient_name\\\" placeholder=\\\"Patient Name\\\"  class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n   \\n  </mat-form-field>\\n \\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.patient_address\\\" placeholder=\\\"Patient Address\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n      <input matInput tabindex=\\\"1\\\" type=\\\"date\\\" [(ngModel)]=\\\"data.patient_dob\\\" placeholder=\\\"Patient Dob\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.patient_age\\\" placeholder=\\\"Patient Age\\\" class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-label>Gender</mat-label> \\n      <mat-select tabindex=\\\"1\\\" [(ngModel)]= \\\"data.patient_gender\\\" required=\\\"true\\\">\\n        <mat-option value=\\\"MALE\\\">MALE</mat-option>\\n        <mat-option value=\\\"FEMALE\\\">FEMALE</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n\\n    <mat-form-field>\\n        <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.patient_phone_no\\\" placeholder=\\\"Phone Number\\\" class=\\\"form-control-dialog\\\" oninput=\\\"this.value = this.value.slice(0,10);\\\" required=\\\"true\\\">\\n      </mat-form-field>\\n\\n\\n    <mat-form-field>\\n        <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"data.patient_home_phno\\\" placeholder=\\\"Home Phone Number\\\" class=\\\"form-control-dialog\\\" oninput=\\\"this.value = this.value.slice(0,10);\\\" required=\\\"true\\\">\\n     </mat-form-field>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"update(data)\\\" tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\""],"sourceRoot":""}