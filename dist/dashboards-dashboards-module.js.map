{"version":3,"sources":["webpack:///./node_modules/ngx-gauge/fesm5/ngx-gauge.js","webpack:///./src/app/dashboards/cliniciananalysis/cliniciananalysis.component.html","webpack:///./src/app/dashboards/cliniciananalysis/cliniciananalysis.component.ts","webpack:///./src/app/dashboards/cliniciananalysis/cliniciananalysis.service.ts","webpack:///./src/app/dashboards/clinicianproceedures/clinicianproceedures.component.html","webpack:///./src/app/dashboards/clinicianproceedures/clinicianproceedures.component.ts","webpack:///./src/app/dashboards/clinicianproceedures/clinicianproceedures.service.ts","webpack:///./src/app/dashboards/dashboards.module.ts","webpack:///./src/app/dashboards/dashboards.routing.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACyF;;AAExI;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mBAAmB,EAAE;AAC1C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,kBAAkB,EAAE;AACzC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,oBAAoB,EAAE;AAC3C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,yCAAyC;AACzC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,qCAAqC,gDAAgD,EAAE;AACvF,mCAAmC,8BAA8B,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAm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","file":"dashboards-dashboards-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Directive, Component, Input, ViewEncapsulation, Renderer, ElementRef, ViewChild, ContentChild, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} value\r\n * @param {?} min\r\n * @param {?} max\r\n * @return {?}\r\n */\r\nfunction clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\n/**\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction coerceBooleanProperty(value) {\r\n    return value != null && \"\" + value !== 'false';\r\n}\r\n/**\r\n * @param {?} value\r\n * @param {?=} fallbackValue\r\n * @return {?}\r\n */\r\nfunction coerceNumberProperty(value, fallbackValue) {\r\n    if (fallbackValue === void 0) { fallbackValue = 0; }\r\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\r\n}\r\n/**\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction cssUnit(value) {\r\n    return value + \"px\";\r\n}\r\n/**\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction isNumber(value) {\r\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxGaugeAppend = /** @class */ (function () {\r\n    function NgxGaugeAppend() {\r\n    }\r\n    NgxGaugeAppend.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"ngx-gauge-append\",\r\n                    exportAs: \"ngxGaugeAppend\"\r\n                },] }\r\n    ];\r\n    return NgxGaugeAppend;\r\n}());\r\nvar NgxGaugePrepend = /** @class */ (function () {\r\n    function NgxGaugePrepend() {\r\n    }\r\n    NgxGaugePrepend.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"ngx-gauge-prepend\",\r\n                    exportAs: \"ngxGaugePrepend\"\r\n                },] }\r\n    ];\r\n    return NgxGaugePrepend;\r\n}());\r\nvar NgxGaugeValue = /** @class */ (function () {\r\n    function NgxGaugeValue() {\r\n    }\r\n    NgxGaugeValue.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"ngx-gauge-value\",\r\n                    exportAs: \"ngxGaugeValue\"\r\n                },] }\r\n    ];\r\n    return NgxGaugeValue;\r\n}());\r\nvar NgxGaugeLabel = /** @class */ (function () {\r\n    function NgxGaugeLabel() {\r\n    }\r\n    NgxGaugeLabel.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"ngx-gauge-label\",\r\n                    exportAs: \"ngxGaugeLabel\"\r\n                },] }\r\n    ];\r\n    return NgxGaugeLabel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar DEFAULTS = {\r\n    MIN: 0,\r\n    MAX: 100,\r\n    TYPE: 'arch',\r\n    THICK: 4,\r\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\r\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\r\n    CAP: 'butt',\r\n    SIZE: 200\r\n};\r\nvar NgxGauge = /** @class */ (function () {\r\n    function NgxGauge(_elementRef, _renderer) {\r\n        this._elementRef = _elementRef;\r\n        this._renderer = _renderer;\r\n        this._size = DEFAULTS.SIZE;\r\n        this._min = DEFAULTS.MIN;\r\n        this._max = DEFAULTS.MAX;\r\n        this._animate = true;\r\n        this._initialized = false;\r\n        this._animationRequestID = 0;\r\n        this.max = DEFAULTS.MAX;\r\n        this.type = (/** @type {?} */ (DEFAULTS.TYPE));\r\n        this.cap = (/** @type {?} */ (DEFAULTS.CAP));\r\n        this.thick = DEFAULTS.THICK;\r\n        this.foregroundColor = DEFAULTS.FOREGROUND_COLOR;\r\n        this.backgroundColor = DEFAULTS.BACKGROUND_COLOR;\r\n        this.thresholds = Object.create(null);\r\n        this._value = 0;\r\n        this.duration = 1200;\r\n    }\r\n    Object.defineProperty(NgxGauge.prototype, \"size\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () { return this._size; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._size = coerceNumberProperty(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NgxGauge.prototype, \"min\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () { return this._min; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._min = coerceNumberProperty(value, DEFAULTS.MIN);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NgxGauge.prototype, \"animate\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () { return this._animate; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._animate = coerceBooleanProperty(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NgxGauge.prototype, \"value\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () { return this._value; },\r\n        set: /**\r\n         * @param {?} val\r\n         * @return {?}\r\n         */\r\n        function (val) {\r\n            this._value = coerceNumberProperty(val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        /** @type {?} */\r\n        var isTextChanged = changes['label'] || changes['append'] || changes['prepend'];\r\n        /** @type {?} */\r\n        var isDataChanged = changes['value'] || changes['min'] || changes['max'];\r\n        if (this._initialized) {\r\n            if (isDataChanged) {\r\n                /** @type {?} */\r\n                var nv = void 0;\r\n                /** @type {?} */\r\n                var ov = void 0;\r\n                if (changes['value']) {\r\n                    nv = changes['value'].currentValue;\r\n                    ov = changes['value'].previousValue;\r\n                }\r\n                this._update(nv, ov);\r\n            }\r\n            else if (!isTextChanged) {\r\n                this._destroy();\r\n                this._init();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._updateSize = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'width', cssUnit(this._size));\r\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'height', cssUnit(this._size));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._canvas) {\r\n            this._init();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._destroy();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._getBounds = /**\r\n     * @private\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function (type) {\r\n        /** @type {?} */\r\n        var head;\r\n        /** @type {?} */\r\n        var tail;\r\n        if (type == 'semi') {\r\n            head = Math.PI;\r\n            tail = 2 * Math.PI;\r\n        }\r\n        else if (type == 'full') {\r\n            head = 1.5 * Math.PI;\r\n            tail = 3.5 * Math.PI;\r\n        }\r\n        else if (type === 'arch') {\r\n            head = 0.8 * Math.PI;\r\n            tail = 2.2 * Math.PI;\r\n        }\r\n        return { head: head, tail: tail };\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} start\r\n     * @param {?} middle\r\n     * @param {?} tail\r\n     * @param {?} color\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._drawShell = /**\r\n     * @private\r\n     * @param {?} start\r\n     * @param {?} middle\r\n     * @param {?} tail\r\n     * @param {?} color\r\n     * @return {?}\r\n     */\r\n    function (start, middle, tail, color) {\r\n        /** @type {?} */\r\n        var center = this._getCenter();\r\n        /** @type {?} */\r\n        var radius = this._getRadius();\r\n        middle = Math.max(middle, start); // never below 0%\r\n        middle = Math.min(middle, tail); // never exceed 100%\r\n        this._clear();\r\n        this._context.beginPath();\r\n        this._context.strokeStyle = this.backgroundColor;\r\n        this._context.arc(center.x, center.y, radius, middle, tail, false);\r\n        this._context.stroke();\r\n        this._context.beginPath();\r\n        this._context.strokeStyle = color;\r\n        this._context.arc(center.x, center.y, radius, start, middle, false);\r\n        this._context.stroke();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._clear = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._getWidth = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.size;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._getHeight = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.size;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._getRadius = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var center = this._getCenter();\r\n        return center.x - this.thick;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._getCenter = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var x = this._getWidth() / 2;\r\n        /** @type {?} */\r\n        var y = this._getHeight() / 2;\r\n        return { x: x, y: y };\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._init = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._context = ((/** @type {?} */ (this._canvas.nativeElement))).getContext('2d');\r\n        this._initialized = true;\r\n        this._updateSize();\r\n        this._setupStyles();\r\n        this._create();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._destroy = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._animationRequestID) {\r\n            window.cancelAnimationFrame(this._animationRequestID);\r\n            this._animationRequestID = 0;\r\n        }\r\n        this._clear();\r\n        this._context = null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._setupStyles = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._context.canvas.width = this.size;\r\n        this._context.canvas.height = this.size;\r\n        this._context.lineCap = this.cap;\r\n        this._context.lineWidth = this.thick;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._getForegroundColorByRange = /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var match = Object.keys(this.thresholds)\r\n            .filter(function (item) { return isNumber(item) && Number(item) <= value; })\r\n            .sort(function (a, b) { return Number(a) - Number(b); })\r\n            .reverse()[0];\r\n        return match !== undefined\r\n            ? this.thresholds[match].color || this.foregroundColor\r\n            : this.foregroundColor;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?=} nv\r\n     * @param {?=} ov\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._create = /**\r\n     * @private\r\n     * @param {?=} nv\r\n     * @param {?=} ov\r\n     * @return {?}\r\n     */\r\n    function (nv, ov) {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var type = this.type;\r\n        /** @type {?} */\r\n        var bounds = this._getBounds(type);\r\n        /** @type {?} */\r\n        var duration = this.duration;\r\n        /** @type {?} */\r\n        var min = this.min;\r\n        /** @type {?} */\r\n        var max = this.max;\r\n        /** @type {?} */\r\n        var value = clamp(this.value, this.min, this.max);\r\n        /** @type {?} */\r\n        var start = bounds.head;\r\n        /** @type {?} */\r\n        var unit = (bounds.tail - bounds.head) / (max - min);\r\n        /** @type {?} */\r\n        var displacement = unit * (value - min);\r\n        /** @type {?} */\r\n        var tail = bounds.tail;\r\n        /** @type {?} */\r\n        var color = this._getForegroundColorByRange(value);\r\n        /** @type {?} */\r\n        var startTime;\r\n        /**\r\n         * @param {?} timestamp\r\n         * @return {?}\r\n         */\r\n        function animate(timestamp) {\r\n            timestamp = timestamp || new Date().getTime();\r\n            /** @type {?} */\r\n            var runtime = timestamp - startTime;\r\n            /** @type {?} */\r\n            var progress = Math.min(runtime / duration, 1);\r\n            /** @type {?} */\r\n            var previousProgress = ov ? ov * unit : 0;\r\n            /** @type {?} */\r\n            var middle = start + previousProgress + displacement * progress;\r\n            self._drawShell(start, middle, tail, color);\r\n            if (self._animationRequestID && (runtime < duration)) {\r\n                self._animationRequestID = window.requestAnimationFrame(function (timestamp) { return animate(timestamp); });\r\n            }\r\n            else {\r\n                window.cancelAnimationFrame(self._animationRequestID);\r\n            }\r\n        }\r\n        if (this._animate) {\r\n            if (nv != undefined && ov != undefined) {\r\n                displacement = unit * nv - unit * ov;\r\n            }\r\n            self._animationRequestID = window.requestAnimationFrame(function (timestamp) {\r\n                startTime = timestamp || new Date().getTime();\r\n                animate(timestamp);\r\n            });\r\n        }\r\n        else {\r\n            self._drawShell(start, start + displacement, tail, color);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} nv\r\n     * @param {?} ov\r\n     * @return {?}\r\n     */\r\n    NgxGauge.prototype._update = /**\r\n     * @private\r\n     * @param {?} nv\r\n     * @param {?} ov\r\n     * @return {?}\r\n     */\r\n    function (nv, ov) {\r\n        this._clear();\r\n        this._create(nv, ov);\r\n    };\r\n    NgxGauge.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ngx-gauge',\r\n                    template: \"<div class=\\\"reading-block\\\" #reading [style.fontSize]=\\\"size * 0.22 + 'px'\\\" [style.lineHeight]=\\\"size + 'px'\\\">\\r\\n  <!-- This block can not be indented correctly, because line breaks cause layout spacing, related problem: https://pt.stackoverflow.com/q/276760/2998 -->\\r\\n  <u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_prependChild != null\\\"><ng-content select=\\\"ngx-gauge-prepend\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{prepend}}</ng-container></u><ng-container [ngSwitch]=\\\"_valueDisplayChild != null\\\"><ng-content *ngSwitchCase=\\\"true\\\" select=\\\"ngx-gauge-value\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{value | number}}</ng-container></ng-container><u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_appendChild != null\\\"><ng-content select=\\\"ngx-gauge-append\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{append}}</ng-container></u>\\r\\n</div>\\r\\n<div class=\\\"reading-label\\\" \\r\\n     [style.fontSize]=\\\"size / 13 + 'px'\\\" \\r\\n     [style.lineHeight]=\\\"(5 * size / 13) + size + 'px'\\\" \\r\\n     [ngSwitch]=\\\"_labelChild != null\\\">\\r\\n  <ng-content select=\\\"ngx-gauge-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\r\\n  <ng-container *ngSwitchCase=\\\"false\\\">{{label}}</ng-container>\\r\\n</div>\\r\\n<canvas #canvas [width]=\\\"size\\\" [height]=\\\"size\\\"></canvas>\",\r\n                    host: {\r\n                        'role': 'meter',\r\n                        '[class.ngx-gauge-meter]': 'true',\r\n                        '[attr.aria-valuemin]': 'min',\r\n                        '[attr.aria-valuemax]': 'max',\r\n                        '[attr.aria-valuenow]': 'value'\r\n                    },\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    styles: [\".ngx-gauge-meter{display:inline-block;text-align:center;position:relative}.reading-block{position:absolute;width:100%;font-weight:400;white-space:nowrap;text-align:center;overflow:hidden;text-overflow:ellipsis}.reading-label{font-family:inherit;width:100%;display:inline-block;position:absolute;text-align:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-weight:400}.reading-affix{text-decoration:none;font-size:.6em;opacity:.8;font-weight:200;padding:0 .18em}.reading-affix:first-child{padding-left:0}.reading-affix:last-child{padding-right:0}\"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    NgxGauge.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: Renderer }\r\n    ]; };\r\n    NgxGauge.propDecorators = {\r\n        _canvas: [{ type: ViewChild, args: ['canvas',] }],\r\n        _labelChild: [{ type: ContentChild, args: [NgxGaugeLabel,] }],\r\n        _prependChild: [{ type: ContentChild, args: [NgxGaugePrepend,] }],\r\n        _appendChild: [{ type: ContentChild, args: [NgxGaugeAppend,] }],\r\n        _valueDisplayChild: [{ type: ContentChild, args: [NgxGaugeValue,] }],\r\n        size: [{ type: Input }],\r\n        min: [{ type: Input }],\r\n        animate: [{ type: Input }],\r\n        max: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        cap: [{ type: Input }],\r\n        thick: [{ type: Input }],\r\n        label: [{ type: Input }],\r\n        append: [{ type: Input }],\r\n        prepend: [{ type: Input }],\r\n        foregroundColor: [{ type: Input }],\r\n        backgroundColor: [{ type: Input }],\r\n        thresholds: [{ type: Input }],\r\n        value: [{ type: Input }],\r\n        duration: [{ type: Input }]\r\n    };\r\n    return NgxGauge;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxGaugeModule = /** @class */ (function () {\r\n    function NgxGaugeModule() {\r\n    }\r\n    NgxGaugeModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\r\n                    exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\r\n                },] }\r\n    ];\r\n    return NgxGaugeModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxGaugeModule, NgxGauge as ɵa, NgxGaugeAppend as ɵb, NgxGaugeLabel as ɵe, NgxGaugePrepend as ɵc, NgxGaugeValue as ɵd };\n\n//# sourceMappingURL=ngx-gauge.js.map","module.exports = \"<!-- ============================================================== -->\\n<!-- Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n  <!-- Column-->\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n  <mat-card>\\n  <mat-card-content>\\n    <mat-card-title class=\\\"mb-3\\\">Select Dentist</mat-card-title>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select Dentist\\\"  [(ngModel)]=\\\"selectedDentist\\\" (ngModelChange)=\\\"loadDentist($event)\\\">\\n        <mat-option value =\\\"all\\\">All Dentists</mat-option>\\n        <mat-option *ngFor=\\\"let dentist of dentists\\\" [value]=\\\"dentist.providerId\\\">\\n          {{dentist.name}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field> \\n\\n  </mat-card-content>\\n</mat-card>\\n</div>\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card  class=\\\"dentistProduction\\\">\\n      <mat-card-content>\\n        <mat-card-title>Dentist Production</mat-card-title>\\n        <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\"  [legend]=\\\"barChartLegend\\\"\\n          [chartType]=\\\"barChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" [colors]=\\\"barChartColors\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n        </canvas>\\n          <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{productionTotal | number : '1.2-2'}}</h3>\\n                        <small>Total (Current)</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{productionTotalAverage | number : '1.2-2'}}</h3>\\n                        <small>Average</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">---</h3>\\n                        <small>Goals</small>\\n                    </div>\\n                </div>\\n      </mat-card-content>\\n    </mat-card>\\n     <mat-card class=\\\"dentistProductionSingle\\\" [style.display]=\\\"'none'\\\" >\\n      <mat-card-content>\\n        <mat-card-title>Dentist Production</mat-card-title>\\n         <ngx-gauge [type]=\\\"gaugeType\\\"\\n           [value]=\\\"gaugeValue\\\" \\n           [label]=\\\"gaugeLabel\\\"  \\n           [thick]=\\\"gaugeThick\\\"  \\n           [foregroundColor]=\\\"foregroundColor\\\"\\n           [cap] =\\\"cap\\\"\\n           [size] = \\\"size\\\">\\n          </ngx-gauge>\\n          <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{productionTotal | number : '1.2-2'}}</h3>\\n                        <small>Total (Current)</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{productionTotalAverage | number : '1.2-2'}}</h3>\\n                        <small>Practice Average</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">---</h3>\\n                        <small>Goals</small>\\n                    </div>\\n                </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card  class=\\\"treatmentPlan\\\">\\n      <mat-card-content>\\n        <mat-card-title>Treatment Plan Average Cost</mat-card-title>\\n        <canvas baseChart class=\\\"chart\\\"\\n          [datasets]=\\\"planChartData\\\"\\n          [labels]=\\\"planChartLabels\\\"\\n          [legend]=\\\"barChartLegend\\\"\\n          [chartType]=\\\"barChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"  [colors]=\\\"barChartColors\\\"></canvas>\\n          <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{planTotalAverage | number : '1.2-2'}}</h3>\\n                        <small>Current Average</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">--</h3>\\n                        <small>Previous Average</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">---</h3>\\n                        <small>Goals</small>\\n                    </div>\\n                </div>          \\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card class=\\\"treatmentPlanSingle\\\" [style.display]=\\\"'none'\\\">\\n      <mat-card-content>\\n        <mat-card-title>Treatment Plan Average Cost</mat-card-title>\\n        <ngx-gauge [type]=\\\"gaugeType\\\"\\n           [value]=\\\"gaugeValueTreatment\\\" \\n           [label]=\\\"gaugeLabelTreatment\\\"  \\n           [thick]=\\\"gaugeThick\\\"  \\n           [foregroundColor]=\\\"foregroundColor\\\"\\n           [cap] =\\\"cap\\\"\\n           [size] = \\\"size\\\">\\n          </ngx-gauge>\\n          <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{planTotalAverage | number : '1.2-2'}}</h3>\\n                        <small>Current Average</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">--</h3>\\n                        <small>Previous Average</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">---</h3>\\n                        <small>Goals</small>\\n                    </div>\\n                </div>          \\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card  class=\\\"noPatients\\\">\\n      <mat-card-content>\\n        <mat-card-title>No. Patient Complaints</mat-card-title>\\n        <div class=\\\"chart\\\" *ngIf=\\\"doughnutChartLabels.length > 0\\\">\\n        <canvas baseChart class=\\\"chart\\\"\\n          [data]=\\\"doughnutChartData\\\"\\n          [labels]=\\\"doughnutChartLabels\\\"\\n          [chartType]=\\\"doughnutChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\" [colors]=\\\"[{backgroundColor: ['#1976d2', '#26dad2', '#dadada']}]\\\"></canvas>\\n        </div>\\n          <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{doughnutTotal | number : '1.2-2'}}</h3>\\n                        <small>Current Total</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">--</h3>\\n                        <small>Previous Total</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">---</h3>\\n                        <small>Goals</small>\\n                    </div>\\n                </div>        \\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card class=\\\"noPatientsSingle\\\" [style.display]=\\\"'none'\\\">\\n      <mat-card-content>\\n        <mat-card-title>No. Patient Complaints</mat-card-title>\\n        <div class=\\\"chart\\\" *ngIf=\\\"doughnutChartLabels.length > 0\\\">\\n         <ngx-gauge [type]=\\\"gaugeType\\\"\\n           [value]=\\\"gaugeValuePatients\\\" \\n           [label]=\\\"gaugeLabelPatients\\\"  \\n           [thick]=\\\"gaugeThick\\\"  \\n           [foregroundColor]=\\\"foregroundColor\\\"\\n           [cap] =\\\"cap\\\"\\n           [size] = \\\"size\\\">\\n          </ngx-gauge>\\n        </div>\\n          <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{doughnutTotal | number : '1.2-2'}}</h3>\\n                        <small>Current Total</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">--</h3>\\n                        <small>Previous Total</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">---</h3>\\n                        <small>Goals</small>\\n                    </div>\\n                </div>        \\n      </mat-card-content>\\n    </mat-card>    \\n  </div>\\n\\n</div>\"","import { Component, AfterViewInit, SecurityContext, ViewEncapsulation, OnInit, Pipe, PipeTransform  } from '@angular/core';\nimport { ClinicianAnalysisService } from './cliniciananalysis.service';\nimport { DentistService } from '../../dentist/dentist.service';\nimport {\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n  Validators\n} from '@angular/forms';\n\n\nexport interface Dentist {\n  providerId: string;\n  name: string;\n}\n@Component({\n  templateUrl: './cliniciananalysis.component.html'\n})\nexport class ClinicianAnalysisComponent implements AfterViewInit {\n  subtitle: string;\n\n  \n  constructor(private cliniciananalysisService: ClinicianAnalysisService, private dentistService: DentistService){}\n  private warningMessage: string;\n\n  ngAfterViewInit() {\n    this.buildChartNopatients();\n    \n    this.buildChart();\n    this.buildChartTreatment();\n    this.getDentists();\n\n    //this.recallChartTreatment();\n  }\n  dentists: Dentist[] = [\n   { providerId: 'all', name: 'All Dentists' },\n  ];\n    public barChartColors: Array<any> = [\n    { backgroundColor: '#1976d2' },\n    { backgroundColor: '#26dad2' }\n  ];\n    public barChartType = 'bar';\n  public barChartLegend = true;\n\n  //labels\n  public barChartLabels: string[] = [];\n    public pieChartLabels: string[] = ['ddfs'];\n  public planChartLabels: string[] = [];\n  public recallChartLabels: string[] = [];\n  public treatmentChartLabels: string[] = [];  \n  public barChartLabels1: string[] = [];\n  public planChartLabels1: string[] = [];\n  public recallChartLabels1: string[] = [];\n  public treatmentChartLabels1: string[] = [];\n  public doughnutChartLabels: string[] =  [];\n  public doughnutChartLabels1: string[] = [];\n  public doughnutChartType:string = 'doughnut';\n\n  //data\n  public barChartData: any[] = [\n    {data: [], label: 'Dentist Production'}\n  ];\n  public pieChartData: any[] = [\n    {data: [10], label: 'Dentist Production'}\n  ];\n  public planChartData: any[] = [\n    {data: [], label: 'Treatment Plan Average Cost- Proposed Fees'},\n    {data: [], label: 'Treatment Plan Average Cost - Completed Fees',hidden: true}\n\n  ];\n  public recallChartData: any[] = [\n    {data: [50,30,20], label: 'Recall Rate'},\n    {data: [50,30,20], label: 'Rebook Rate'}  \n  ];  \n  public treatmentChartData: any[] = [\n    {data: [50,30,20], label: 'Recall Rate'},\n    {data: [50,30,20], label: 'Rebook Rate'}  \n  ];  \n  public doughnutChartData: number[] = [350, 450, 100];\n  public selectedDentist: string;\n  public barChartData1: any[] = [];\n  public planChartData1: any[] = [];\n  public planChartData2: any[] = [];  \n  public recallChartData1: any[] = [];    \n  public treatmentChartData1: any[] = [];\n  public doughnutChartData1: number[] = [];   \n\n  //Total  \n  public productionTotal = 0;\n  public productionTotalAverage = 0;\n  public planTotal = 0;\n  public planTotalAverage = 0;\n  public recallTotal = 0;\n  public recallTotalAverage = 0;\n  public treatmentTotal = 0;\n  public treatmentTotalAverage = 0;  \n  public doughnutTotal = 0;\n  public doughnutTotalAverage = 0;  \n\n  // events\n  public chartClicked(e: any): void {\n    console.log(e);\n  }\n\n  public chartHovered(e: any): void {\n    console.log(e);\n  }\n  public gaugeType = \"arch\";\n  public  gaugeValue = '';\n  public  gaugeLabel = \"\";\n  public  gaugeThick = \"20\";\n  public  foregroundColor= \"#1e88e5\";\n  public  cap= \"round\";\n  public  size = \"300\"\n\n  public  gaugeValueTreatment = 0;\n  public  gaugeLabelTreatment = \"\";\n\n  public  gaugeValuePatients = 0;\n  public  gaugeLabelPatients = \"\";\n\n loadDentist(newValue) {\n  if(newValue == 'all') {\n    this.buildChartNopatients();\n    \n    this.buildChart();\n    this.buildChartTreatment();\n    (<HTMLElement>document.querySelector('.dentistProductionSingle')).style.display = 'none';\n    (<HTMLElement>document.querySelector('.dentistProduction')).style.display = 'block';\n\n    (<HTMLElement>document.querySelector('.treatmentPlanSingle')).style.display = 'none';\n    (<HTMLElement>document.querySelector('.treatmentPlan')).style.display = 'block';\n\n    (<HTMLElement>document.querySelector('.noPatientsSingle')).style.display = 'none';\n    (<HTMLElement>document.querySelector('.noPatients')).style.display = 'block';\n  }\n  else {\n    this.selectedDentist = newValue;\n    this.buildChartDentist();\n    (<HTMLElement>document.querySelector('.dentistProductionSingle')).style.display = 'block';\n    (<HTMLElement>document.querySelector('.dentistProduction')).style.display = 'none';\n\n    this.buildChartTreatmentDentist();\n    (<HTMLElement>document.querySelector('.treatmentPlanSingle')).style.display = 'block';\n    (<HTMLElement>document.querySelector('.treatmentPlan')).style.display = 'none';\n\n    this.buildChartNopatientsDentist();\n    (<HTMLElement>document.querySelector('.noPatientsSingle')).style.display = 'block';\n    (<HTMLElement>document.querySelector('.noPatients')).style.display = 'none';\n  }\n\n  }\n\n  //Dentist Production Chart\n  private buildChart() {\n  this.cliniciananalysisService.DentistProduction().subscribe((data) => {\n       if(data.message == 'success'){\n        data.data.forEach(res => {\n           this.barChartData1.push(res.total);\n           this.barChartLabels1.push(res.name);\n           this.productionTotal = this.productionTotal + parseInt(res.total);\n });\n       this.barChartData[0]['data'] = this.barChartData1;\n       this.barChartLabels = this.barChartLabels1;\n       this.productionTotalAverage = this.productionTotal/this.barChartData1.length;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n  //Individual Dentist Production Chart\n  private buildChartDentist() {\n  this.cliniciananalysisService.DentistProductionSingle(this.selectedDentist).subscribe((data) => {\n       if(data.message == 'success'){\n          this.gaugeValue = data.data.total;\n          this.gaugeLabel = data.data.name;\n          this.productionTotal = data.data.total;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n//Treatment Plan Average Cost\n  private buildChartTreatment() {\n  this.cliniciananalysisService.TreatmentPlan().subscribe((data) => {\n       if(data.message == 'success'){\n        data.data.forEach(res => {\n           this.planChartData1.push(res.total_all);\n           this.planChartData2.push(res.total_completed);\n           this.planChartLabels1.push(res.provider);\n           this.planTotal = this.planTotal + parseInt(res.total_completed);\n });\n       this.planChartData[0]['data'] = this.planChartData1;\n       this.planChartData[1]['data'] = this.planChartData2;\n\n       this.planChartLabels = this.planChartLabels1;\n       this.planTotalAverage = this.planTotal/this.planChartData1.length;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n//Individual Treatment Plan Average Cost\n  private buildChartTreatmentDentist() {\n  this.cliniciananalysisService.TreatmentPlanDentist(this.selectedDentist).subscribe((data) => {\n       if(data.message == 'success'){\n        if(data.data != null) {\n        this.gaugeValueTreatment = data.data.total_all;\n          this.gaugeLabelTreatment = data.data.provider;\n          this.planTotal = data.data.total_all;\n          this.planTotalAverage = this.planTotal;\n        }\n        else {\n          this.gaugeValueTreatment = 0;\n          this.gaugeLabelTreatment = \"No Data for this Dentist\";\n          this.planTotal = 0;\n          this.planTotalAverage = 0;\n        }\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n//Recall Prebook Rate\n  private recallChartTreatment() {\n  this.cliniciananalysisService.RecallPrebook().subscribe((data) => {\n       if(data.message == 'success'){\n        data.data.forEach(res => {\n           this.planChartData1.push(parseInt(res.average_cost));\n           this.planChartLabels1.push(res.provider);\n           this.planTotal = this.planTotal + parseInt(res.average_cost);\n });\n       this.planChartData[0]['data'] = this.planChartData1;\n       this.planChartLabels = this.planChartLabels1;\n       this.planTotalAverage = this.planTotal/this.planChartData1.length;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }  \n\n  private buildChartNopatients() {\n  this.cliniciananalysisService.NoPatients().subscribe((data) => {\n     console.log(this.doughnutChartLabels);\n       if(data.message == 'success'){\n        data.data.forEach(res => {\n           this.doughnutChartData1.push(parseInt(res.treat_item));\n           this.doughnutChartLabels1.push(res.provider);\n           this.doughnutTotal = this.doughnutTotal + parseInt(res.treat_item);\n });\n       this.doughnutChartData = this.doughnutChartData1;\n       this.doughnutChartLabels = this.doughnutChartLabels1;\n       this.doughnutTotalAverage = this.doughnutTotal/this.doughnutChartData1.length;\n       console.log(this.doughnutChartLabels1);\n        console.log(this.doughnutChartLabels);\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  } \n\n\n  private buildChartNopatientsDentist() {\n  this.cliniciananalysisService.NoPatientsDentist(this.selectedDentist).subscribe((data) => {\n     console.log(this.doughnutChartLabels);\n       if(data.message == 'success'){\n         if(data.data != null) {\n        this.gaugeValuePatients = data.data.treat_item;\n          this.gaugeLabelPatients = data.data.provider;\n          this.doughnutTotal = data.data.treat_item;\n          this.doughnutTotalAverage = this.doughnutTotal;\n        }\n        else {\n          this.gaugeValuePatients = 0;\n          this.gaugeLabelPatients = \"No Data for this Dentist\";\n          this.doughnutTotal = 0;\n          this.doughnutTotalAverage = 0;\n        }\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\"; \n    }\n    );\n  } \n\n  // Get Dentist\n    private getDentists() {\n      this.dentistService.getDentists().subscribe((res) => {\n           if(res.message == 'success'){\n              this.dentists= res.data;\n           }\n        }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n        }    \n        );\n\n  } \n\n}\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClinicianAnalysisService {\n public token: string;\n    private headers: HttpHeaders;\n\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n        this.headers.append(\"Token\", this._cookieService.get(\"token\"));\n\n   }\n\n    // Dentist Production Service\n    DentistProduction(user_id = '23', clinic_id='1', token = this._cookieService.get(\"token\") ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/AccountingInvoicesAndReceipts/caDentistProtection/23/1\", { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    // Dentist Production Single Service\n    DentistProductionSingle(dentist_id,user_id = '23', clinic_id='1', token = this._cookieService.get(\"token\") ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/AccountingInvoicesAndReceipts/caDentistProtection/23/1/\"+dentist_id, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    //Treatment Plan Average Cost service\n    TreatmentPlan(user_id = '23', clinic_id='1', token = this._cookieService.get(\"token\") ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/AccountingInvoicesAndReceipts/caTreatmentPlanAverageCost/23/1\", { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }  \n\n    //Treatment Plan Average Cost Single service\n    TreatmentPlanDentist(dentist_id,user_id = '23', clinic_id='1', token = this._cookieService.get(\"token\") ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/AccountingInvoicesAndReceipts/caTreatmentPlanAverageCost/23/1/\"+dentist_id, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }      \n    \n    //Recall Prebook Rate service\n    RecallPrebook(user_id = '23', clinic_id='1', token = this._cookieService.get(\"token\") ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/AccountingInvoicesAndReceipts/caTreatmentPlanAverageCost/23/1\", { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    } \n    \n    //Hourly Rate service\n    NoPatients(user_id = '23', clinic_id='1', token = this._cookieService.get(\"token\") ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/AccountingInvoicesAndReceipts/caNumberPatientComplaints/23/1\", { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    //Hourly Rate service\n    NoPatientsDentist(dentist_id,user_id = '23', clinic_id='1', token = this._cookieService.get(\"token\") ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/AccountingInvoicesAndReceipts/caNumberPatientComplaints/23/1/\"+dentist_id, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    } \n}\n\n","module.exports = \"<!-- ============================================================== -->\\n<!-- Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n      <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n  <mat-card>\\n  <mat-card-content>\\n    <mat-card-title class=\\\"mb-3\\\">Select Dentist</mat-card-title>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select Dentist\\\"  [(ngModel)]=\\\"selectedDentist\\\" (ngModelChange)=\\\"loadDentist($event)\\\">\\n        <mat-option value =\\\"all\\\">All Dentists</mat-option>\\n        <mat-option *ngFor=\\\"let dentist of dentists\\\" [value]=\\\"dentist.providerId\\\">\\n          {{dentist.name}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field> \\n  </mat-card-content>\\n      <div><span (click)=\\\"filterDate('w')\\\">This Week</span> | <span (click)=\\\"filterDate('m')\\\">This Month</span> | <span  (click)=\\\"filterDate('q')\\\">This Quarter</span> | <span (click)=\\\"filterDate('lq')\\\">Last Quarter</span> | <span (click)=\\\"filterDate('cytd')\\\">Current YTD</span> | <span (click)=\\\"filterDate('fytd')\\\">Financial YTD</span></div>\\n</mat-card>\\n</div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card class=\\\"itemsPredictor\\\">\\n      <mat-card-content>\\n        <mat-card-title>Items Predictor Analysis </mat-card-title>\\n        <canvas baseChart [datasets]=\\\"stackedChartData\\\" [labels]=\\\"stackedChartLabels\\\" [options]=\\\"stackedChartOptions\\\" [legend]=\\\"stackedChartLegend\\\"\\n          [chartType]=\\\"stackedChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" [colors]=\\\"stackedChartColors\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n        </canvas>\\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card class=\\\"itemsPredictorSingle\\\" [style.display]=\\\"'none'\\\" >\\n      <mat-card-content>\\n        <mat-card-title>Items Predictor Analysis </mat-card-title>\\n          <div class=\\\"chart\\\" *ngIf=\\\"itemPredictedChartLabels.length > 0\\\">\\n        <canvas baseChart [datasets]=\\\"itemPredictedChartData\\\" [labels]=\\\"itemPredictedChartLabels\\\" [options]=\\\"stackedChartOptions\\\" [legend]=\\\"stackedChartLegend\\\"\\n          [chartType]=\\\"stackedChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" [colors]=\\\"stackedChartColors\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n        </canvas>\\n      </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card class=\\\"ratioPredictor\\\">\\n      <mat-card-content>\\n        <mat-card-title>Predictor Ratio</mat-card-title>\\n        <canvas baseChart class=\\\"chart\\\"\\n          [datasets]=\\\"predictedChartData\\\"\\n          [labels]=\\\"predictedChartLabels\\\"\\n          [options]=\\\"barChartOptions\\\"\\n          [legend]=\\\"stackedChartLegend\\\"\\n          [chartType]=\\\"stackedChartType\\\"\\n            [colors]=\\\"[{backgroundColor: ['#1976d2', '#26dad2']}]\\\"></canvas>\\n            <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40 predicted1\\\">\\n                    <div fxFlex.gt-sm=\\\"50%\\\" fxFlex.gt-xs=\\\"50%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{predictedTotalAverage1 | number : '1.2-2'}}</h3>\\n                        <small>Current Average</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"50%\\\" fxFlex.gt-xs=\\\"50%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">--</h3>\\n                        <small>Previous Average</small>\\n                    </div>\\n                </div> \\n            <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40 predicted2\\\" [style.display]=\\\"'none'\\\">\\n                    <div fxFlex.gt-sm=\\\"50%\\\" fxFlex.gt-xs=\\\"50%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{predictedTotalAverage2 | number : '1.2-2'}}</h3>\\n                        <small>Current Average</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"50%\\\" fxFlex.gt-xs=\\\"50%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">--</h3>\\n                        <small>Previous Average</small>\\n                    </div>\\n                </div> \\n            <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40 predicted3\\\" [style.display]=\\\"'none'\\\">\\n                    <div fxFlex.gt-sm=\\\"50%\\\" fxFlex.gt-xs=\\\"50%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{predictedTotalAverage3 | number : '1.2-2'}}</h3>\\n                        <small>Current Average</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"50%\\\" fxFlex.gt-xs=\\\"50%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">--</h3>\\n                        <small>Previous Average</small>\\n                    </div>\\n                </div>             \\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card class=\\\"ratioPredictorSingle\\\" [style.display]=\\\"'none'\\\" >\\n      <mat-card-content>\\n        <mat-card-title>Predictor Ratio</mat-card-title>\\n         <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <small (click) = \\\"changeDentistPredictor('1')\\\">Crown to Large Filling</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <small (click) = \\\"changeDentistPredictor('2')\\\">Extraction to RCT</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <small (click) = \\\"changeDentistPredictor('3')\\\">RCT Conversion</small>\\n                    </div>\\n                </div>\\n        <ngx-gauge [type]=\\\"gaugeType\\\"\\n           [value]=\\\"gaugeValuePredicted\\\" \\n           [label]=\\\"gaugeLabelPredicted\\\"  \\n           [thick]=\\\"gaugeThick\\\"  \\n           [foregroundColor]=\\\"foregroundColor\\\"\\n           [cap] =\\\"cap\\\"\\n           [size] = \\\"size\\\">\\n          </ngx-gauge>\\n            <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40 predicted1\\\">\\n                    <div fxFlex.gt-sm=\\\"50%\\\" fxFlex.gt-xs=\\\"50%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{predictedDentistTotal | number : '1.2-2'}}</h3>\\n                        <small>Current</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"50%\\\" fxFlex.gt-xs=\\\"50%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">--</h3>\\n                        <small>Previous</small>\\n                    </div>\\n                </div>            \\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card class=\\\"revenueProceedure\\\">\\n      <mat-card-content>\\n        <mat-card-title>Total Revenue of Clinician Per Procedure</mat-card-title>\\n        <canvas baseChart class=\\\"chart\\\"\\n          [datasets]=\\\"proceedureChartData\\\"\\n          [labels]=\\\"proceedureChartLabels\\\"\\n          [options]=\\\"barChartOptions\\\"\\n          [legend]=\\\"stackedChartLegend\\\"\\n          [chartType]=\\\"proceedureChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"  [colors]=\\\"stackedChartColors\\\"></canvas>\\n        \\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card class=\\\"revenueProceedureSingle\\\" [style.display]=\\\"'none'\\\">\\n      <mat-card-content>\\n        <mat-card-title>Total Revenue of Clinician Per Procedure</mat-card-title>\\n        <canvas baseChart class=\\\"chart\\\"\\n          [datasets]=\\\"proceedureDentistChartData\\\"\\n          [labels]=\\\"proceedureDentistChartLabels\\\"\\n          [options]=\\\"barChartOptions\\\"\\n          [legend]=\\\"stackedChartLegend\\\"\\n          [chartType]=\\\"proceedureChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"  [colors]=\\\"stackedChartColors\\\"></canvas>\\n        \\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n   <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Referral to Other Clinicians Internal / External</mat-card-title>\\n         <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <small (click) = \\\"changePieReferral('Internal')\\\">Internal</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <small (click) = \\\"changePieReferral('External')\\\">External</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <small (click) = \\\"changePieReferral('Combined')\\\">Combined</small>\\n                    </div>\\n                </div>\\n          <div class=\\\"chart\\\" *ngIf=\\\"pieChartLabels.length > 0\\\">\\n        <canvas *ngIf=\\\"showInternal == true\\\" baseChart height=\\\"150px\\\" [data]=\\\"pieChartData1\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"  [options]=\\\"pieChartOptions\\\" [colors]=\\\"[{backgroundColor: ['#1976d2', '#26dad2', '#dadada','#1976d2', '#26dad2', '#dadada']}]\\\">\\n        </canvas>\\n         <canvas *ngIf=\\\"showExternal == true\\\" baseChart height=\\\"150px\\\" [data]=\\\"pieChartData2\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\" [options]=\\\"pieChartOptions\\\" [colors]=\\\"[{backgroundColor: ['#1976d2', '#26dad2', '#dadada','#1976d2', '#26dad2', '#dadada']}]\\\">\\n        </canvas>\\n         <canvas *ngIf=\\\"showCombined == true\\\" baseChart height=\\\"150px\\\" [data]=\\\"pieChartData3\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\" [options]=\\\"pieChartOptions\\\" [colors]=\\\"[{backgroundColor: ['#1976d2', '#26dad2', '#dadada','#1976d2', '#26dad2', '#dadada']}]\\\">\\n        </canvas>\\n      </div>\\n          <div fxLayout=\\\"row wrap\\\" class=\\\"m-t-40\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{pieChartInternalTotal}}</h3>\\n                        <small>Total Internal Ref</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{pieChartExternalTotal}}</h3>\\n                        <small>Total External Ref</small>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33%\\\" fxFlex.gt-xs=\\\"33.33%\\\" fxFlex=\\\"100\\\">\\n                        <h3 class=\\\"m-0 font-light\\\">{{pieChartCombinedTotal}}</h3>\\n                        <small>Total Referrals</small>\\n                    </div>\\n                </div>       \\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  \\n</div>\"","import { Component, AfterViewInit, SecurityContext, ViewEncapsulation, OnInit  } from '@angular/core';\nimport { ClinicianProceeduresService } from './clinicianproceedures.service';\nimport { DentistService } from '../../dentist/dentist.service';\n\nimport { DatePipe } from '@angular/common';\nimport {\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n  Validators\n} from '@angular/forms';\n\n\nexport interface Dentist {\n  providerId: string;\n  name: string;\n}\n\n@Component({\n  templateUrl: './clinicianproceedures.component.html'\n})\nexport class ClinicianProceeduresComponent implements AfterViewInit {\n  subtitle: string;\n  \n  constructor(private clinicianproceeduresService: ClinicianProceeduresService, private dentistService: DentistService, private datePipe: DatePipe){}\n  private warningMessage: string;\n\n  ngAfterViewInit() {\n    this.buildChartPredictor();\n    this.buildChart();\n    this.buildChartProceedure();\n    this.buildChartReferral();\n    this.getDentists();\n\n  }\n\n  dentists: Dentist[] = [\n   { providerId: 'all', name: 'All Dentists' },\n  ];\n    public stackedChartOptions: any = {\n    scaleShowVerticalLines: false,\n    responsive: true,\n    barThickness: 10,\n    scales: {\n          xAxes: [{ \n            stacked: true, \n            gridLines: { display: false },\n            ticks: {\n    autoSkip: false\n}\n            }],\n          yAxes: [{ \n            stacked: true, \n            ticks: {\n             // callback: function(value) { return numberWithCommas(value); },\n            }, \n            }],\n        }\n  };\n    public pieChartOptions: any = {\n   legend: {\n            display: false\n         }\n  };\n   public barChartOptions: any = {\n    scaleShowVerticalLines: false,\n    responsive: true,\n    barThickness: 10,\n        scales: {\n          xAxes: [{ \n            gridLines: { display: false },\n            ticks: {\n                  autoSkip: false\n              }\n            }],\n          yAxes: [{  \n            ticks: {\n             // callback: function(value) { return numberWithCommas(value); },\n            }, \n            }],\n        },\n         legend: {\n        position: 'top',\n        onClick: function(e, legendItem) {\n          var index = legendItem.datasetIndex;\n          var ci = this.chart; \n          if(index ==0)\n          {\n                (<HTMLElement>document.querySelector('.predicted1')).style.display = 'flex';\n                \n                (<HTMLElement>document.querySelector('.predicted2')).style.display = 'none';\n                (<HTMLElement>document.querySelector('.predicted3')).style.display = 'none';\n\n                ci.getDatasetMeta(1).hidden = true;\n                ci.getDatasetMeta(2).hidden = true;\n                ci.getDatasetMeta(index).hidden = false;\n          }\n          else if(index== 1) {\n            (<HTMLElement>document.querySelector('.predicted1')).style.display = 'none';\n                (<HTMLElement>document.querySelector('.predicted2')).style.display = 'flex';\n\n                (<HTMLElement>document.querySelector('.predicted3')).style.display = 'none';\n                ci.getDatasetMeta(0).hidden = true;\n                ci.getDatasetMeta(2).hidden = true;\n                ci.getDatasetMeta(index).hidden = false;\n          } \n          else if(index== 2) {\n            (<HTMLElement>document.querySelector('.predicted1')).style.display = 'none';\n                (<HTMLElement>document.querySelector('.predicted2')).style.display = 'none';\n                (<HTMLElement>document.querySelector('.predicted3')).style.display = 'flex';\n\n                ci.getDatasetMeta(0).hidden = true;\n                ci.getDatasetMeta(1).hidden = true;\n                ci.getDatasetMeta(index).hidden = false;\n          }\n          ci.update();\n        },\n      }        \n  };\n    public selectedDentist: string;\n  public predicted1: boolean = true;\n  public predicted2: boolean = false;\n  public predicted3: boolean = false;\n  public showInternal: boolean = true;\n  public showExternal: boolean = false;\n  public showCombined: boolean = false;\n  public stackedChartColors: Array<any> = [\n    { backgroundColor: '#1976d2' },\n    { backgroundColor: '#26dad2' },\n    { backgroundColor: '#808080' },\n    { backgroundColor: '#0040ff' },\n    { backgroundColor: '#ffe6e6' },\n\n  ];\n  public stackedChartType = 'bar';\n  public stackedChartLegend = true;\n\n  //labels\n  public stackedChartLabels: string[] = [];  \n  public stackedChartLabels1: string[] = [];\n\n  public predictedChartLabels: string[] = [];\n  public predictedChartLabels1: string[] = [];\n\n  public proceedureChartLabels: string[] = [];\n  public proceedureChartLabels1: string[] = [];\n  public proceedureDentistChartLabels: string[] = [];\n  //data\n  public stackedChartData: any[] = [\n    {data: [], label: 'Crowns'},\n    {data: [], label: 'Splints '},\n    {data: [], label: 'Root Canals'},\n    {data: [], label: 'Perio Charts'},\n    {data: [], label: 'Surgical Extractions'}  ];\n\n  public stackedChartData1: any[] = [];\n  public stackedChartData2: any[] = [];\n  public stackedChartData3: any[] = [];\n  public stackedChartData4: any[] = [];\n  public stackedChartData5: any[] = [];\n\n  public predictedChartData: any[] = [\n    {data: [], label: 'Crown to Large Filling'},\n    {data: [], label: 'Extraction to RCT',hidden: true},\n    {data: [], label: 'RCT Conversion',hidden: true},\n\n    ];\n\n  public predictedChartData1: any[] = [];  \n  public predictedChartData2: any[] = [];  \n  public predictedChartData3: any[] = [];  \n\n  public proceedureChartType = 'horizontalBar';\n\n  public proceedureChartData: any[] = [\n    {data: [], label: 'Total Revenue of Clinician Per Procedure'}\n    ];\n  public proceedureDentistChartData: any[] = [\n    {data: [], label: 'Total Revenue of Clinician Per Procedure'}\n    ];\n  public proceedureChartData1: any[] = []; \n \n\n  //Total  \n  public predictedTotal1 = 0;\n  public predictedTotal2 = 0;\n  public predictedTotal3 = 0;\n\n  public predictedTotalAverage1 = 0;\n  public predictedTotalAverage2 = 0;\n  public predictedTotalAverage3 = 0;\n\n  public pieChartInternalTotal = 0;\n  public pieChartExternalTotal = 0;\n  public pieChartCombinedTotal = 0;\n\n  // Pie\n  public pieChartLabels: string[] = [\n  ];\n  public pieChartData1: number[] = [];\n  public pieChartData2: number[] = [];\n  public pieChartData3: number[] = [];\n\n  public pieChartType = 'pie';\n  public pieChartDatares1: number[] = [];\n  public pieChartDatares2: number[] = [];\n  public pieChartDatares3: number[] = [];\n\n  public pieChartLabelsres: string[] = [\n  ];\n\n  public itemPredictedChartData: any[] = [\n    {data: [10,1,5], label: 'Items Predictor Analysis '}\n\n    ];\n        \n  public itemPredictedChartData1: any[] = [];  \n\n  public itemPredictedChartLabels: string[] = [];\n\n  // events\n  public chartClicked(e: any): void {\n    console.log(e);\n  }\n\n  public chartHovered(e: any): void {\n    console.log(e);\n  }\n  public  gaugeType = \"arch\";\n  public  gaugeValue = '';\n  public  gaugeLabel = \"\";\n  public  gaugeThick = \"20\";\n  public  foregroundColor= \"#1e88e5\";\n  public  cap= \"round\";\n  public  size = \"300\"\n  public  gaugeValuePredicted = 0;\n  public  gaugeValuePredicted1 = 0;\n\n  public  gaugeValuePredicted2 = 0;\n\n  public  gaugeValuePredicted3 = 0;\n  public  gaugeLabelPredicted = \"\";\n  public predictedDentistTotal = 0;\n\n loadDentist(newValue) {\n  if(newValue == 'all') {\n    this.buildChartPredictor();\n    this.buildChart();\n    this.buildChartProceedure();\n    this.buildChartReferral();\n    (<HTMLElement>document.querySelector('.itemsPredictorSingle')).style.display = 'none';\n    (<HTMLElement>document.querySelector('.itemsPredictor')).style.display = 'block';\n\n    (<HTMLElement>document.querySelector('.ratioPredictorSingle')).style.display = 'none';\n    (<HTMLElement>document.querySelector('.ratioPredictor')).style.display = 'block';    \n\n        (<HTMLElement>document.querySelector('.revenueProceedureSingle')).style.display = 'none';\n    (<HTMLElement>document.querySelector('.revenueProceedure')).style.display = 'block';\n/*\n    (<HTMLElement>document.querySelector('.treatmentPlanSingle')).style.display = 'none';\n    (<HTMLElement>document.querySelector('.treatmentPlan')).style.display = 'block';\n\n    (<HTMLElement>document.querySelector('.noPatientsSingle')).style.display = 'none';\n    (<HTMLElement>document.querySelector('.noPatients')).style.display = 'block';*/\n  }\n  else {\n    this.selectedDentist = newValue;\n    this.buildChartDentist();\n    (<HTMLElement>document.querySelector('.itemsPredictorSingle')).style.display = 'block';\n    (<HTMLElement>document.querySelector('.itemsPredictor')).style.display = 'none';\n\n    this.buildChartPredictorDentist();\n    (<HTMLElement>document.querySelector('.ratioPredictorSingle')).style.display = 'block';\n    (<HTMLElement>document.querySelector('.ratioPredictor')).style.display = 'none';\n\n    this.buildChartProceedureDentist();\n    (<HTMLElement>document.querySelector('.revenueProceedureSingle')).style.display = 'block';\n    (<HTMLElement>document.querySelector('.revenueProceedure')).style.display = 'none';\n    this.buildChartReferralDentist();\n/*    this.buildChartTreatmentDentist();\n    (<HTMLElement>document.querySelector('.treatmentPlanSingle')).style.display = 'block';\n    (<HTMLElement>document.querySelector('.treatmentPlan')).style.display = 'none';\n\n    this.buildChartNopatientsDentist();\n    (<HTMLElement>document.querySelector('.noPatientsSingle')).style.display = 'block';\n    (<HTMLElement>document.querySelector('.noPatients')).style.display = 'none';*/\n  }\n\n  }\n\n  //Items Predictor Analysis \n  private buildChart(startDate ='', endDate='') {\n    var user_id;\n    var clinic_id;\n  this.clinicianproceeduresService.ItemsPredictorAnalysis(user_id = '23', clinic_id='1',startDate,endDate).subscribe((data) => {\n       if(data.message == 'success'){\n        if(data.data.length <=0) {\n\n        }else {\n        data.data.forEach(res => {\n           this.stackedChartData1.push(res.crowns);\n           this.stackedChartData2.push(res.splints);\n           this.stackedChartData3.push(res.root_canals);\n           this.stackedChartData4.push(res.perio);\n           this.stackedChartData5.push(res.surgical_extractions);\n           this.stackedChartLabels1.push(res.provider);\n       //    this.productionTotal = this.productionTotal + parseInt(res.total);\n         });\n      \n       this.stackedChartData[0]['data'] = this.stackedChartData1;\n       this.stackedChartData[1]['data'] = this.stackedChartData2;\n       this.stackedChartData[2]['data'] = this.stackedChartData3;\n       this.stackedChartData[3]['data'] = this.stackedChartData4;\n       this.stackedChartData[4]['data'] = this.stackedChartData5;\n\n       this.stackedChartLabels = this.stackedChartLabels1;\n       //this.productionTotalAverage = this.productionTotal/this.barChartData1.length;\n     }\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n  //Items Predictor Analysis Single\n  private buildChartDentist(startDate ='', endDate='') {\n    var user_id;\n    var clinic_id;\n  this.clinicianproceeduresService.ItemsPredictorAnalysisDentist(this.selectedDentist, user_id = '23', clinic_id='1',startDate,endDate).subscribe((data) => {\n       if(data.message == 'success'){\n          this.itemPredictedChartData1 = [];\n          this.itemPredictedChartData1.push(data.data[0].crowns);\n          this.itemPredictedChartData1.push(data.data[0].splints);\n          this.itemPredictedChartData1.push(data.data[0].root_canals);\n          this.itemPredictedChartData1.push(data.data[0].perio);\n          this.itemPredictedChartData1.push(data.data[0].surgical_extractions);\n\n       this.itemPredictedChartData[0]['data'] = this.itemPredictedChartData1;\n       this.itemPredictedChartData[0]['label'] = data.data[0].provider;\n       this.itemPredictedChartLabels= ['Crowns','Splints','Root Canals','Perio','Surgical Extractions'];\n\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n//Predictor Ratio :\n  private buildChartPredictor(startDate ='', endDate='') {\n       var user_id;\n    var clinic_id;\n  this.clinicianproceeduresService.PredictorRatio(user_id = '23', clinic_id='1',startDate,endDate).subscribe((data) => {\n       if(data.message == 'success'){\n        data.data.forEach(res => {\n           this.predictedChartData1.push(res.ratio1);\n           this.predictedChartData2.push(res.ratio2);\n           this.predictedChartData3.push(res.ratio3);\n           this.predictedChartLabels1.push(res.provider);\n           this.predictedTotal1 = this.predictedTotal1 + parseInt(res.ratio1);\n           this.predictedTotal2 = this.predictedTotal2 + parseInt(res.ratio2);\n           this.predictedTotal3 = this.predictedTotal3 + parseInt(res.ratio3);\n\n });\n       this.predictedChartData[0]['data'] = this.predictedChartData1;\n       this.predictedChartData[1]['data'] = this.predictedChartData2;\n       this.predictedChartData[2]['data'] = this.predictedChartData3;\n\n       this.predictedTotalAverage1 = this.predictedTotal1/this.predictedChartData1.length;\n       this.predictedTotalAverage2 = this.predictedTotal2/this.predictedChartData2.length;\n       this.predictedTotalAverage3 = this.predictedTotal3/this.predictedChartData3.length;\n\n       this.predictedChartLabels = this.predictedChartLabels1;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n  //Predictor Ratio :\n  private buildChartPredictorDentist(startDate ='', endDate='') {\n       var user_id;\n    var clinic_id;\n  this.clinicianproceeduresService.PredictorRatioDentist(this.selectedDentist, user_id = '23', clinic_id='1',startDate,endDate).subscribe((data) => {\n       if(data.message == 'success'){\n           this.gaugeValuePredicted1 = data.data[0].ratio1;\n           this.gaugeValuePredicted2 = data.data[0].ratio2;\n           this.gaugeValuePredicted3 = data.data[0].ratio3;\n           this.gaugeLabelPredicted = data.data[0].provider;\n           this.predictedDentistTotal = data.data[0].ratio1;\n           this.gaugeValuePredicted= this.gaugeValuePredicted1*100;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n//Total Revenue of Clinician Per Procedure\n  private buildChartProceedure(startDate ='', endDate='') {\n        var user_id;\n    var clinic_id;\n  this.clinicianproceeduresService.ClinicianProceedure(user_id = '23', clinic_id='1',startDate,endDate).subscribe((data) => {\n       if(data.message == 'success'){\n        data.data.forEach(res => {\n           this.proceedureChartData1.push(res.total);+\n           this.proceedureChartLabels1.push(res.treat_item);\n       //    this.productionTotal = this.productionTotal + parseInt(res.total);\n });\n       this.proceedureChartData[0]['data'] = this.proceedureChartData1;\n       this.proceedureChartLabels = this.proceedureChartLabels1;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n\n//Total Revenue of Clinician Per Procedure\n  private buildChartProceedureDentist(startDate ='', endDate='') {\n        var user_id;\n    var clinic_id;\n    this.proceedureChartData1 = [];\n           this.proceedureChartLabels1 = [];\n  this.clinicianproceeduresService.ClinicianProceedureDentist(this.selectedDentist, user_id = '23', clinic_id='1',startDate,endDate).subscribe((data) => {\n       if(data.message == 'success'){\n        data.data.forEach(res => {\n           this.proceedureChartData1.push(res.total);\n           this.proceedureChartLabels1.push(res.treat_item);\n       //    this.productionTotal = this.productionTotal + parseInt(res.total);\n });\n       this.proceedureDentistChartData[0]['data'] = this.proceedureChartData1;\n       this.proceedureDentistChartLabels = this.proceedureChartLabels1;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n  //Referral to Other Clinicians Internal / External\n  private buildChartReferral(startDate ='', endDate='') {\n        var user_id;\n    var clinic_id;\n  this.clinicianproceeduresService.ClinicianReferral(user_id = '23', clinic_id='1',startDate,endDate).subscribe((data) => {\n       if(data.message == 'success'){\n                  this.pieChartDatares1 = [];\n           this.pieChartDatares2 = [];\n           this.pieChartDatares3 = [];\n           this.pieChartLabelsres = [];\n        data.data.forEach(res => {\n           this.pieChartDatares1.push(res.i_count);\n           this.pieChartDatares2.push(res.e_count);\n           this.pieChartDatares3.push(res.total);\n           this.pieChartLabelsres.push(res.label);\n           this.pieChartInternalTotal = this.pieChartInternalTotal + parseInt(res.i_count);\n           this.pieChartExternalTotal = this.pieChartExternalTotal + parseInt(res.e_count);\n           this.pieChartCombinedTotal = this.pieChartCombinedTotal + parseInt(res.total);\n });\n\n       this.pieChartData1 = this.pieChartDatares1;\n       this.pieChartData2 = this.pieChartDatares2;\n       this.pieChartData3 = this.pieChartDatares3;\n\n       this.pieChartLabels = this.pieChartLabelsres;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n  //Referral to Other Clinicians Internal / External\n  private buildChartReferralDentist(startDate ='', endDate='') {\n        var user_id;\n    var clinic_id;\n  this.clinicianproceeduresService.ClinicianReferralDentist(this.selectedDentist, user_id = '23', clinic_id='1',startDate,endDate).subscribe((data) => {\n       if(data.message == 'success'){\n          this.pieChartDatares1 = [];\n           this.pieChartDatares2 = [];\n           this.pieChartDatares3 = [];\n           this.pieChartLabelsres = [];\n        data.data.forEach(res => {\n           this.pieChartDatares1.push(res.i_count);\n           this.pieChartDatares2.push(res.e_count);\n           this.pieChartDatares3.push(res.total);\n           this.pieChartLabelsres.push(res.label);\n           this.pieChartInternalTotal = this.pieChartInternalTotal + parseInt(res.i_count);\n           this.pieChartExternalTotal = this.pieChartExternalTotal + parseInt(res.e_count);\n           this.pieChartCombinedTotal = this.pieChartCombinedTotal + parseInt(res.total);\n });\n\n       this.pieChartData1 = this.pieChartDatares1;\n       this.pieChartData2 = this.pieChartDatares2;\n       this.pieChartData3 = this.pieChartDatares3;\n\n       this.pieChartLabels = this.pieChartLabelsres;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n \n    }\n    );\n  }\n\n   changePieReferral(chart){\n    this.showInternal =false;\n    this.showExternal = false;\n    this.showCombined = false;\n    if(chart == 'Internal') \n      this.showInternal = true;\n    else if(chart == 'External')\n      this. showExternal =true;\n    else if(chart == 'Combined')\n      this.showCombined = true;\n  }\n\n  // Filter By Date\n  filterDate(duration) {\n    if(duration == 'w') {\n      const now = new Date();\n       var first = now.getDate() - now.getDay();\n       var last = first +6; \n       var startDate = this.datePipe.transform(new Date(now.setDate(first)).toUTCString(), 'yyyy-MM-dd');\n       var endDate = this.datePipe.transform(new Date(now.setDate(last)).toUTCString(), 'yyyy-MM-dd');\n       var dates = startDate + \",\" +endDate; \n    }\n    else if (duration == 'm') {\n      var date = new Date();\n      var startDate = this.datePipe.transform(new Date(date.getFullYear(), date.getMonth(), 1), 'yyyy-MM-dd');\n      var endDate = this.datePipe.transform(new Date(date.getFullYear(), date.getMonth() + 1, 0), 'yyyy-MM-dd');\n    }\n    console.log(startDate + ' ' + endDate);\n\n      this.buildChart(startDate,endDate);\n  }\n  // Get Dentist\n    getDentists() {\n      this.dentistService.getDentists().subscribe((res) => {\n           if(res.message == 'success'){\n              this.dentists= res.data;\n           }\n        }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n        }    \n        );\n\n  }\n  changeDentistPredictor(val){\n    if(val =='1') {\n       this.gaugeValuePredicted= this.gaugeValuePredicted1*100;\n           this.predictedDentistTotal = this.gaugeValuePredicted1;\n\n     }\n    else if(val =='2'){\n       this.gaugeValuePredicted= this.gaugeValuePredicted2*100;\n           this.predictedDentistTotal = this.gaugeValuePredicted2;\n\n     }\n    else if(val =='3') {\n       this.gaugeValuePredicted= this.gaugeValuePredicted3*100;  \n           this.predictedDentistTotal = this.gaugeValuePredicted3;\n\n     }\n  }   \n \n}\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClinicianProceeduresService {\n public token: string;\n    private headers: HttpHeaders;\n\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n    // Items Predictor Analysis \n    ItemsPredictorAnalysis(user_id = '23', clinic_id='1', startDate = '', endDate = '' ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/ClinicianProcedures/cpItemsPredictorAnalysis?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\")+\"&start_date=\"+startDate+\"&end_date=\"+endDate, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    // Items Predictor Analysis \n    ItemsPredictorAnalysisDentist(dentist_id, user_id = '23', clinic_id='1', startDate = '', endDate = '' ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/ClinicianProcedures/cpItemsPredictorAnalysis?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\")+\"&start_date=\"+startDate+\"&end_date=\"+endDate+\"&dentist_id=\"+dentist_id, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    //Predictor Ratio 1:\n    PredictorRatio(user_id = '23', clinic_id='1', startDate = '', endDate = ''): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/ClinicianProcedures/cpPredictorRatio?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\")+\"&start_date=\"+startDate+\"&end_date=\"+endDate, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }  \n        //Predictor Ratio 1:\n    PredictorRatioDentist(dentist_id, user_id = '23', clinic_id='1', startDate = '', endDate = ''): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/ClinicianProcedures/cpPredictorRatio?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\")+\"&start_date=\"+startDate+\"&end_date=\"+endDate+\"&dentist_id=\"+dentist_id, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }  \n    \n   //Total Revenue of Clinician Per Procedure\n    ClinicianProceedure(user_id = '23', clinic_id='1', startDate = '', endDate = ''): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/ClinicianProcedures/cpTotalRevenueOfClinicianPerProcedure?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\")+\"&start_date=\"+startDate+\"&end_date=\"+endDate, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    } \n\n   //Total Revenue of Clinician Per Procedure\n    ClinicianProceedureDentist(dentist_id, user_id = '23', clinic_id='1', startDate = '', endDate = '' ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/ClinicianProcedures/cpTotalRevenueOfClinicianPerProcedure?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\")+\"&start_date=\"+startDate+\"&end_date=\"+endDate+\"&dentist_id=\"+dentist_id, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    } \n\n    //Referral to Other Clinicians Internal / External\n    ClinicianReferral(user_id = '23', clinic_id='1', startDate = '', endDate = '' ): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/ClinicianProcedures/cpReferralToOtherClinicians?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\")+\"&start_date=\"+startDate+\"&end_date=\"+endDate, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n\n    //Referral to Other Clinicians Internal / External\n    ClinicianReferralDentist(dentist_id, user_id = '23', clinic_id='1', startDate = '', endDate = ''): Observable<any> {\n        return this.http.get(\"http://localhost/jeeveanalytics/server/ClinicianProcedures/cpReferralToOtherClinicians?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\")+\"&start_date=\"+startDate+\"&end_date=\"+endDate, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n      \n}\n\n","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ChartsModule } from 'ng2-charts';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { DashboardsRoutes } from './dashboards.routing';\nimport { ChartistModule } from 'ng-chartist';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ClinicianAnalysisService } from './cliniciananalysis/cliniciananalysis.service';\nimport { ClinicianAnalysisComponent } from './cliniciananalysis/cliniciananalysis.component';\nimport { ClinicianProceeduresService } from './clinicianproceedures/clinicianproceedures.service';\nimport { ClinicianProceeduresComponent } from './clinicianproceedures/clinicianproceedures.component';\nimport { DentistService } from '../dentist/dentist.service';\nimport { NgxGaugeModule } from 'ngx-gauge';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DashboardsRoutes),\n    DemoMaterialModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    CdkTableModule,\n    ChartistModule,\n    ChartsModule,\n    NgxChartsModule,\n    NgxGaugeModule\n  ],\n  providers: [ ClinicianAnalysisService, ClinicianProceeduresService, DentistService,DatePipe],\n  declarations: [ClinicianAnalysisComponent, ClinicianProceeduresComponent]\n})\nexport class DashboardsModule {}\n","import { Routes } from '@angular/router';\n\nimport { ClinicianAnalysisComponent } from './cliniciananalysis/cliniciananalysis.component';\nimport { ClinicianProceeduresComponent } from './clinicianproceedures/clinicianproceedures.component';\n\nexport const DashboardsRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'cliniciananalysis',\n        component: ClinicianAnalysisComponent\n      },\n      {\n        path: 'clinicianproceedures',\n        component: ClinicianProceeduresComponent\n      }\n    ]\n  }\n];\n"],"sourceRoot":""}