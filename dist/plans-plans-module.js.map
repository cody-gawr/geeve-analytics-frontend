{"version":3,"sources":["webpack:///./src/app/plans/dialog-overview-example.html","webpack:///./src/app/plans/plans.component.html","webpack:///./src/app/plans/plans.component.scss","webpack:///./src/app/plans/plans.component.ts","webpack:///./src/app/plans/plans.module.ts","webpack:///./src/app/plans/plans.routing.ts","webpack:///./src/app/plans/plans.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+XAA+X,2DAA2D,kHAAkH,6BAA6B,GAAG,qDAAqD,yJAAyJ,yBAAyB,wsBAAwsB,iBAAiB,cAAc,EAAE,kjB;;;;;;;;;;;ACA5hD,gjCAAgjC,YAAY,4hBAA4hB,OAAO,o5BAAo5B,OAAO,i6BAAi6B,OAAO,+6BAA+6B,OAAO,uVAAuV,iBAAiB,cAAc,EAAE,ylBAAylB,OAAO,m4BAAm4B,OAAO,ivBAAivB,mc;;;;;;;;;;;ACA36N,0CAA0C,sBAAsB,EAAE,cAAc,uBAAuB,qBAAqB,EAAE,+CAA+C,+e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhG;AAC9B;AAC8B;AACxB;AACI;AAC6B;AAItF,IAAM,IAAI,GAAQ,EAAE,CAAC;AAOrB;IAKE,8CAES,SAA6D,EACpC,IAAS;QADlC,cAAS,GAAT,SAAS,CAAoD;QACpC,SAAI,GAAJ,IAAI,CAAK;QALpC,cAAS,GAAM,EAAE,CAAC;IAMpB,CAAC;IACN,wDAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAZU,oCAAoC;QANhD,+DAAS,CAAC;YACT,QAAQ,EAAE,oCAAoC;;SAE/C,CAAC;QAWG,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY;OAPrB,oCAAoC,CAahD;IAAD,2CAAC;CAAA;AAbgD;AAoBjD;IAmCE,wBAAoB,YAA0B,EAAS,MAAiB,EAAS,cAA6B,EAAU,MAAc;QAAtI,iBAMC;QANmB,iBAAY,GAAZ,YAAY,CAAc;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,mBAAc,GAAd,cAAc,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QA3BtI,UAAK,GAAG,IAAI,0DAAW,EAAE,CAAC;QAU1B,YAAO,GAAG,EAAE,CAAC;QACb,SAAI,GAAG,EAAE,CAAC;QAEV,SAAI,GAAO,IAAI,SAAE;QAEjB,qBAAgB,GAAG,IAAI,CAAC;QACxB,gBAAW,GAAG,IAAI,CAAC;QASnB,YAAO,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAE,CAAC;QAGhJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAO,IAAI,QAAC,CAAC;QACtB,UAAU,CAAC;YACT,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IA/BD,wCAAe,GAAf;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACjB,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACpC,iCAAiC;QACjC,mBAAmB;IAEtB,CAAC;IA2BD,wCAAe,GAAf;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrD,IAAG,IAAI,CAAC,SAAS;YACb,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAGO,iCAAQ,GAAhB;QAAA,iBAeC;QAdA,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC;QACd,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;YAEpD,IAAG,GAAG,CAAC,OAAO,IAAI,SAAS,EAAC;gBAC3B,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACrB,KAAI,CAAC,IAAI,GAAO,GAAG,CAAC,IAAI,QAAC,CAAC;gBAC1B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aAElB;QACJ,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,cAAc,GAAG,8BAA8B,CAAC;QACvD,CAAC,CACA,CAAC;IAEJ,CAAC;IAED,mCAAU,GAAV;QAAA,iBA2BD;QAzBC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oCAAoC,EAAE;YACvE,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAG,WAAW,EAAE,IAAI,CAAC,WAAW,EAAC,aAAa,EAAC,IAAI,CAAC,aAAa,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAG;SAE1M,CAAC,CAAC;QAIH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACxC,IAAI,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,EAAJ,CAAI,CAAC,CAAC;YAC9B,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YAE1B,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,EAAC,MAAM,CAAC,QAAQ,EAAC,MAAM,CAAC,WAAW,EAAC,KAAI,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;gBAExJ,IAAG,GAAG,CAAC,OAAO,IAAI,SAAS,EAAC;oBACtB,KAAK,CAAC,gBAAgB,CAAC,CAAC;oBACrB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACnB;YACJ,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,cAAc,GAAG,8BAA8B,CAAC;YACvD,CAAC,CACA,CAAC;QACF,CAAC,CAAC,CAAC;IAET,CAAC;IAGO,sCAAa,GAArB;QAAA,iBAaG;QAXD,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG;YAC1C,IAAG,GAAG,CAAC,OAAO,IAAI,SAAS,EAAC;gBAC3B,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;gBAC/B,4BAA4B;gBACzB,oCAAoC;aACvC;QACJ,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,cAAc,GAAG,8BAA8B,CAAC;QACvD,CAAC,CACA,CAAC;IAEJ,CAAC;IAEK,mCAAU,GAAlB,UAAmB,GAAG;QAAtB,iBAkBC;QAjBQ,IAAG,OAAO,CAAC,mCAAmC,CAAC,EAAE;YAC9C,IAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;gBACvB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;oBAChE,IAAG,GAAG,CAAC,OAAO,IAAI,SAAS,EAAC;wBAC3B,KAAK,CAAC,cAAc,CAAC,CAAC;wBACpB,KAAI,CAAC,QAAQ,EAAE,CAAC;qBAClB;gBACJ,CAAC,EAAE,eAAK;oBACN,KAAI,CAAC,cAAc,GAAG,8BAA8B,CAAC;gBACvD,CAAC,CACA,CAAC;aACD;iBACI;gBACH,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,GAAO,IAAI,CAAC,IAAI,QAAC,CAAC;aAC1B;SACF;IACX,CAAC;IACD,qCAAY,GAAZ,UAAa,KAAK;QAChB,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1B,kBAAkB;QACpB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAS,CAAC;YAEtC,OAAO,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;QAC9D,CAAC,CAAC,CAAC;QACH,kBAAkB;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,gEAAgE;QAChE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,oCAAW,GAAX,UAAY,KAAK,EAAE,IAAI,EAAE,QAAQ;QAAjC,iBAmBC;QAlBC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC;QAC5C,IAAG,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;YACzB,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAC7B;YACL,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YAE/C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;gBACnH,iBAAiB;gBAChB,IAAG,GAAG,CAAC,OAAO,IAAI,SAAS,EAAC;oBAC3B,KAAK,CAAC,cAAc,CAAC,CAAC;oBACpB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBAClB;YACJ,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,cAAc,GAAG,8BAA8B,CAAC;YACvD,CAAC,CACA,CAAC;YACF,IAAI,CAAC,IAAI,GAAO,IAAI,CAAC,IAAI,QAAC,CAAC;SAC5B;IACD,CAAC;IAED,sCAAa,GAAb,UAAc,QAAQ,EAAE,IAAI;QAE1B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QAC/C,4BAA4B;IAC1B,CAAC;IA5KU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAoCkC,2DAAY,EAAiB,2DAAS,EAAyB,kEAAa,EAAkB,sDAAM;OAnC3H,cAAc,CA8K1B;IAAD,qBAAC;CAAA;AA9K0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCc;AACM;AACA;AACI;AACU;AACA;AACd;AAC0C;AAC3C;AACoB;AAkBlE;IAAA;IAA2B,CAAC;IAAf,WAAW;QAhBvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,0DAAW,CAAC;gBAClC,gEAAc;gBACd,0EAAkB;gBAClB,wEAAkB;gBAClB,kEAAmB;gBACnB,0DAAW;aACZ;YACD,SAAS,EAAE;gBACT,2DAAY;aACb;YACD,eAAe,EAAE,CAAC,qFAAoC,CAAC;YACvD,YAAY,EAAE,CAAE,+DAAc,EAAC,qFAAoC,CAAE;SACtE,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACzBxB;AAAA;AAAA;AAAmD;AAE5C,IAAM,WAAW,GAAW;IACjC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;QACzB,IAAI,EAAE;YACJ,KAAK,EAAE,OAAO;SACf;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACQ;AAEmB;AAET;AACQ;AAI7D;IAOI,sBAAoB,IAAgB,EAAS,cAA6B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAS,mBAAc,GAAd,cAAc,CAAe;QAFlE,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;QAIhC,gBAAgB;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,8BAA8B,EAAE,6CAA6C,CAAC,CAAC;IACxG,CAAC;IAGD,cAAc;IACb,+BAAQ,GAAR,UAAS,SAAS,EAAC,OAA2C,EAAE,KAAwC;QAArF,oCAAU,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC;QAAE,gCAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;QAEpG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAE,kCAAkC,GAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,GAAC,WAAW,GAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAC,aAAa,GAAC,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACtM,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB;YACjB,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACT,CAAC;IACN,CAAC;IAGD,oCAAa,GAAb,UAAc,OAA2C,EAAE,KAAwC;QAArF,oCAAU,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC;QAAE,gCAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;QAE/F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAE,kCAAkC,GAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,GAAC,WAAW,GAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC9K,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB;YACjB,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACT,CAAC;IACN,CAAC;IAIE,gBAAgB;IACnB,iCAAU,GAAV,UAAW,EAAE,EAAE,KAAwC;QAAxC,gCAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;QACvD,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC1B,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAE,8BAA8B,EAAE,QAAQ,CAAC;aAC3E,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB;YACb,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACb,CAAC;IACN,CAAC;IAED,gBAAgB;IAChB,iCAAU,GAAV,UAAW,QAAQ,EAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,KAAwC;QAAxC,gCAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;QACtF,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAEhC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACvC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC/B,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9D,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAE7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAE,+BAA+B,EAAE,QAAQ,CAAC;aAC5E,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB;YACb,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACb,CAAC;IACN,CAAC;IAED,gBAAgB;IAChB,+BAAQ,GAAR,UAAS,QAAQ,EAAE,UAAU,EAAC,WAAW,EAAC,QAAQ,EAAE,WAAW,EAAC,SAAS,EAAC,KAAK,EAAC,KAAuC;QAAvC,gCAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;QACvH,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAEhC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9D,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACxC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACtC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAC1C,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QACrC,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAC,WAAW,CAAC,CAAC;QAC3C,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAC5C,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACxC,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAC,KAAK,CAAE,CAAC;QACvC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAE,4BAA4B,EAAE,QAAQ,CAAC;aACzE,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAkB;YACb,OAAO,QAAQ,CAAC;QAChC,CAAC,CAAC,CACD,CAAC;IACN,CAAC;IAzFQ,YAAY;QADxB,gEAAU,EAAE;yCAQiB,+DAAU,EAAyB,kEAAa;OAPjE,YAAY,CA0FxB;IAAD,mBAAC;CAAA;AA1FwB","file":"plans-plans-module.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title>Add Member Plan</h1>\\n<div mat-dialog-content>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.planName\\\" placeholder=\\\"Member Plan\\\">\\n  </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Treatments\\\" [formControl]=\\\"data.treat\\\" multiple>\\n          <mat-select-trigger >\\n          {{data.treat.value ?  data.treat.value[0].treatmentName: ''}}\\n            <span *ngIf=\\\"data.treat.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\n          (+{{data.treat.value.length - 1}} {{data.treat.value?.length === 2 ? 'other' : 'others'}})   \\n            </span>\\n          </mat-select-trigger>\\n          <mat-option *ngFor=\\\"let treatment of data.treatmentdata\\\" [value]=\\\"treatment\\\">{{treatment.treatmentName}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n \\n\\n  <mat-form-field>\\n    <mat-label>Duration</mat-label> \\n    <mat-select name =\\\"value\\\" tabindex=\\\"1\\\" [(ngModel)]= \\\"data.planLength\\\">\\n      <mat-option value=\\\"MONTHLY\\\">MONTHLY</mat-option>\\n      <mat-option value=\\\"YEARLY\\\">YEARLY</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" [(ngModel)]=\\\"data.totalAmount\\\" placeholder=\\\"Total Amount\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n      <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" [(ngModel)]=\\\"data.discount\\\" class=\\\"form-control\\\" min=\\\"1\\\" max=\\\"100\\\"  onkeyup=\\\"if(parseInt(this.value)>100){ this.value =100; return false; }\\\" required=\\\"true\\\" placeholder=\\\"Discount %\\\">\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n        <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.description\\\" placeholder=\\\"Description\\\">\\n      </mat-form-field>\\n  <!--  <input type=\\\"file\\\" (change)=\\\"onChange($event)\\\"> -->\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\"","module.exports = \"\\n<input type=\\\"button\\\" id=\\\"clinic_initiate\\\" (click) = \\\"initiate_clinic()\\\"  [style.display]=\\\"'none'\\\">\\n\\n<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>Member Plans <button class=\\\"sa-pull-right mat-raised-button mat-gray\\\" mat-raised-button (click)=\\\"openDialog()\\\">Add Member Plan</button></mat-card-title>\\n\\n        <mat-form-field>\\n            <input matInput type='text' class=\\\"form-control\\\" placeholder='Type to filter Plan name...' (keyup)='updateFilter($event)'\\n            />\\n        </mat-form-field>\\n        <ngx-datatable #table class='material' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\n       <ngx-datatable-column name=\\\"Id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Id</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span>\\n            {{rowIndex+1}}\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"planName\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Member Plan</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'planName')\\\" *ngIf=\\\"!editing[rowIndex + '-planName'] && value != ''\\\">\\n            {{value}}\\n          </span>\\n           <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'planName')\\\" *ngIf=\\\"!editing[rowIndex + '-planName'] && value == ''\\\">\\n            Enter plan\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'planName', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-planName']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n       <ngx-datatable-column name=\\\"planLength\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Plan Length</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'planLength')\\\" *ngIf=\\\"!editing[rowIndex + '-planLength'] && value != ''\\\">\\n            {{value}}\\n          </span>\\n           <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'planLength')\\\" *ngIf=\\\"!editing[rowIndex + '-planLength'] && value == ''\\\">\\n            Enter plan\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'planLength', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-planLength']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n       <ngx-datatable-column name=\\\"totalAmount\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Total Amount</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'totalAmount')\\\" *ngIf=\\\"!editing[rowIndex + '-totalAmount'] && value != ''\\\">\\n           $ {{value}}\\n          </span>\\n           <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'totalAmount')\\\" *ngIf=\\\"!editing[rowIndex + '-totalAmount'] && value == ''\\\">\\n            Enter Total Amount\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'totalAmount', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-totalAmount']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n\\n      </ngx-datatable-column>\\n\\n\\n  \\n\\n     <ngx-datatable-column name=\\\"discount\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n       <span>Discount</span>\\n     </ng-template>\\n       <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n         <span title=\\\"Double click to edit\\\" max=\\\"100\\\" (dblclick)=\\\"enableEditing(rowIndex,'discount')\\\" *ngIf=\\\"!editing[rowIndex + '-discount'] && value != ''\\\">\\n           {{value}} %\\n         </span>\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'discount')\\\"  *ngIf=\\\"!editing[rowIndex + '-discount'] && value == ''\\\">\\n           Enter Discount\\n         </span>\\n         <input autofocus (blur)=\\\"updateValue($event, 'discount', rowIndex)\\\" onkeyup=\\\"if(parseInt(this.value)>100){ this.value =100; return false; }\\\" *ngIf=\\\"editing[rowIndex+ '-discount']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n         />\\n       </ng-template>\\n     </ngx-datatable-column>\\n\\n\\n     <ngx-datatable-column name=\\\"treatments\\\">\\n      <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n     <span>Treatment Name</span>\\n   </ng-template>\\n     <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n       <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'treatments')\\\" *ngIf=\\\"!editing[rowIndex + '-treatments'] && value != ''\\\">\\n         {{value}}\\n       </span>\\n        <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'treatments')\\\" *ngIf=\\\"!editing[rowIndex + '-treatments'] && value == ''\\\">\\n         Enter Treatment Name\\n       </span>\\n       <input autofocus (blur)=\\\"updateValue($event, 'treatments', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-treatments']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n       />\\n     </ng-template>\\n   </ngx-datatable-column>\\n      \\n   <ngx-datatable-column name=\\\"description\\\">\\n      <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n     <span>Description</span>\\n   </ng-template>\\n     <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n       <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'description')\\\" *ngIf=\\\"!editing[rowIndex + '-description'] && value != ''\\\">\\n         {{value}}\\n       </span>\\n        <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'description')\\\" *ngIf=\\\"!editing[rowIndex + '-description'] && value == ''\\\">\\n         Enter Description\\n       </span>\\n       <input autofocus (blur)=\\\"updateValue($event, 'description', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-description']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n       />\\n     </ng-template>\\n   </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Actions</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" style=\\\"width:266px!important;\\\">\\n            <a [routerLink]=\\\"['/patients-detail',value]\\\" class=\\\"action_btn golden\\\" title= 'Patients Detail'><i class=\\\"ti-settings  m-r-10\\\"></i></a>\\n          <button class=\\\"action_btn danger\\\" mat-menu-item (click) = \\\"deletePlan(rowIndex)\\\">\\n         \\n         <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n        </ngx-datatable>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".lds-roller div::after {\\n  background: black; }\\n\\n.spinner {\\n  position: relative;\\n  background: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVtZW1iZXJzL2NsaWVudDIvc3JjL2FwcC9wbGFucy9wbGFucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFpQixFQUNwQjs7QUFDRDtFQUNJLG1CQUFrQjtFQUNsQixpQkFBZ0IsRUFDbkIiLCJmaWxlIjoic3JjL2FwcC9wbGFucy9wbGFucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sZHMtcm9sbGVyIGRpdjo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IGJsYWNrO1xufVxuLnNwaW5uZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xufSJdfQ== */\"","import { Component, Inject , ViewChild, AfterViewInit } from '@angular/core';\nimport { PlansService } from './plans.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormControl, FormGroupDirective,  NgForm,  Validators} from '@angular/forms';\n\n\ndeclare var require: any;\nconst data: any = [];\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example.html',\n})\n\n\nexport class DialogOverviewExampleDialogComponent {\n\n\n  public clinic_id:any ={};\n\n  constructor(\n    \n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './plans.component.html',\n  styleUrls: ['./plans.component.scss']\n})\nexport class PlansComponent implements AfterViewInit {\n  \n  name: string;\n  address: string;\n  contact_name: string;\n  fileInput: any ;\n  clinic_id: any;\n\n  treat = new FormControl();\n\n  ngAfterViewInit() {\n    this.initiate_clinic();\n    this.getTreatments();\n        $('#title').html('Members Plan');\n     //   $('.header_filters').hide();\n     // this.getPlans();\n  \n  }\n  editing = {};\n  rows = [];\n \n  temp = [...data];\n  table;\n  loadingIndicator = true;\n  reorderable = true;\n\n  public planName;\n  public planLength;\n  public totalAmount;\n  public description;\n  public discount;\n  public treatmentdata;\n\n  columns = [{ prop: 'id' }, { name: 'planName' }, { name: 'planLength' }, { name: 'totalAmount' }, { name: 'discount' }, { name: 'description' } ];\n\n  constructor(private plansService: PlansService, public dialog: MatDialog,private _cookieService: CookieService, private router: Router) {\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n  }\n  private warningMessage: string;\n\n  initiate_clinic(){  \n    this.clinic_id = $('#currentClinicid').attr('cid');\n  if(this.clinic_id)\n      this.getPlans();\n    }\n    \n    \n    private getPlans() {\n     this.rows=[];\n    this.plansService.getPlans(this.clinic_id).subscribe((res) => {\n    \n         if(res.message == 'success'){\n          this.rows = res.data;\n          this.temp = [...res.data];        \n          this.table = data;\n         \n         }\n      }, error => {\n        this.warningMessage = \"Please Provide Valid Inputs!\";\n      }    \n      );\n  \n    }\n\n    openDialog(): void {\n      \n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n      width: '250px',\n      data: { planName: this.planName, planLength: this.planLength, totalAmount: this.totalAmount ,discount: this.discount , description: this.description,treatmentdata:this.treatmentdata,treat:this.treat  }\n     \n    });\n\n   \n\n    dialogRef.afterClosed().subscribe(result => {\n    var test = this.treat.value;\n    var data1 = test.map(t=>t.id);\n    var tretid = data1.join();\n    \n    this.plansService.addPlans(result.planName, result.planLength, result.totalAmount,result.discount,result.description,this.clinic_id,tretid).subscribe((res) => {\n      \n      if(res.message == 'success'){\n            alert('New Plan Added');\n               this.getPlans();\n           }\n        }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n        }    \n        );  \n        });\n\n  }\n\n\n  private getTreatments() {\n\n    this.plansService.getTreatments().subscribe((res) => {\n          if(res.message == 'success'){\n           this.treatmentdata = res.data;\n          //  console.log(this.treat);\n             //  console.log(this.treatmentdata);\n         }\n      }, error => {\n        this.warningMessage = \"Please Provide Valid Inputs!\";\n      }    \n      );\n  \n    }\n\n  private deletePlan(row) {\n           if(confirm(\"Are you sure to delete this plan?\")) {\n              if(this.rows[row]['id']) {\n                this.plansService.deletePlan(this.rows[row]['id']).subscribe((res) => {\n                 if(res.message == 'success'){\n                  alert('Plan Removed');\n                    this.getPlans();\n                 }\n              }, error => {\n                this.warningMessage = \"Please Provide Valid Inputs!\";\n              }    \n              );\n              }\n              else {\n                this.rows.splice(row, 1);\n              this.rows = [...this.rows];\n              }\n            }\n  }\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\nconsole.log(event.target.value);\n      // filter our data\n    const temp = this.temp.filter(function(d) {\n    \n      return d.planName.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n  }\n\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    if(event.target.value == '')\n      alert('Value cannot be empty!');\n    else {\n    this.rows[rowIndex][cell] = event.target.value;\n\n    this.plansService.updateUser(this.rows[rowIndex]['id'], this.clinic_id,this.rows[rowIndex][cell],cell).subscribe((res) => {\n      // console.log();\n       if(res.message == 'success'){\n        alert('Plan Updated');\n          this.getPlans();\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );  \n    this.rows = [...this.rows];\n  }\n  }\n\n  enableEditing(rowIndex, cell) {\n\n    this.editing[rowIndex + '-' + cell] = true;\n//console.log(this.editing);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { PlansService } from './plans.service';\nimport { PlansComponent,DialogOverviewExampleDialogComponent  } from './plans.component';\nimport { PlansRoutes } from './plans.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(PlansRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [\n    PlansService\n  ],\n  entryComponents: [DialogOverviewExampleDialogComponent],\n  declarations: [ PlansComponent,DialogOverviewExampleDialogComponent ]\n})\nexport class PlansModule { }","import { Routes } from '@angular/router';\n\nimport { PlansComponent } from './plans.component';\n\nexport const PlansRoutes: Routes = [\n  {\n    path: '',\n    component: PlansComponent,\n    data: {\n      title: 'Plans'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n\n@Injectable()\nexport class PlansService {\n\n   public token: string;\n   public api_url: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        \n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   // Get Dentist\n    getPlans(clinic_id,user_id = this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): \n    Observable<any> {\n        return this.http.get(this.apiUrl +\"/MemberPlan/getMemberplan?token=\"+this._cookieService.get(\"token\")+\"&user_id=\"+this._cookieService.get(\"userid\")+\"&clinic_id=\"+clinic_id, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                    return response;\n                })\n        );\n    }\n\n\n    getTreatments(user_id = this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): \n    Observable<any> {\n        return this.http.get(this.apiUrl +\"/Treatments/getTreatments?token=\"+this._cookieService.get(\"token\")+\"&user_id=\"+this._cookieService.get(\"userid\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                    return response;\n                })\n        );\n    }\n\n\n\n       // Delete Clinic\n    deletePlan(id, token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n    formData.append('id', id);\n    formData.append('token', token);\n\n        return this.http.post(this.apiUrl +\"/MemberPlan/deleteMemberplan\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    // Update Clinic\n    updateUser(memberid,clinic_id, value, column, token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n\n    formData.append('id', memberid);\n    formData.append('clinic_id', clinic_id);\n     formData.append(column, value);\n     formData.append('user_id', this._cookieService.get(\"userid\"));\n     formData.append('token', token);\n    \n        return this.http.post(this.apiUrl +\"/MemberPlan/updateMemberplan/\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    // Update Clinic\n    addPlans(planName, planLength,totalAmount,discount, description,clinic_id,treat,token =this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n   \n    formData.append('user_id', this._cookieService.get(\"userid\"));\n    formData.append('clinic_id', clinic_id);\n    formData.append('planName', planName);\n    formData.append('planLength', planLength);\n    formData.append('discount',discount);\n    formData.append('totalAmount',totalAmount);\n    formData.append('description', description);\n    formData.append('clinic_id', clinic_id);\n    formData.append('treatment_id',treat );\n    formData.append('token', token);\n\n        return this.http.post(this.apiUrl +\"/MemberPlan/addmemberplan/\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n        })\n        );\n    }\n}\n\n"],"sourceRoot":""}