{"version":3,"sources":["webpack:///./src/app/charts/chart-js/chartjs.component.html","webpack:///./src/app/charts/chart-js/chartjs.component.ts","webpack:///./src/app/charts/chartist-js/chartistjs.component.html","webpack:///./src/app/charts/chartist-js/chartistjs.component.ts","webpack:///./src/app/charts/chartslib.module.ts","webpack:///./src/app/charts/chartslib.routing.ts","webpack:///./src/app/charts/ngx-charts/chartData.ts","webpack:///./src/app/charts/ngx-charts/ngx-chart.component.html","webpack:///./src/app/charts/ngx-charts/ngx-chart.component.scss","webpack:///./src/app/charts/ngx-charts/ngx-chart.component.ts"],"names":[],"mappings":"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","file":"charts-chartslib-module.js","sourcesContent":["module.exports = \"<!-- ============================================================== -->\\n<!-- Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Bar Sales Chart</mat-card-title>\\n        <mat-card-subtitle>This is the simple example of bar chart</mat-card-subtitle>\\n        <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\" [options]=\\\"barChartOptions\\\" [legend]=\\\"barChartLegend\\\"\\n          [chartType]=\\\"barChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" [colors]=\\\"barChartColors\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n        </canvas>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Doughnut Chart</mat-card-title>\\n        <mat-card-subtitle>This is the simple example of Doughnut chart</mat-card-subtitle>\\n        <canvas baseChart height=\\\"150px\\\" [data]=\\\"doughnutChartData\\\" [labels]=\\\"doughnutChartLabels\\\" [chartType]=\\\"doughnutChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\" [colors]=\\\"[{backgroundColor: ['#1976d2', '#26dad2', '#dadada']}]\\\"></canvas>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Radar Chart</mat-card-title>\\n        <mat-card-subtitle>This is the simple example of Radar chart</mat-card-subtitle>\\n        <canvas baseChart height=\\\"150px\\\" [datasets]=\\\"radarChartData\\\" [labels]=\\\"radarChartLabels\\\" [chartType]=\\\"radarChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\" [colors]=\\\"radarChartColors\\\">\\n        </canvas>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Pie Chart</mat-card-title>\\n        <mat-card-subtitle>This is the simple example of Pie Chart</mat-card-subtitle>\\n        <canvas baseChart height=\\\"150px\\\" [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\" [colors]=\\\"[{backgroundColor: ['#1976d2', '#26dad2', '#dadada']}]\\\">\\n        </canvas>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Polar Area Chart</mat-card-title>\\n        <mat-card-subtitle>This is the simple example of Polar Area Chart</mat-card-subtitle>\\n        <canvas baseChart height=\\\"130px\\\" [data]=\\\"polarAreaChartData\\\" [labels]=\\\"polarAreaChartLabels\\\" [legend]=\\\"polarAreaLegend\\\" [chartType]=\\\"polarAreaChartType\\\"\\n          (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\" [colors]=\\\"[{backgroundColor: ['#1976d2', '#26dad2', '#dadada', '#7460ee', '#ef5350']}]\\\">\\n        </canvas>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Line Chart</mat-card-title>\\n        <mat-card-subtitle>This is the simple example of Line Chart</mat-card-subtitle>\\n        <canvas baseChart height=\\\"130\\\" [datasets]=\\\"lineChartData\\\" [labels]=\\\"lineChartLabels\\\" [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\"\\n          [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n        </canvas>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\"","import { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  templateUrl: './chartjs.component.html'\n})\nexport class ChartjsComponent implements AfterViewInit {\n  subtitle: string;\n\n  constructor() {\n    this.subtitle = 'This is chart page.';\n  }\n\n  // This is line chart\n  // bar chart\n  public barChartOptions: any = {\n    scaleShowVerticalLines: false,\n    responsive: true,\n    barThickness: 10\n  };\n\n  public barChartLabels: string[] = [\n    '2011',\n    '2012',\n    '2013',\n    '2014',\n    '2015',\n    '2016',\n    '2017'\n  ];\n  public barChartType = 'bar';\n  public barChartLegend = true;\n\n  public barChartData: any[] = [\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Iphone 8' },\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Iphone X' }\n  ];\n  public barChartColors: Array<any> = [\n    { backgroundColor: '#1976d2' },\n    { backgroundColor: '#26dad2' }\n  ];\n  // Doughnut\n  public doughnutChartLabels: string[] = [\n    'Download Sales',\n    'In-Store Sales',\n    'Mail-Order Sales'\n  ];\n  public doughnutChartData: number[] = [350, 450, 100];\n  public doughnutChartType = 'doughnut';\n\n  // Radar\n  public radarChartLabels: string[] = [\n    'Eating',\n    'Drinking',\n    'Sleeping',\n    'Designing',\n    'Coding',\n    'Cycling',\n    'Running'\n  ];\n  public radarChartData: any = [\n    { data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A' },\n    { data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B' }\n  ];\n  public radarChartType = 'radar';\n  public radarChartColors: Array<any> = [\n    {\n      backgroundColor: 'rgba(25,118,210,0.5)',\n      borderColor: 'rgba(25,118,210,1)'\n    },\n    {\n      backgroundColor: 'rgba(38,218,210,0.5)',\n      borderColor: 'rgba(38,218,210,1)'\n    }\n  ];\n  // Pie\n  public pieChartLabels: string[] = [\n    'Download Sales',\n    'In-Store Sales',\n    'Mail Sales'\n  ];\n  public pieChartData: number[] = [300, 500, 100];\n  public pieChartType = 'pie';\n\n  // PolarArea\n  public polarAreaChartLabels: string[] = [\n    'Download Sales',\n    'In-Store Sales',\n    'Mail Sales',\n    'Telesales',\n    'Corporate Sales'\n  ];\n  public polarAreaChartData: number[] = [300, 500, 100, 40, 120];\n  public polarAreaLegend = true;\n\n  public polarAreaChartType = 'polarArea';\n\n  // lineChart\n  public lineChartData: Array<any> = [\n    { data: [65, 39, 80, 15, 76, 35, 40], label: 'Series A' },\n    { data: [18, 58, 20, 69, 16, 27, 90], label: 'Series B' }\n  ];\n  public lineChartLabels: Array<any> = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July'\n  ];\n  public lineChartOptions: any = {\n    responsive: true\n  };\n  public lineChartColors: Array<any> = [\n    {\n      // grey\n      backgroundColor: 'rgba(25,118,210,0.1)',\n      borderColor: 'rgba(25,118,210,1)',\n      pointBackgroundColor: 'rgba(25,118,210,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(25,118,210,0.5)'\n    },\n    {\n      // dark grey\n      backgroundColor: 'rgba(38,218,210,0.1)',\n      borderColor: 'rgba(38,218,210,1)',\n      pointBackgroundColor: 'rgba(38,218,210,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(38,218,210,0.5)'\n    }\n  ];\n  public lineChartLegend = true;\n  public lineChartType = 'line';\n\n  // events\n  public chartClicked(e: any): void {\n    // console.log(e);\n  }\n\n  public chartHovered(e: any): void {\n    // console.log(e);\n  }\n\n  public randomize(): void {\n    // Only Change 3 values\n    const data = [\n      Math.round(Math.random() * 100),\n      59,\n      80,\n      Math.random() * 100,\n      56,\n      Math.random() * 100,\n      40\n    ];\n    const clone = JSON.parse(JSON.stringify(this.barChartData));\n    clone[0].data = data;\n    this.barChartData = clone;\n    /**\n     * (My guess), for Angular to recognize the change in the dataset\n     * it has to change the dataset variable directly,\n     * so one way around it, is to clone the data, change it and then\n     * assign it;\n     */\n  }\n\n  ngAfterViewInit() {}\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\">\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Bar Chart</mat-card-title>\\n        <mat-card-subtitle>This is the simple data export from the json file and creating a bar chart</mat-card-subtitle>\\n        <div class=\\\"barchrt\\\" style=\\\"height:400px;\\\">\\n          <x-chartist class=\\\"\\\" [data]=\\\"barChart1.data\\\" [type]=\\\"barChart1.type\\\" [options]=\\\"barChart1.options\\\" [responsiveOptions]=\\\"barChart1.responsiveOptions\\\"\\n            [events]=\\\"barChart1.events\\\"> </x-chartist>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Line Area chart Example</mat-card-title>\\n        <mat-card-subtitle>This is the simple data export from the json file and creating a Line chart</mat-card-subtitle>\\n        <div class=\\\"linearea\\\" style=\\\"height:400px;\\\">\\n          <x-chartist class=\\\"\\\" [data]=\\\"lineChart1.data\\\" [type]=\\\"lineChart1.type\\\" [options]=\\\"lineChart1.options\\\" [responsiveOptions]=\\\"lineChart1.responsiveOptions\\\"\\n            [events]=\\\"lineChart1.events\\\"> </x-chartist>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Line chart Example</mat-card-title>\\n        <mat-card-subtitle>This is the simple data export from the json file and creating a Line chart</mat-card-subtitle>\\n        <div class=\\\"linearea\\\" style=\\\"height:400px;\\\">\\n          <x-chartist class=\\\"\\\" [data]=\\\"lineChart2.data\\\" [type]=\\\"lineChart2.type\\\" [options]=\\\"lineChart2.options\\\" [responsiveOptions]=\\\"lineChart2.responsiveOptions\\\"\\n            [events]=\\\"lineChart2.events\\\"> </x-chartist>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Line chart 2 Example</mat-card-title>\\n        <mat-card-subtitle>This is the simple data export from the json file and creating a Line chart</mat-card-subtitle>\\n        <div class=\\\"linearea\\\" style=\\\"height:400px;\\\">\\n          <x-chartist class=\\\"\\\" [data]=\\\"lineChart3.data\\\" [type]=\\\"lineChart3.type\\\" [options]=\\\"lineChart3.options\\\" [responsiveOptions]=\\\"lineChart3.responsiveOptions\\\"\\n            [events]=\\\"lineChart3.events\\\"> </x-chartist>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Scatter chart Example</mat-card-title>\\n        <mat-card-subtitle>This is the simple data export from the json file and creating a Scatter chart</mat-card-subtitle>\\n        <div class=\\\"linearea\\\" style=\\\"height:400px;\\\">\\n          <x-chartist class=\\\"\\\" [data]=\\\"scatterChart1.data\\\" [type]=\\\"scatterChart1.type\\\" [options]=\\\"scatterChart1.options\\\" [responsiveOptions]=\\\"scatterChart1.responsiveOptions\\\"\\n            [events]=\\\"scatterChart1.events\\\"> </x-chartist>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Pie chart Example</mat-card-title>\\n        <mat-card-subtitle>This is the simple data export from the json file and creating a Pie chart</mat-card-subtitle>\\n        <div class=\\\"piechart\\\" style=\\\"height:400px;\\\">\\n          <x-chartist class=\\\"\\\" [data]=\\\"pieChart1.data\\\" [type]=\\\"pieChart1.type\\\" [options]=\\\"pieChart1.options\\\" [responsiveOptions]=\\\"pieChart1.responsiveOptions\\\"\\n            [events]=\\\"pieChart1.events\\\"> </x-chartist>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Donute chart Example</mat-card-title>\\n        <mat-card-subtitle>This is the simple data export from the json file and creating a Donute chart</mat-card-subtitle>\\n        <div class=\\\"piechart\\\" style=\\\"height:400px;\\\">\\n          <x-chartist class=\\\"\\\" [data]=\\\"donuteChart1.data\\\" [type]=\\\"donuteChart1.type\\\" [options]=\\\"donuteChart1.options\\\" [responsiveOptions]=\\\"donuteChart1.responsiveOptions\\\"\\n            [events]=\\\"donuteChart1.events\\\"> </x-chartist>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n  <!-- Column-->\\n  <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Bipollar chart Example</mat-card-title>\\n        <mat-card-subtitle>This is the simple data export from the json file and creating a Bipollar chart</mat-card-subtitle>\\n        <div class=\\\"barchrt\\\" style=\\\"height:400px;\\\">\\n          <x-chartist class=\\\"\\\" [data]=\\\"bipollarChart1.data\\\" [type]=\\\"bipollarChart1.type\\\" [options]=\\\"bipollarChart1.options\\\" [responsiveOptions]=\\\"bipollarChart1.responsiveOptions\\\"\\n            [events]=\\\"bipollarChart1.events\\\"> </x-chartist>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <!-- Column-->\\n\\n</div>\"","import { Component } from '@angular/core';\nimport * as Chartist from 'chartist';\nimport { ChartType, ChartEvent } from 'ng-chartist/dist/chartist.component';\n\ndeclare var require: any;\n\nconst data: any = require('./data.json');\n\nexport interface Chart {\n  type: ChartType;\n  data: Chartist.IChartistData;\n  options?: any;\n  responsiveOptions?: any;\n  events?: ChartEvent;\n}\n@Component({\n  templateUrl: './chartistjs.component.html'\n})\nexport class ChartistjsComponent {\n    // Barchart\n    barChart1: Chart = {\n        type: 'Bar',\n        data: data['Bar'],\n        options: {\n            seriesBarDistance: 15,\n\n            axisX: {\n                showGrid: false, offset: 70\n            },\n            axisY: {\n                showGrid: true, offset: 50\n            }\n        },\n        responsiveOptions: [\n            [\n                'screen and (min-width: 640px)',\n                {\n                    axisX: {\n                        labelInterpolationFnc: function (value: number, index: number): string {\n                            return index % 1 === 0 ? `${value}` : null;\n                        }\n                    }\n                }\n            ]\n        ]\n    };\n\n    // Line chart\n    lineChart1: Chart = {\n        type: 'Line',\n        data: data['LineWithArea'],\n        options: {\n          low: 0,\n          showArea: true,\n          fullWidth: true\n        }\n    };\n    // Line chart 2\n    lineChart2: Chart = {\n        type: 'Line',\n        data: data['Line'],\n        options: {\n          low: 0,\n          showArea: true,\n          fullWidth: true\n        }\n      };\n  // Line chart 2\n    lineChart3: Chart = {\n        type: 'Line',\n        data: data['Line2'],\n        options: {\n          low: 0,\n          showArea: true,\n          fullWidth: true\n        }\n    };\n    // Scatter chart\n    scatterChart1: Chart = {\n        type: 'Line',\n        data: data['Scatter'],\n        options: {\n          showLine: false,\n          axisX: {\n            labelInterpolationFnc: function(value: number, index: number): string {\n              return index % 13 === 0 ? `W${value}` : null;\n            }\n          }\n        },\n        responsiveOptions: [\n          [\n            'screen and (min-width: 640px)',\n            {\n              axisX: {\n                labelInterpolationFnc: function(value: number, index: number): string {\n                  return index % 4 === 0 ? `W${value}` : null;\n                }\n              }\n            }\n          ]\n        ]\n      };\n    // Pie chart\n    pieChart1: Chart = {\n        type: 'Pie',\n        data: data['Pie'],\n        options: {\n          donut: true,\n          donutWidth: 50,\n          startAngle: 0,\n          total: 200,\n          showLabel: false\n        }\n      };\n    donuteChart1: Chart = {\n        type: 'Pie',\n        data: data['Pie'],\n        options: {\n          donut: true,\n          showLabel: false\n        }\n        // events: {\n        //   draw(data: any): boolean {\n        //     return data;\n        //   }\n        // }\n      };\n    // Bi Poller chart\n    bipollarChart1: Chart = {\n        type: 'Bar',\n        data: data['Bi-PolarBar'],\n        options: {\n          high: 10,\n          low: -10,\n          axisX: {\n            labelInterpolationFnc: function(value: number, index: number): number {\n              return index % 2 === 0 ? value : null;\n            }\n          }\n        }\n      };\n\n}\n","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { CommonModule } from '@angular/common';\n\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ChartsModule } from 'ng2-charts';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { ChartsRoutes } from './chartslib.routing';\nimport { ChartistModule } from 'ng-chartist';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { ChartjsComponent } from './chart-js/chartjs.component';\nimport { ChartistjsComponent } from './chartist-js/chartistjs.component';\nimport { NgxchartComponent } from './ngx-charts/ngx-chart.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ChartsRoutes),\n    DemoMaterialModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    CdkTableModule,\n    ChartistModule,\n    ChartsModule,\n    NgxChartsModule\n  ],\n  providers: [],\n  declarations: [ChartjsComponent, ChartistjsComponent, NgxchartComponent]\n})\nexport class ChartslibModule {}\n","import { Routes } from '@angular/router';\n\nimport { ChartjsComponent } from './chart-js/chartjs.component';\nimport { ChartistjsComponent } from './chartist-js/chartistjs.component';\nimport { NgxchartComponent } from './ngx-charts/ngx-chart.component';\n\nexport const ChartsRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'chartjs',\n        component: ChartjsComponent\n      },\n      {\n        path: 'chartistjs',\n        component: ChartistjsComponent\n      },\n      {\n        path: 'ngxchart',\n        component: NgxchartComponent\n      }\n    ]\n  }\n];\n","export const single = [\n  {\n    name: 'Germany',\n    value: 40\n  },\n  {\n    name: 'USA',\n    value: 49\n  },\n  {\n    name: 'France',\n    value: 36\n  },\n  {\n    name: 'United Kingdom',\n    value: 36\n  },\n  {\n    name: 'Spain',\n    value: 33\n  },\n  {\n    name: 'Italy',\n    value: 35\n  }\n];\n\nexport const multi = [\n  {\n    name: 'Germany',\n    series: [\n      {\n        name: '2010',\n        value: 40\n      },\n      {\n        name: '2000',\n        value: 36\n      },\n      {\n        name: '1990',\n        value: 31\n      }\n    ]\n  },\n  {\n    name: 'USA',\n    series: [\n      {\n        name: '2010',\n        value: 49\n      },\n      {\n        name: '2000',\n        value: 45\n      },\n      {\n        name: '1990',\n        value: 37\n      }\n    ]\n  },\n  {\n    name: 'France',\n    series: [\n      {\n        name: '2010',\n        value: 36\n      },\n      {\n        name: '2000',\n        value: 34\n      },\n      {\n        name: '1990',\n        value: 29\n      }\n    ]\n  },\n  {\n    name: 'United Kingdom',\n    series: [\n      {\n        name: '2010',\n        value: 36\n      },\n      {\n        name: '2000',\n        value: 32\n      },\n      {\n        name: '1990',\n        value: 26\n      }\n    ]\n  }\n];\n\nexport const bubble = [\n  {\n    name: 'Germany',\n    series: [\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 80.3,\n        r: 80.4\n      },\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 80.3,\n        r: 78\n      },\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 75.4,\n        r: 79\n      }\n    ]\n  },\n  {\n    name: 'USA',\n    series: [\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 78.8,\n        r: 310\n      },\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 76.9,\n        r: 283\n      },\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 75.4,\n        r: 253\n      }\n    ]\n  },\n  {\n    name: 'France',\n    series: [\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 81.4,\n        r: 63\n      },\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 79.1,\n        r: 59.4\n      },\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 77.2,\n        r: 56.9\n      }\n    ]\n  },\n  {\n    name: 'United Kingdom',\n    series: [\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 80.2,\n        r: 62.7\n      },\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 77.8,\n        r: 58.9\n      },\n      {\n        name: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        x: new Date(Math.floor(1473700105009 + Math.random() * 1000000000)),\n        y: 75.7,\n        r: 57.1\n      }\n    ]\n  }\n];\n\nexport const countries = [\n  'Abkhazia',\n  'Afghanistan',\n  'Akrotiri and Dhekelia',\n  'Aland',\n  'Albania',\n  'Algeria',\n  'American Samoa',\n  'Andorra',\n  'Angola',\n  'Anguilla',\n  'Antigua and Barbuda',\n  'Argentina',\n  'Armenia',\n  'Aruba',\n  'Ascension Island',\n  'Australia',\n  'Austria',\n  'Azerbaijan',\n  'Bahamas, The',\n  'Bahrain',\n  'Bangladesh',\n  'Barbados',\n  'Belarus',\n  'Belgium',\n  'Belize',\n  'Benin',\n  'Bermuda',\n  'Bhutan',\n  'Bolivia',\n  'Bosnia and Herzegovina',\n  'Botswana',\n  'Brazil',\n  'Brunei',\n  'Bulgaria',\n  'Burkina Faso',\n  'Burundi',\n  'Cambodia',\n  'Cameroon',\n  'Canada',\n  'Cape Verde',\n  'Cayman Islands',\n  'Central Africa Republic',\n  'Chad',\n  'Chile',\n  'China',\n  'Christmas Island',\n  'Cocos (Keeling) Islands',\n  'Colombia',\n  'Comoros',\n  'Congo',\n  'Cook Islands',\n  'Costa Rica',\n  'Cote dlvoire',\n  'Croatia',\n  'Cuba',\n  'Cyprus',\n  'Czech Republic',\n  'Denmark',\n  'Djibouti',\n  'Dominica',\n  'Dominican Republic',\n  'East Timor Ecuador',\n  'Egypt',\n  'El Salvador',\n  'Equatorial Guinea',\n  'Eritrea',\n  'Estonia',\n  'Ethiopia',\n  'Falkland Islands',\n  'Faroe Islands',\n  'Fiji',\n  'Finland',\n  'France',\n  'French Polynesia',\n  'Gabon',\n  'Cambia, The',\n  'Georgia',\n  'Germany',\n  'Ghana',\n  'Gibraltar',\n  'Greece',\n  'Greenland',\n  'Grenada',\n  'Guam',\n  'Guatemala',\n  'Guemsey',\n  'Guinea',\n  'Guinea-Bissau',\n  'Guyana',\n  'Haiti',\n  'Honduras',\n  'Hong Kong',\n  'Hungary',\n  'Iceland',\n  'India',\n  'Indonesia',\n  'Iran',\n  'Iraq',\n  'Ireland',\n  'Isle of Man',\n  'Israel',\n  'Italy',\n  'Jamaica',\n  'Japan',\n  'Jersey',\n  'Jordan',\n  'Kazakhstan',\n  'Kenya',\n  'Kiribati',\n  'Korea, N',\n  'Korea, S',\n  'Kosovo',\n  'Kuwait',\n  'Kyrgyzstan',\n  'Laos',\n  'Latvia',\n  'Lebanon',\n  'Lesotho',\n  'Liberia',\n  'Libya',\n  'Liechtenstein',\n  'Lithuania',\n  'Luxembourg',\n  'Macao',\n  'Macedonia',\n  'Madagascar',\n  'Malawi',\n  'Malaysia',\n  'Maldives',\n  'Mali',\n  'Malta',\n  'Marshall Islands',\n  'Mauritania',\n  'Mauritius',\n  'Mayotte',\n  'Mexico',\n  'Micronesia',\n  'Moldova',\n  'Monaco',\n  'Mongolia',\n  'Montenegro',\n  'Montserrat',\n  'Morocco',\n  'Mozambique',\n  'Myanmar',\n  'Nagorno-Karabakh',\n  'Namibia',\n  'Nauru',\n  'Nepal',\n  'Netherlands',\n  'Netherlands Antilles',\n  'New Caledonia',\n  'New Zealand',\n  'Nicaragua',\n  'Niger',\n  'Nigeria',\n  'Niue',\n  'Norfolk Island',\n  'Northern Cyprus',\n  'Northern Mariana Islands',\n  'Norway',\n  'Oman',\n  'Pakistan',\n  'Palau',\n  'Palestine',\n  'Panama',\n  'Papua New Guinea',\n  'Paraguay',\n  'Peru',\n  'Philippines',\n  'Pitcaim Islands',\n  'Poland',\n  'Portugal',\n  'Puerto Rico',\n  'Qatar',\n  'Romania',\n  'Russia',\n  'Rwanda',\n  'Sahrawi Arab Democratic Republic',\n  'Saint-Barthelemy',\n  'Saint Helena',\n  'Saint Kitts and Nevis',\n  'Saint Lucia',\n  'Saint Martin',\n  'Saint Pierre and Miquelon',\n  'Saint Vincent and Grenadines',\n  'Samos',\n  'San Marino',\n  'Sao Tome and Principe',\n  'Saudi Arabia',\n  'Senegal',\n  'Serbia',\n  'Seychelles',\n  'Sierra Leone',\n  'Singapore',\n  'Slovakia',\n  'Slovenia',\n  'Solomon Islands',\n  'Somalia',\n  'Somaliland',\n  'South Africa',\n  'South Ossetia',\n  'Spain',\n  'Sri Lanka',\n  'Sudan',\n  'Suriname',\n  'Svalbard',\n  'Swaziland',\n  'Sweden',\n  'Switzerland',\n  'Syria',\n  'Tajikistan',\n  'Tanzania',\n  'Thailand',\n  'Togo',\n  'Tokelau',\n  'Tonga',\n  'Transnistria',\n  'Trinidad and Tobago',\n  'Tristan da Cunha',\n  'Tunisia',\n  'Turkey',\n  'Turkmenistan',\n  'Turks and Caicos Islands',\n  'Tuvalu',\n  'Uganda',\n  'Ukraine',\n  'United Arab Emirates',\n  'United Kingdom',\n  'United States',\n  'Uruguay',\n  'Uzbekistan',\n  'Vanuatu',\n  'Vatican City',\n  'Venezuela',\n  'Vietnam',\n  'Virgin Islands, British',\n  'Virgin Islands, U.S.',\n  'Wallis and Futuna',\n  'Yemen',\n  'Zambia',\n  'Zimbabwe'\n];\n\nexport function generateGraph(nodeCount: number) {\n  const nodes = [];\n  const links = [];\n  for (let i = 0; i < nodeCount; i++) {\n    const country = countries[Math.floor(Math.random() * countries.length)];\n    nodes.push({\n      value: country\n    });\n    for (let j = 0; j < nodes.length - 1; j++) {\n      if (Math.random() < 0.03) {\n        links.push({\n          source: country,\n          target: nodes[j].value\n        });\n      }\n    }\n  }\n  return { links, nodes };\n}\n\nexport function generateData(\n  seriesLength: number,\n  includeMinMaxRange: boolean\n): any[] {\n  const results = [];\n\n  const domain: Date[] = []; // array of time stamps in milliseconds\n\n  for (let j = 0; j < 8; j++) {\n    // random dates between Sep 12, 2016 and Sep 24, 2016\n    domain.push(\n      new Date(Math.floor(1473700105009 + Math.random() * 1000000000))\n    );\n  }\n\n  for (let i = 0; i < seriesLength; i++) {\n    const country = countries[Math.floor(Math.random() * countries.length)];\n    const series = {\n      name: country,\n      series: []\n    };\n\n    for (let j = 0; j < domain.length; j++) {\n      const value = Math.floor(2 + Math.random() * 5);\n      // let timestamp = Math.floor(1473700105009 + Math.random() * 1000000000);\n      const timestamp = domain[j];\n      if (includeMinMaxRange) {\n        const errorMargin = 0.02 + Math.random() * 0.08;\n\n        series.series.push({\n          value,\n          name: timestamp,\n          min: Math.floor(value * (1 - errorMargin)),\n          max: Math.ceil(value * (1 + errorMargin))\n        });\n      } else {\n        series.series.push({\n          value,\n          name: timestamp\n        });\n      }\n    }\n\n    results.push(series);\n  }\n  return results;\n}\n","module.exports = \"<!-- ============================================================== -->\\n<!-- Fixed height Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Vertical bar chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-bar-vertical class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"single\\\" [gradient]=\\\"gradient\\\"\\n                        [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\" [legend]=\\\"showLegend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                        [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [showGridLines]=\\\"showGridLines\\\"\\n                        [barPadding]=\\\"40\\\" [view]=\\\"view\\\" [roundDomains]=\\\"roundDomains\\\" (select)=\\\"select($event)\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\">\\n                    </ngx-charts-bar-vertical>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Horizontal bar chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-bar-horizontal class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"single\\\" [gradient]=\\\"gradient\\\"\\n                        [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\" [legend]=\\\"showLegend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                        [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [showGridLines]=\\\"showGridLines\\\"\\n                        [barPadding]=\\\"20\\\" [roundDomains]=\\\"roundDomains\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" (select)=\\\"select($event)\\\">\\n                    </ngx-charts-bar-horizontal>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n<!-- ============================================================== -->\\n<!-- Basic Card Grid-->\\n<!-- ============================================================== -->\\n\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Group Vertical bar chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-bar-vertical-2d class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"multi\\\" [gradient]=\\\"gradient\\\"\\n                        [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\" [legend]=\\\"showLegend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                        [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n                        [showGridLines]=\\\"showGridLines\\\" [barPadding]=\\\"barPadding\\\" [groupPadding]=\\\"20\\\" [roundDomains]=\\\"roundDomains\\\"\\n                        (select)=\\\"select($event)\\\">\\n                    </ngx-charts-bar-vertical-2d>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Horizontal bar chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-bar-horizontal-2d class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"multi\\\"\\n                        [gradient]=\\\"gradient\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\" [legend]=\\\"showLegend\\\"\\n                        (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                        [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [showGridLines]=\\\"showGridLines\\\" [barPadding]=\\\"barPadding\\\"\\n                        [groupPadding]=\\\"20\\\" [roundDomains]=\\\"roundDomains\\\" (select)=\\\"select($event)\\\">\\n                    </ngx-charts-bar-horizontal-2d>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n<!-- ============================================================== -->\\n<!-- Basic Card Grid-->\\n<!-- ============================================================== -->\\n\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Line chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-line-chart class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"dateDataWithOrWithoutRange\\\"\\n                        [legend]=\\\"showLegend\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\"\\n                        [yAxis]=\\\"showYAxis\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\"\\n                        [yAxisLabel]=\\\"yAxisLabel\\\" [autoScale]=\\\"autoScale\\\" [timeline]=\\\"timeline\\\" [showGridLines]=\\\"showGridLines\\\"\\n                        [curve]=\\\"curve\\\" [rangeFillOpacity]=\\\"rangeFillOpacity\\\" [roundDomains]=\\\"roundDomains\\\" [tooltipDisabled]=\\\"true\\\"\\n                        (select)=\\\"select($event)\\\">\\n                    </ngx-charts-line-chart>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Area chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-area-chart class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"dateData\\\" [legend]=\\\"showLegend\\\"\\n                        (legendLabelClick)=\\\"onLegendLabelClick($event)\\\" [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\"\\n                        [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\"\\n                        [autoScale]=\\\"autoScale\\\" [timeline]=\\\"timeline\\\" [showGridLines]=\\\"showGridLines\\\" [roundDomains]=\\\"roundDomains\\\"\\n                        [curve]=\\\"curve\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" (select)=\\\"select($event)\\\">\\n                    </ngx-charts-area-chart>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n<!-- ============================================================== -->\\n<!-- Basic Card Grid-->\\n<!-- ============================================================== -->\\n\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Stacked chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-area-chart-stacked class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"dateData\\\"\\n                        [legend]=\\\"showLegend\\\" [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\" [yAxis]=\\\"showYAxis\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n                        [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\"\\n                        [timeline]=\\\"timeline\\\" [showGridLines]=\\\"showGridLines\\\" [roundDomains]=\\\"roundDomains\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n                        [curve]=\\\"curve\\\" (select)=\\\"select($event)\\\">\\n                    </ngx-charts-area-chart-stacked>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Normalize Area chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-area-chart-normalized class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [schemeType]=\\\"schemeType\\\" [results]=\\\"dateData\\\"\\n                        [legend]=\\\"showLegend\\\" [gradient]=\\\"gradient\\\" [xAxis]=\\\"showXAxis\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n                        [yAxis]=\\\"showYAxis\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxisLabel]=\\\"xAxisLabel\\\"\\n                        [yAxisLabel]=\\\"yAxisLabel\\\" [timeline]=\\\"timeline\\\" [showGridLines]=\\\"showGridLines\\\" [roundDomains]=\\\"roundDomains\\\"\\n                        [tooltipDisabled]=\\\"tooltipDisabled\\\" [curve]=\\\"curve\\\" (select)=\\\"select($event)\\\">\\n                    </ngx-charts-area-chart-normalized>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n<!-- ============================================================== -->\\n<!-- Basic Card Grid-->\\n<!-- ============================================================== -->\\n\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Pie chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-pie-chart class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [results]=\\\"single\\\" [legend]=\\\"showLegend\\\" [explodeSlices]=\\\"explodeSlices\\\"\\n                        [labels]=\\\"showLabels\\\" [doughnut]=\\\"doughnut\\\" [arcWidth]=\\\"arcWidth\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n                        [gradient]=\\\"gradient\\\"  [trimLabels]=\\\"false\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" (select)=\\\"select($event)\\\">\\n                    </ngx-charts-pie-chart>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex.gt-md=\\\"50\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Advanced pie chart</mat-card-title>\\n                <mat-card-subtitle>Check the document here for getting more info\\n                    <a href=\\\"https://swimlane.github.io/ngx-charts/\\\" target=\\\"_blank\\\">Click Here</a>\\n                </mat-card-subtitle>\\n                <div class=\\\"w100\\\">\\n                    <ngx-charts-advanced-pie-chart class=\\\"chart-container\\\" [scheme]=\\\"colorScheme\\\" [results]=\\\"single\\\" (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n                        [gradient]=\\\"gradient\\\" [tooltipDisabled]=\\\"tooltipDisabled\\\" (select)=\\\"select($event)\\\">\\n                    </ngx-charts-advanced-pie-chart>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\"","module.exports = \".chart-container {\\n  display: block;\\n  position: relative; }\\n\\n.w100 {\\n  width: 100%;\\n  height: 300px;\\n  overflow: hidden;\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2NoYXJ0cy9uZ3gtY2hhcnRzL25neC1jaGFydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWM7RUFDZCxtQkFBa0IsRUFDbkI7O0FBQ0Q7RUFDRSxZQUFXO0VBQ1gsY0FBYTtFQUNiLGlCQUFnQjtFQUNoQixlQUFjLEVBQ2YiLCJmaWxlIjoic3JjL2FwcC9jaGFydHMvbmd4LWNoYXJ0cy9uZ3gtY2hhcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi53MTAwIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuIl19 */\"","import { Component } from '@angular/core';\nimport * as shape from 'd3-shape';\nimport * as d3 from 'd3';\nimport { single, multi, generateData } from './chartData';\nimport { colorSets } from '@swimlane/ngx-charts/release/utils/color-sets';\n@Component({\n  selector: 'app-ngxchart',\n  templateUrl: './ngx-chart.component.html',\n  styleUrls: ['./ngx-chart.component.scss']\n})\nexport class NgxchartComponent {\n  single: any[];\n  multi: any[];\n  dateData: any[];\n  dateDataWithRange: any[];\n  range = false;\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = false;\n  showXAxisLabel = true;\n  tooltipDisabled = false;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'GDP Per Capita';\n  showGridLines = true;\n  innerPadding = 0;\n  autoScale = true;\n  timeline = false;\n  barPadding = 8;\n  groupPadding = 0;\n  roundDomains = false;\n  maxRadius = 10;\n  minRadius = 3;\n  view = '';\n  showLabels = true;\n  explodeSlices = false;\n  doughnut = false;\n  arcWidth = 0.25;\n  rangeFillOpacity = 0.15;\n  colorScheme = {\n    domain: ['#1e88e5', '#2ECC71', '#26c6da', '#ffc65d', '#d96557', '#ba68c8']\n  };\n  schemeType = 'ordinal';\n\n  constructor() {\n    Object.assign(this, {\n      single,\n      multi\n    });\n    this.dateData = generateData(6, false);\n    this.dateDataWithRange = generateData(2, true);\n  }\n  get dateDataWithOrWithoutRange() {\n    if (this.range) {\n      return this.dateDataWithRange;\n    } else {\n      return this.dateData;\n    }\n  }\n\n  // line interpolation\n  curve = shape.curveLinear;\n\n  select(data) {\n    console.log('Item clicked', data);\n  }\n\n  onLegendLabelClick(entry) {\n    console.log('Legend clicked', entry);\n  }\n}\n"],"sourceRoot":""}