{"version":3,"sources":["webpack:///./src/app/dentist/dentist.component.html","webpack:///./src/app/dentist/dentist.component.scss","webpack:///./src/app/dentist/dentist.component.ts","webpack:///./src/app/dentist/dentist.module.ts","webpack:///./src/app/dentist/dentist.routing.ts"],"names":[],"mappings":"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","file":"dentist-dentist-module.js","sourcesContent":["module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>Dentist</mat-card-title>\\n        <input type='button' value='Add Dentist' (click)=\\\"addDentist()\\\">\\n        <mat-form-field>\\n            <input matInput type='text' class=\\\"form-control\\\" placeholder='Type to filter dentist name...' (keyup)='updateFilter($event)'\\n            />\\n        </mat-form-field>\\n        <ngx-datatable #table class='material' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\n            <ngx-datatable-column name=\\\"ProviderId\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"editing[rowIndex + '-providerId'] = true\\\" *ngIf=\\\"!editing[rowIndex + '-providerId']\\\">\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'providerId', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-providerId']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Name\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'name')\\\" *ngIf=\\\"!editing[rowIndex + '-name']\\\">\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'name', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-name']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Action\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n           <button mat-menu-item (click) = \\\"deleteDentists(rowIndex)\\\">\\n         <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n        </ngx-datatable>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".lds-roller div::after {\\n  background: black; }\\n\\n.spinner {\\n  position: relative;\\n  background: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2RlbnRpc3QvZGVudGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFpQixFQUNwQjs7QUFDRDtFQUNJLG1CQUFrQjtFQUNsQixpQkFBZ0IsRUFDbkIiLCJmaWxlIjoic3JjL2FwcC9kZW50aXN0L2RlbnRpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGRzLXJvbGxlciBkaXY6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcbn1cbi5zcGlubmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IFxuICAgIGJhY2tncm91bmQ6IG5vbmU7XG59Il19 */\"","import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { DentistService } from './dentist.service';\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './dentist.component.html',\n  styleUrls: ['./dentist.component.scss']\n})\nexport class DentistComponent implements AfterViewInit {\n\n  ngAfterViewInit() {\n    this.getDentists();\n  }\n  editing = {};\n  rows = [];\n  temp = [...data];\n\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [{ prop: 'providerId' }, { name: 'name' }, { name: 'Action' }];\n\n  @ViewChild(DentistComponent) table: DentistComponent;\n  constructor(private dentistService: DentistService) {\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n  }\n  private warningMessage: string;\n\n  private getDentists() {\n    console.log(this.rows);\n  this.dentistService.getDentists().subscribe((res) => {\n       if(res.message == 'success'){\n        this.rows = res.data;\n    this.temp = [...res.data];\n        \nthis.table = data;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n\n  }\n  private deleteDentists(row) {\n    if(this.rows[row]['providerId']) {\n  this.dentistService.deleteDentists(this.rows[row]['providerId']).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('Dentist Removed');\n          this.getDentists();\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n    }\n    else {\n      this.rows.splice(row, 1);\n    this.rows = [...this.rows];\n\n    }\n  }\n  addDentist() {\n    console.log(this.rows);\n    var temp ={};\n    temp['providerId'] ='Enter Provider Id';\n    temp['name'] ='Enter Name';\n    var length = this.rows.length;\n    this.editing[length + '-providerId'] = true;\n    this.editing[length + '-name'] = true;\n    \n    this.rows.push(temp);\n    this.table =data;\n  }\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n  }\n  updateValue(event, cell, rowIndex) {\n  if((this.rows[rowIndex]['providerId']  == 'Enter Provider Id') || (this.rows[rowIndex]['name']  == 'Enter Name')) {\n    this.editing[length + '-providerId'] = true;\n    this.editing[length + '-name'] = true;\n  }\n  else {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.dentistService.updateDentists(this.rows[rowIndex]['providerId'], this.rows[rowIndex][cell]).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('Dentist Updated');\n          this.getDentists();\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );  \n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n  }\n  }\n\n  enableEditing(rowIndex, cell) {\n    this.editing[rowIndex + '-' + cell] = true;\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { DentistService } from './dentist.service';\nimport { DentistComponent } from './dentist.component';\nimport { DentistRoutes } from './dentist.routing';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DentistRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule\n  ],\n  providers: [\n    DentistService\n  ],\n  declarations: [ DentistComponent ]\n})\nexport class DentistModule { }","import { Routes } from '@angular/router';\n\nimport { DentistComponent } from './dentist.component';\n\nexport const DentistRoutes: Routes = [\n  {\n    path: '',\n    component: DentistComponent,\n    data: {\n      title: 'Dentist'\n    }\n  }\n];\n"],"sourceRoot":""}