{"version":3,"sources":["webpack:///./src/app/dentist/dentist.component.html","webpack:///./src/app/dentist/dentist.component.scss","webpack:///./src/app/dentist/dentist.component.ts","webpack:///./src/app/dentist/dentist.module.ts","webpack:///./src/app/dentist/dentist.routing.ts","webpack:///./src/app/dentist/dialog-overview-example.html"],"names":[],"mappings":"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","file":"dentist-dentist-module.js","sourcesContent":["module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>Dentist  <button class=\\\"sa-pull-right mat-raised-button mat-gray\\\" mat-raised-button (click)=\\\"openDialog()\\\">Add Dentist</button></mat-card-title>\\n <input type=\\\"button\\\" id=\\\"clinic_initiate\\\" (click) = \\\"initiate_clinic()\\\"  [style.display]=\\\"'none'\\\">\\n        <mat-form-field>\\n            <input matInput type='text' class=\\\"form-control\\\" placeholder='Type to filter dentist name...' (keyup)='updateFilter($event)'\\n            />\\n        </mat-form-field>\\n        <ngx-datatable #table class='material dentist-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\n            <ngx-datatable-column name=\\\"Sr\\\">\\n                <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Sr</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"editing[rowIndex + '-providerId'] = true\\\" *ngIf=\\\"!editing[rowIndex + '-providerId']\\\">\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'providerId', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-providerId']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"providerId\\\">\\n                <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Provider Id</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"editing[rowIndex + '-providerId'] = true\\\" *ngIf=\\\"!editing[rowIndex + '-providerId']\\\">\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'providerId', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-providerId']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Name\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'name')\\\" *ngIf=\\\"!editing[rowIndex + '-name']\\\">\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'name', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-name']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Action\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n           <button class=\\\"action_btn danger\\\" mat-menu-item (click) = \\\"deleteDentists(rowIndex)\\\">\\n         <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n        </ngx-datatable>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".lds-roller div::after {\\n  background: black; }\\n\\n.spinner {\\n  position: relative;\\n  background: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGVudGlzdC9DOlxceGFtcHBcXGh0ZG9jc1xcamVldmVhbmFseXRpY3NcXGNsaWVudDIvc3JjXFxhcHBcXGRlbnRpc3RcXGRlbnRpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBaUIsRUFDcEI7O0FBQ0Q7RUFDSSxtQkFBa0I7RUFDbEIsaUJBQWdCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvZGVudGlzdC9kZW50aXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxkcy1yb2xsZXIgZGl2OjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogYmxhY2s7XG59XG4uc3Bpbm5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyBcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xufSJdfQ== */\"","import { Component, Inject , ViewChild, AfterViewInit } from '@angular/core';\nimport { DentistService } from './dentist.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { CookieService } from \"angular2-cookie/core\";\n\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example.html',\n})\nexport class DialogOverviewExampleDialogComponent {\n   public clinic_id:any ={};\n  // public form: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n\n  // this.form = this.fb.group({\n  //     provider_id: [null, Validators.compose([Validators.required])],\n  //     dentist_name: [null, Validators.compose([Validators.required])]\n  //   });\n\n    save(data) {\n    $('.mat-form-control').click();\n    if(data.provider_id != undefined && data.dentist_name != undefined  ){\n        this.dialogRef.close(data);\n      }\n    }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\ndeclare var require: any;\nconst data: any =[];\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './dentist.component.html',\n  styleUrls: ['./dentist.component.scss']\n})\nexport class DentistComponent implements AfterViewInit {\n  provider_id: string;\n  dentist_name: string;\n   public clinic_id:any ={};\n   initiate_clinic() {\n    var val = $('#currentClinic').attr('cid');\n    this.clinic_id = val;\n  this.getDentists();\n  }\n  ngAfterViewInit() {\n    $('.header_filters').removeClass('hide_header'); \n    $('.header_filters').removeClass('flex_direct_mar'); \n    \n     this.route.params.subscribe(params => {\n    this.clinic_id = this.route.snapshot.paramMap.get(\"id\");\n      \n      this.initiate_clinic();\n\n          $('.external_clinic').show();\n        $('.dentist_dropdown').hide();\n        $('.header_filters').addClass('flex_direct_mar');\n        $('#title').html('Dentist');\n     });\n  \n  }\n  editing = {};\n  rows = [];\n  temp = [...data];\n\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [{ prop: 'sr' },{ prop: 'providerId' }, { name: 'name' }, { name: 'Action' }];\n\n  @ViewChild(DentistComponent) table: DentistComponent;\n  constructor(private dentistService: DentistService, public dialog: MatDialog, private route: ActivatedRoute,private _cookieService: CookieService, private router: Router) {\n  this.clinic_id = this.route.snapshot.paramMap.get(\"id\");\n\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n  }\n  private warningMessage: string;\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n      width: '300px',\n      height: '300px',\n      data: { dentist_name: this.dentist_name, provider_id: this.provider_id }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n  this.dentistService.addDentists(result.provider_id, result.dentist_name,this.clinic_id).subscribe((res) => {\n    console.log(res);\n       if(res.message == 'success'){\n        alert('Dentist Added');\n          this.getDentists();\n              $('.external_clinic').show();\n        $('.dentist_dropdown').hide();\n        $('.header_filters').addClass('flex_direct_mar');\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );  \n    });\n  }\n\n  private getDentists() {\n  this.dentistService.getDentists(this.clinic_id).subscribe((res) => {\n       if(res.message == 'success'){\n        this.rows = res.data;\n    this.temp = [...res.data];\n        \nthis.table = data;\n       }\n        else if(res.status == '401'){\n              this._cookieService.put(\"username\",'');\n              this._cookieService.put(\"email\", '');\n              this._cookieService.put(\"token\", '');\n              this._cookieService.put(\"userid\", '');\n               this.router.navigateByUrl('/login');\n           }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n\n  }\n  private deleteDentists(row) {\n     if(confirm(\"Are you sure to delete Dentist?\")) {\n    if(this.rows[row]['providerId']) {\n  this.dentistService.deleteDentists(this.rows[row]['providerId']).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('Dentist Removed');\n          this.getDentists();\n       }  \n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n    }\n    else {\n      this.rows.splice(row, 1);\n    this.rows = [...this.rows];\n\n    }\n  }\n  }\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n  }\n  updateValue(event, cell, rowIndex) {\n  if((this.rows[rowIndex]['providerId']  == 'Enter Provider Id') || (this.rows[rowIndex]['name']  == 'Enter Name')) {\n    this.editing[length + '-providerId'] = true;\n    this.editing[length + '-name'] = true;\n  }\n  else {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.dentistService.updateDentists(this.rows[rowIndex]['providerId'], this.rows[rowIndex][cell],this.clinic_id).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('Dentist Updated');\n          this.getDentists();\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );  \n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n  }\n  }\n\n  enableEditing(rowIndex, cell) {\n    this.editing[rowIndex + '-' + cell] = true;\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { DentistService } from './dentist.service';\nimport { DentistComponent,\n  DialogOverviewExampleDialogComponent } from './dentist.component';\nimport { DentistRoutes } from './dentist.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DentistRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    DentistService\n  ],\n  entryComponents: [DialogOverviewExampleDialogComponent],\n  declarations: [ DentistComponent,\n    DialogOverviewExampleDialogComponent ]\n})\nexport class DentistModule { }","import { Routes } from '@angular/router';\n\nimport { DentistComponent } from './dentist.component';\n\nexport const DentistRoutes: Routes = [\n  {\n    path: '',\n    component: DentistComponent,\n    data: {\n      title: 'Dentist'\n    }\n  }\n];\n","module.exports = \"<h1 mat-dialog-title>Add Dentist</h1>\\n<div mat-dialog-content>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.provider_id\\\" class=\\\"mat-form-control\\\" required=\\\"true\\\" placeholder=\\\"Provider ID\\\" required>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.dentist_name\\\" class=\\\"mat-form-control\\\" required=\\\"true\\\" placeholder=\\\"Dentist Name\\\" required>\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"save(data)\\\" tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\""],"sourceRoot":""}