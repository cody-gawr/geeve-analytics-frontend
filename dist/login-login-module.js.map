{"version":3,"sources":["webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.routing.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["module.exports = \"<div class=\\\"sa_login_blur\\\" style=\\\"background:url('../../assets/images/background/login-register_60.jpg')!important; background-size:cover!important; filter:blur(20px)!important; position:absolute; width:100%; height: 100vh;\\ndisplay: flex;\\nbackground-size: cover;\\nalign-items: center;\\\"></div>\\n<img class=\\\"login_abso_logo\\\" src=\\\"../assets/images/logo-white.png\\\">\\n<div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/login-register.jpg);\\\">\\n    <div class=\\\"login-register-box\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"text-center\\\">\\n                        <img alt=\\\"homepage\\\" src=\\\"../assets/images/logo-icon.gif\\\">\\n                        <h4 class=\\\"m-t-0\\\">Login to Jeeve Members</h4>\\n                    </div>\\n\\n                    <div fxLayout=\\\"row wrap\\\">\\n                        <!-- col full-->\\n                        <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"dc_input\\\">\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"form.controls['uname']\\\">\\n                            </mat-form-field>\\n                            <small *ngIf=\\\"form.controls['uname'].hasError('required') && form.controls['uname'].touched\\\" class=\\\"text-danger support-text\\\">Email is required.</small>\\n                        </div>\\n                        <!-- col full-->\\n                        <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"dc_input\\\">\\n                            <mat-form-field>\\n                                <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"form.controls['password']\\\">\\n                            </mat-form-field>\\n                            <small *ngIf=\\\"form.controls['password'].hasError('required') && form.controls['password'].touched\\\" class=\\\"text-danger support-text\\\">Password is required.</small>\\n\\n                        </div>\\n                         <!-- col full-->\\n                         <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                            <small *ngIf=\\\"errorLogin\\\" class=\\\"text-danger support-text\\\">Incorrect Email or Password.</small>\\n                               <button mat-raised-button color=\\\"dc\\\" class=\\\"btn-block btn-lg m-t-20 m-b-20\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Login</button>\\n                           </div>\\n                        <!-- col half-->\\n                        <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\">\\n                            <mat-checkbox color=\\\"warn\\\">Remember me</mat-checkbox>\\n                        </div>\\n                        <!-- col half-->\\n                        <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"text-right\\\">\\n                            <a [routerLink]=\\\"['/authentication/forgot']\\\" class=\\\"link\\\">Forgot password?</a>\\n                        </div>\\n                        <!-- col full-->\\n                        <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-center\\\">\\n                            <span>Don't have an account?\\n                                <a [routerLink]=\\\"['/authentication/register']\\\" class=\\\"text-info link\\\">Register</a>\\n                            </span>\\n                        </div>\\n                    </div>\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService, CookieOptionsArgs } from \"angular2-cookie/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { LoginService } from './login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public form: FormGroup;\n  public errorLogin = false;\n  constructor(private fb: FormBuilder, private router: Router, private loginService: LoginService,private _cookieService: CookieService) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      uname: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n  onSubmit() {\n          this.errorLogin  =false;\n\n  this.loginService.login(this.form.value.uname, this.form.value.password).subscribe((res) => {\n       if(res.message == 'success'){\n        var datares = [];\n        datares['username'] = res.data.data.username;\n        datares['email'] = res.data.data.email;\n        datares['token'] = res.data.data.token;        \n        datares['userid'] = res.data.data.id;      \n        datares['parentid'] = res.data.data.parent_id;   \n        datares['user_type'] = res.data.data.user_type;       \n        datares['user_image'] = res.data.data.user_image;        \n\n        datares['login_status'] = res.data.data.login_status;        \n        datares['display_name'] = res.data.data.display_name;        \n\n        let opts: CookieOptionsArgs = {\n            expires: new Date('2030-07-19')\n        };\n        this._cookieService.put(\"username\", datares['username'], opts);\n        this._cookieService.put(\"email\", datares['email'], opts);\n        this._cookieService.put(\"token\", datares['token'], opts);\n        this._cookieService.put(\"user_type\", datares['user_type'], opts);\n       \n        this._cookieService.put(\"login_status\", datares['login_status'], opts);\n        this._cookieService.put(\"display_name\", datares['display_name'], opts);\n        this._cookieService.put(\"user_image\", datares['user_image'], opts);\n\n        if(datares['user_type'] == '1') {\n        this.router.navigate(['/users']);\n         this._cookieService.put(\"userid\", datares['userid'], opts);\n      }\n        else if(datares['user_type'] == '2') {\n         this._cookieService.put(\"userid\", datares['userid'], opts);\n\n       if(datares['login_status'] == 0)\n        window.location.href = '/assets/stepper/index.html';\n        else\n        // this.router.navigate(['/dashboards/cliniciananalysis/1']);\n        this.router.navigate(['/clinic']);\n      }\n      else{\n         this._cookieService.put(\"userid\", datares['parentid'], opts);\n         this._cookieService.put(\"childid\", datares['userid'], opts);\n\n        this.router.navigate(['/profile-settings/1']);\n      }\n\n       }\n       else if(res.message == 'error'){\n          this.errorLogin  =true;\n       }\n    }, error => {\n    }    \n    );\n\n  }\n2}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatIconModule,\n  MatCardModule,\n  MatInputModule,\n  MatCheckboxModule,\n  MatButtonModule\n} from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { LoginRoutes } from './login.routing';\nimport { LoginComponent } from './login.component';\nimport { LoginService } from './login.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(LoginRoutes),\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    LoginService\n  ],\n  declarations: [\n    LoginComponent,\n  ]\n})\nexport class LoginModule {}\n","import { Routes } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nexport const LoginRoutes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    data: {\n      title: 'Login'\n    }\n  }\n];\n"],"sourceRoot":""}