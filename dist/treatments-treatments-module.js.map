{"version":3,"sources":["webpack:///./src/app/treatments/dialog-overview-example.html","webpack:///./src/app/treatments/treatments.component.html","webpack:///./src/app/treatments/treatments.component.scss","webpack:///./src/app/treatments/treatments.component.ts","webpack:///./src/app/treatments/treatments.module.ts","webpack:///./src/app/treatments/treatments.routing.ts","webpack:///./src/app/treatments/treatments.service.ts","webpack:///./src/app/treatments/update-dialog-overview-example.html"],"names":[],"mappings":"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","file":"treatments-treatments-module.js","sourcesContent":["module.exports = \"<div class=\\\"AddUserPopup\\\"> \\n<h1 mat-dialog-title>Add Treatment</h1>\\n<div mat-dialog-content>\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.treatmentName\\\" placeholder=\\\"Treatment Name\\\" required=\\\"true\\\">\\n  </mat-form-field>\\n  <span class=\\\"treatNameError\\\"></span>\\n\\n   <mat-form-field>\\n    <mat-label>Treatment Status</mat-label> \\n    <mat-select name =\\\"value\\\" tabindex=\\\"1\\\" [(ngModel)]= \\\"data.treatmentStatus\\\"  class=\\\"form-control-dialog\\\" required=\\\"true\\\">\\n      <mat-option value=\\\"1\\\">ACTIVE</mat-option>\\n      <mat-option value=\\\"2\\\">INACTIVE</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"save(data)\\\"  tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\\n</div>\"","module.exports = \"<mat-card class=\\\"roles_users\\\">\\n    <mat-card-content>\\n        <mat-card-title>Treatments <div class=\\\"sa-pull-right\\\"><button class=\\\"mat-raised-button mat-gray\\\" mat-raised-button (click)=\\\"openDialog()\\\">Add Treatment</button></div>\\n        </mat-card-title>\\n\\n        <mat-form-field>\\n            <input matInput type='text' class=\\\"form-control\\\" placeholder='Type to filter Treatments List...' (keyup)='updateFilter($event)'\\n            />\\n        </mat-form-field>\\n        <ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\n       <ngx-datatable-column name=\\\"Sr\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Id</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span>\\n            {{value}}\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"treatmentName\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Treatment Name</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'treatmentName')\\\" *ngIf=\\\"!editing[rowIndex + '-treatmentName']\\\">\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'treatmentName', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-treatmentName']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n       <!--ngx-datatable-column name=\\\"Email\\\">\\n       \\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'email')\\\" *ngIf=\\\"!editing[rowIndex + '-email']\\\">\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'email', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-email']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column-->\\n       <ngx-datatable-column name=\\\"treatmentStatus\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Treatment Status</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span >\\n            {{value}}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, 'contactName', rowIndex)\\\" *ngIf=\\\"editing[rowIndex+ '-treatmentStatus']\\\" type=\\\"text\\\" [value]=\\\"value\\\"\\n          />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Created\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span>\\n            {{value| date}}\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Actions</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" style=\\\"width:266px!important;\\\">\\n           \\n          <a mat-raised-button (click)=\\\"openupdateDialog(rowIndex)\\\" data-id={{value}} class=\\\"action_btn golden\\\" title= 'Edit Treatment Details'><i class=\\\"ti-eye  m-r-10\\\"></i></a>\\n          <button class=\\\"action_btn danger\\\" mat-menu-item (click) = \\\"deleteTreatment(rowIndex)\\\">\\n         <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n        </ngx-datatable>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".lds-roller div::after {\\n  background: black; }\\n\\n.spinner {\\n  position: relative;\\n  background: none; }\\n\\n.mat-dialog-container {\\n  min-width: 700px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVtZW1iZXJzL2NsaWVudDIvc3JjL2FwcC90cmVhdG1lbnRzL3RyZWF0bWVudHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBaUIsRUFDcEI7O0FBQ0Q7RUFDSSxtQkFBa0I7RUFDbEIsaUJBQWdCLEVBQ25COztBQUNEO0VBRUksNEJBQTJCLEVBRTlCIiwiZmlsZSI6InNyYy9hcHAvdHJlYXRtZW50cy90cmVhdG1lbnRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxkcy1yb2xsZXIgZGl2OjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogYmxhY2s7XG59XG4uc3Bpbm5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG59XG4ubWF0LWRpYWxvZy1jb250YWluZXIge1xuXG4gICAgbWluLXdpZHRoOiA3MDBweCAhaW1wb3J0YW50O1xuXG59Il19 */\"","import { Component, Inject , ViewChild, AfterViewInit } from '@angular/core';\nimport { TreatmentsService } from './treatments.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA,MatInputModule } from '@angular/material';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { EventEmitter , Output, Input} from '@angular/core';\nimport { DentistService } from '../dentist/dentist.service';\nimport { NotifierService } from 'angular-notifier';\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example.html',\n})\n\n\nexport class DialogOverviewExampleDialogComponent {\n   public clinic_id:any ={}; \n   show_dentist = false;\n\n  constructor(private treatmentsService: TreatmentsService,\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  private warningMessage: string;\n\n  save(data) {\n\n   $('.form-control-dialog').each(function(){\n      var likeElement = $(this).click();\n   });\n  if(data.treatmentName != undefined && data.treatmentStatus != undefined ){\n      this.treatmentsService.checkTreatmentName(data.treatmentName).subscribe((res) => {\n       if($.trim(res.message)==$.trim('success') && $.trim(res.status)==$.trim('exist')){\n         $(\".treatNameError\").text(\"\");\n         $(\".treatNameError\").text(\"Treatment name already exists .\");\n         $(\".treatNameError\").css(\"color\",\"red\");\n         return false;\n           \n        }else{\n          this.dialogRef.close(data);\n        }\n      }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    });\n\n  }else{\n    return false;\n   }\n }\n\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n    @Output() public onDentist: EventEmitter<any> = new EventEmitter();\n    public selected_id;\n\n    loadDentist(val) {\n      if(val == '4')\n        this.show_dentist = true;\n    }\n}\n\n@Component({\n  selector: 'app-overview-example-dialog',\n  templateUrl: './update-dialog-overview-example.html',\n})\n//UpdateDialogOverviewExampleDialogComponent\nexport class UpdateDialogOverviewExampleDialogComponent {\n   public clinic_id:any ={};\n   constructor(private treatmentsService: TreatmentsService,\n    public dialogRefUpdate: MatDialogRef<UpdateDialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n\n  \n  private warningMessage: string;\n\n  updatesave(data) {\n   $('.form-control-dialog').each(function(){\n      var likeElement = $(this).click();\n   });\n\n   console.log(data);\n  if(data.treatmentName != \"\" && data.treatmentStatus !=\"\" && data.treatmentId!=\"\"){\n      this.treatmentsService.checkTreatmentNameForUpdate(data.treatmentName,data.treatmentId).subscribe((res) => {\n       if($.trim(res.message)==$.trim('success') && $.trim(res.status)==$.trim('exist')){\n         $(\".treatNameError\").text(\"\");\n         $(\".treatNameError\").text(\"Treatment name already exists .\");\n         $(\".treatNameError\").css(\"color\",\"red\");\n         return false;\n           \n        }else{\n          this.dialogRefUpdate.close(data);\n        }\n      }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    });\n\n  }else{\n    return false;\n   }\n }\n\n\n  onNoClick(): void {\n    this.dialogRefUpdate.close();\n  }\n\n\n   @Output() public onAdd: EventEmitter<any> = new EventEmitter();\n   public selected_id;\n    loadPermisions(val) {\n      this.selected_id =val;\n      this.onAdd.emit(val);\n    }\n}\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './treatments.component.html',\n  styleUrls: ['./treatments.component.scss']\n})\nexport class TreatmentsComponent implements AfterViewInit {\n  display_name: string;\n  email: string;\n  user_type='';\n  fileInput: any ;\n  notifier:any;\n  public clinic_id;\n  dentist_id = '';\npassword:string;\ndentists:any=[];\n  ngAfterViewInit() {\n    $('.header_filters').removeClass('hide_header'); \n    $('.header_filters').removeClass('flex_direct_mar'); \n    \n    this.getTreatments();\n\n    this.clinic_id = this.route.snapshot.paramMap.get(\"id\");\n        $('#title').html('Treatments');\n         $('.header_filters').addClass('hide_header');\n  }\n  editing = {};\n  rows = [];\n  temp = [...data];\n\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [{ prop: 'sr' }, { name: 'displayName' }, { name: 'email' }, { name: 'usertype' }, { name: 'created' }];\n\n  @ViewChild(TreatmentsComponent) table: TreatmentsComponent;\n  constructor(notifierService: NotifierService, private treatmentsService: TreatmentsService, public dialog: MatDialog,private _cookieService: CookieService, private router: Router, private route: ActivatedRoute, private dentistService: DentistService) {\n      this.notifier = notifierService;\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n  }\n  private warningMessage: string;\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n      width: '250px',\n      data: { display_name: 'test25'}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n       if(result != undefined) {\n        this.addTreatment(result.treatmentName,result.treatmentStatus);\n\n      }\n    });\n  }\n\n\n openupdateDialog(rowIndex): void {\n\n    if(this.rows[rowIndex]['id']) {\n       this.treatmentsService.getTreatmentDetail(this.rows[rowIndex]['id']).subscribe((res) => {\n          //this.data.treatmentName = res.treatmentName;         \n        const dialogRefUpdate = this.dialog.open(UpdateDialogOverviewExampleDialogComponent, {\n            width: '250px',\n            data: { display_name: 'test26',treatmentName: res.treatmentName,treatmentStatus: res.treatmentStatus,treatmentId: this.rows[rowIndex]['id']}\n          });\n\n           dialogRefUpdate.afterClosed().subscribe(result => {\n             if(result != undefined) {\n               this.updateTreatment(result.treatmentName,result.treatmentStatus,this.rows[rowIndex]['id']);\n             }\n          });\n\n       }, error => {\n         this.warningMessage = \"Please Provide Valid Inputs!\";\n      }    \n     );\n    }else {\n      this.rows.splice(rowIndex, 1);\n      this.rows = [...this.rows];\n    } \n    \n  }\n\n\n  addTreatment(treatmentName,treatmentStatus) {\n  this.treatmentsService.addTreatment(treatmentName,treatmentStatus).subscribe((res) => {\n       //if(res.message == 'success'){\n        this.notifier.notify( 'success', 'Treatment Added' ,'vertical');\n        this.getTreatments();\n     //  }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }); \n  }\n  updateTreatment(treatmentName,treatmentStatus,treatmentId) {\n  this.treatmentsService.updateTreatment(treatmentName,treatmentStatus,treatmentId).subscribe((res) => {\n       //if(res.message == 'success'){\n        this.notifier.notify( 'success', 'Treatment Updated' ,'vertical');\n        this.getTreatments();\n       //  }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }); \n  }\n\n  private getTreatments() {\n  this.treatmentsService.getTreatments().subscribe((res) => {\n       if(res.message == 'success'){\n        this.rows = res.data;\n        this.temp = [...res.data];        \n        this.table = data;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    });\n  }\n\n  public roles =[];\n  public abc=true;\n  public selectedRole: any[] = [];\n\n  public selected_id:any;\n  private deleteTreatment(row) {\n    if(confirm(\"Are you sure to delete Treatment ?\")) {\n\n     if(this.rows[row]['id']) {\n       this.treatmentsService.deleteTreatment(this.rows[row]['id']).subscribe((res) => {\n        if(res.message == 'success'){\n        this.notifier.notify( 'success', 'Treatment Removed' ,'vertical');\n           this.getTreatments();\n         }\n        }, error => {\n        this.warningMessage = \"Please Provide Valid Inputs!\";\n      }    \n     );\n    }\n    else {\n      this.rows.splice(row, 1);\n      this.rows = [...this.rows];\n    }\n  }\n}\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.treatmentName.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n  }\n\n /*updateValue(event, cell, rowIndex) {\n  if((this.rows[rowIndex]['providerId']  == 'Enter Provider Id') || (this.rows[rowIndex]['name']  == 'Enter Name')) {\n    this.editing[length + '-providerId'] = true;\n    this.editing[length + '-name'] = true;\n  }\n  else {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.treatmentsService.updateRoleUser(this.rows[rowIndex]['id'], this.rows[rowIndex][cell],cell).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('User Details Updated');\n  \n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );  \n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n  }\n  } */\n\n  enableEditing(rowIndex, cell) {\n    this.editing[rowIndex + '-' + cell] = true;\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { TreatmentsService } from './treatments.service';\nimport { TreatmentsComponent,\n  DialogOverviewExampleDialogComponent,\n  UpdateDialogOverviewExampleDialogComponent  } from './treatments.component';\nimport { TreatmentsRoutes } from './treatments.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(TreatmentsRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule,\n    FormsModule,\n    MatFormFieldModule\n  ],\n  providers: [\n    TreatmentsService\n  ],\n  entryComponents: [DialogOverviewExampleDialogComponent,UpdateDialogOverviewExampleDialogComponent],\n  declarations: [ TreatmentsComponent,\n    DialogOverviewExampleDialogComponent,UpdateDialogOverviewExampleDialogComponent ]\n})\nexport class TreatmentsModule { }","import { Routes } from '@angular/router';\n\nimport { TreatmentsComponent } from './treatments.component';\n\nexport const TreatmentsRoutes: Routes = [\n  {\n    path: '',\n    component: TreatmentsComponent,\n    data: {\n      title: 'Roles Users'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n\n@Injectable()\nexport class TreatmentsService {\n\n    public token: string;\n    public api_url: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        \n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   // Get Treatments\n    getTreatments(user_id = this._cookieService.get(\"userid\"), clinic_id='1', token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/treatments/getTreatments?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\")+\"&type=all\", { headers: this.headers })\n        .pipe(map((response: Response) => {\n            console.log(response);\n                        return response;\n                    })\n        );\n    }\n\n    checkTreatmentName(treatmentName,token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/treatments/checkTreatmentName?token=\"+this._cookieService.get(\"token\")+\"&treatmentName=\"+treatmentName, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n         })\n        );\n    }\n    checkTreatmentNameForUpdate(treatmentName,treatmentId,token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/treatments/checkTreatmentNameForUpdate?token=\"+this._cookieService.get(\"token\")+\"&treatmentName=\"+treatmentName+\"&treatmentId=\"+treatmentId, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n         })\n        );\n    }\n\n\n       // Delete Clinic\n    deleteTreatment(treatment_id, token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n    formData.append('id', treatment_id);\n    formData.append('token', token);\n     return this.http.post(this.apiUrl +\"/treatments/deleteTreatments\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n        //Add Treatment\n    addTreatment(treatmentName,treatmentStatus,token = this._cookieService.get(\"token\")): Observable<any> {\n\n     const formData = new FormData();\n     formData.append('treatmentName', treatmentName);\n     formData.append('treatmentStatus', treatmentStatus);\n     formData.append('token', token); \n     return this.http.post(this.apiUrl +\"/treatments/addTreatments/\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n         ); \n     }\n\n     updateTreatment(treatmentName,treatmentStatus,id,token = this._cookieService.get(\"token\")): Observable<any> {\n      const formData = new FormData();\n      formData.append('treatmentName', treatmentName);\n      formData.append('treatmentStatus', treatmentStatus);\n      formData.append('id', id);\n      formData.append('token', token); \n      return this.http.post(this.apiUrl +\"/treatments/updateTreatments/\", formData)\n         .pipe(map((response: Response) => {\n                        return response;\n                    })\n          ); \n      }\n\n\n\n    getTreatmentDetail(treatment_id,token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/treatments/getTreatmentDetail?token=\"+this._cookieService.get(\"token\")+\"&treatmentId=\"+treatment_id, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n         })\n        );\n    }\n\n}\n\n","module.exports = \"<div class=\\\"AddUserPopup\\\"> \\n<h1 mat-dialog-title>Update Treatment</h1>\\n <input type=\\\"hidden\\\" tabindex=\\\"1\\\" [(ngModel)]=\\\"data.treatmentId\\\" placeholder=\\\"Treatment Id\\\" class=\\\"treatmentId\\\" value=\\\"\\\" required=\\\"true\\\">\\n<div mat-dialog-content>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.treatmentName\\\" placeholder=\\\"Treatment Name\\\" class=\\\"treatmentName\\\" required=\\\"true\\\">\\n  </mat-form-field>\\n  <span class=\\\"treatNameError\\\"></span>\\n\\n   <mat-form-field>\\n    <mat-label>Treatment Status</mat-label> \\n    <mat-select name =\\\"value\\\" tabindex=\\\"1\\\" [(ngModel)]= \\\"data.treatmentStatus\\\"  class=\\\"form-control-dialog treatmentStatus\\\" required=\\\"true\\\">\\n      <mat-option  value=\\\"ACTIVE\\\">ACTIVE</mat-option>\\n      <mat-option  value=\\\"INACTIVE\\\">INACTIVE</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"updatesave(data)\\\"  tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\\n</div>\""],"sourceRoot":""}