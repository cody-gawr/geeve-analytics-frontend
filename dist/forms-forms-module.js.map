{"version":3,"sources":["webpack:///./src/app/forms/autocomplete/autocomplete.component.html","webpack:///./src/app/forms/autocomplete/autocomplete.component.scss","webpack:///./src/app/forms/autocomplete/autocomplete.component.ts","webpack:///./src/app/forms/checkbox/checkbox.component.html","webpack:///./src/app/forms/checkbox/checkbox.component.scss","webpack:///./src/app/forms/checkbox/checkbox.component.ts","webpack:///./src/app/forms/datepicker/datepicker.component.html","webpack:///./src/app/forms/datepicker/datepicker.component.scss","webpack:///./src/app/forms/datepicker/datepicker.component.ts","webpack:///./src/app/forms/editor/editor.component.html","webpack:///./src/app/forms/editor/editor.component.scss","webpack:///./src/app/forms/editor/editor.component.ts","webpack:///./src/app/forms/file-upload/upload.component.html","webpack:///./src/app/forms/file-upload/upload.component.ts","webpack:///./src/app/forms/file-upload/upload.scss","webpack:///./src/app/forms/form-layouts/form-layout.component.html","webpack:///./src/app/forms/form-layouts/form-layout.component.scss","webpack:///./src/app/forms/form-layouts/form-layout.component.ts","webpack:///./src/app/forms/form-validation/form-validation.component.html","webpack:///./src/app/forms/form-validation/form-validation.component.scss","webpack:///./src/app/forms/form-validation/form-validation.component.ts","webpack:///./src/app/forms/formfield/formfield.component.html","webpack:///./src/app/forms/formfield/formfield.component.scss","webpack:///./src/app/forms/formfield/formfield.component.ts","webpack:///./src/app/forms/forms.module.ts","webpack:///./src/app/forms/forms.routing.ts","webpack:///./src/app/forms/input/input.component.html","webpack:///./src/app/forms/input/input.component.scss","webpack:///./src/app/forms/input/input.component.ts","webpack:///./src/app/forms/multiselect/multiselect.component.css","webpack:///./src/app/forms/multiselect/multiselect.component.html","webpack:///./src/app/forms/multiselect/multiselect.component.ts","webpack:///./src/app/forms/paginator/paginator.component.html","webpack:///./src/app/forms/paginator/paginator.component.scss","webpack:///./src/app/forms/paginator/paginator.component.ts","webpack:///./src/app/forms/radiobutton/radiobutton.component.html","webpack:///./src/app/forms/radiobutton/radiobutton.component.scss","webpack:///./src/app/forms/radiobutton/radiobutton.component.ts","webpack:///./src/app/forms/select/select.component.html","webpack:///./src/app/forms/select/select.component.scss","webpack:///./src/app/forms/select/select.component.ts","webpack:///./src/app/forms/sortheader/sortheader.component.html","webpack:///./src/app/forms/sortheader/sortheader.component.scss","webpack:///./src/app/forms/sortheader/sortheader.component.ts","webpack:///./src/app/forms/tree/tree.component.html","webpack:///./src/app/forms/tree/tree.component.scss","webpack:///./src/app/forms/tree/tree.component.ts","webpack:///./src/app/forms/wizard/wizard.component.html","webpack:///./src/app/forms/wizard/wizard.component.scss","webpack:///./src/app/forms/wizard/wizard.component.ts"],"names":[],"mappings":"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","file":"forms-forms-module.js","sourcesContent":["module.exports = \"<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Autocomplete Example</mat-card-title>\\n                <!-- ============================================================== -->\\n                <!-- column -->\\n                <!-- ============================================================== -->\\n                <form class=\\\"example-form\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput placeholder=\\\"State\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"stateCtrl\\\">\\n                        <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                            <mat-option *ngFor=\\\"let state of filteredStates | async\\\" [value]=\\\"state.name\\\">\\n                                <img class=\\\"example-option-img\\\" aria-hidden [src]=\\\"state.flag\\\" height=\\\"25\\\">\\n                                <span>{{state.name}}</span> |\\n                                <small>Population: {{state.population}}</small>\\n                            </mat-option>\\n                        </mat-autocomplete>\\n                    </mat-form-field>\\n\\n                    <br>\\n\\n                    <mat-slide-toggle [checked]=\\\"stateCtrl.disabled\\\" (change)=\\\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\\\">\\n                        Disable Input?\\n                    </mat-slide-toggle>\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Simple autocomplete</mat-card-title>\\n                <!-- ============================================================== -->\\n                <!-- column -->\\n                <!-- ============================================================== -->\\n                <form class=\\\"example-form\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                        <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\"\\n                            [matAutocomplete]=\\\"autoTest\\\">\\n                        <mat-autocomplete #autoTest=\\\"matAutocomplete\\\">\\n                            <mat-option *ngFor=\\\"let option of options1\\\" [value]=\\\"option\\\">\\n                                {{option}}\\n                            </mat-option>\\n                        </mat-autocomplete>\\n                    </mat-form-field>\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Option groups</mat-card-title>\\n                <!-- ============================================================== -->\\n                <!-- column -->\\n                <!-- ============================================================== -->\\n                <form [formGroup]=\\\"stateForm\\\">\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"States Group\\\" formControlName=\\\"stateGroup\\\" required\\n                            [matAutocomplete]=\\\"autoGroup\\\">\\n                        <mat-autocomplete #autoGroup=\\\"matAutocomplete\\\">\\n                            <mat-optgroup *ngFor=\\\"let group of stateGroupOptions | async\\\" [label]=\\\"group.letter\\\">\\n                                <mat-option *ngFor=\\\"let name of group.names\\\" [value]=\\\"name\\\">\\n                                    {{name}}\\n                                </mat-option>\\n                            </mat-optgroup>\\n                        </mat-autocomplete>\\n                    </mat-form-field>\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Display value autocomplete</mat-card-title>\\n                <!-- ============================================================== -->\\n                <!-- column -->\\n                <!-- ============================================================== -->\\n                <form>\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" placeholder=\\\"Assignee\\\" aria-label=\\\"Assignee\\\" matInput [formControl]=\\\"myControl\\\"\\n                            [matAutocomplete]=\\\"autoready\\\">\\n                        <mat-autocomplete #autoready=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n                            <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\n                                {{option.name}}\\n                            </mat-option>\\n                        </mat-autocomplete>\\n                    </mat-form-field>\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Filter autocomplete</mat-card-title>\\n                <!-- ============================================================== -->\\n                <!-- column -->\\n                <!-- ============================================================== -->\\n                <form>\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\"\\n                            [matAutocomplete]=\\\"autostart\\\">\\n                        <mat-autocomplete #autostart=\\\"matAutocomplete\\\">\\n                            <mat-option *ngFor=\\\"let option of filteredOptions1 | async\\\" [value]=\\\"option\\\">\\n                                {{option}}\\n                            </mat-option>\\n                        </mat-autocomplete>\\n                    </mat-form-field>\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n\\n<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Highlight the first autocomplete option</mat-card-title>\\n                <!-- ============================================================== -->\\n                <!-- column -->\\n                <!-- ============================================================== -->\\n                <form>\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\"\\n                            [matAutocomplete]=\\\"autopast\\\">\\n                        <mat-autocomplete autoActiveFirstOption #autopast=\\\"matAutocomplete\\\">\\n                            <mat-option *ngFor=\\\"let option of filteredOptions2 | async\\\" [value]=\\\"option\\\">\\n                                {{option}}\\n                            </mat-option>\\n                        </mat-autocomplete>\\n                    </mat-form-field>\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL2F1dG9jb21wbGV0ZS9hdXRvY29tcGxldGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { map, startWith } from 'rxjs/operators';\n\nexport class State {\n  constructor(\n    public name: string,\n    public population: string,\n    public flag: string\n  ) {}\n}\n\nexport interface StateGroup {\n  letter: string;\n  names: string[];\n}\n\nexport interface User {\n  name: string;\n}\n\nexport const _filter = (opt: string[], value: string): string[] => {\n  const filterValue = value.toLowerCase();\n\n  return opt.filter(item => item.toLowerCase().indexOf(filterValue) === 0);\n};\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss']\n})\nexport class AutocompleteComponent implements OnInit {\n  // state autocomplate\n  stateCtrl: FormControl;\n  filteredStates: Observable<any[]>;\n\n  // 2\n  myControl1 = new FormControl();\n  options: string[] = ['One', 'Two', 'Three'];\n\n  // 3\n\n  stateForm: FormGroup = this.fb.group({\n    stateGroup: ''\n  });\n\n  stateGroups: StateGroup[] = [\n    {\n      letter: 'A',\n      names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\n    },\n    {\n      letter: 'C',\n      names: ['California', 'Colorado', 'Connecticut']\n    },\n    {\n      letter: 'D',\n      names: ['Delaware']\n    },\n    {\n      letter: 'F',\n      names: ['Florida']\n    },\n    {\n      letter: 'G',\n      names: ['Georgia']\n    },\n    {\n      letter: 'H',\n      names: ['Hawaii']\n    },\n    {\n      letter: 'I',\n      names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\n    },\n    {\n      letter: 'K',\n      names: ['Kansas', 'Kentucky']\n    },\n    {\n      letter: 'L',\n      names: ['Louisiana']\n    },\n    {\n      letter: 'M',\n      names: [\n        'Maine',\n        'Maryland',\n        'Massachusetts',\n        'Michigan',\n        'Minnesota',\n        'Mississippi',\n        'Missouri',\n        'Montana'\n      ]\n    },\n    {\n      letter: 'N',\n      names: [\n        'Nebraska',\n        'Nevada',\n        'New Hampshire',\n        'New Jersey',\n        'New Mexico',\n        'New York',\n        'North Carolina',\n        'North Dakota'\n      ]\n    },\n    {\n      letter: 'O',\n      names: ['Ohio', 'Oklahoma', 'Oregon']\n    },\n    {\n      letter: 'P',\n      names: ['Pennsylvania']\n    },\n    {\n      letter: 'R',\n      names: ['Rhode Island']\n    },\n    {\n      letter: 'S',\n      names: ['South Carolina', 'South Dakota']\n    },\n    {\n      letter: 'T',\n      names: ['Tennessee', 'Texas']\n    },\n    {\n      letter: 'U',\n      names: ['Utah']\n    },\n    {\n      letter: 'V',\n      names: ['Vermont', 'Virginia']\n    },\n    {\n      letter: 'W',\n      names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n    }\n  ];\n\n  stateGroupOptions: Observable<StateGroup[]>;\n\n  states: State[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n      flag:\n        'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n      flag:\n        'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n      flag:\n        'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n      flag:\n        'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n    }\n  ];\n\n  // 4\n\n  myControl = new FormControl();\n  options1: User[] = [{ name: 'Mary' }, { name: 'Shelley' }, { name: 'Igor' }];\n  filteredOptions: Observable<User[]>;\n\n  // 5\n\n  myControl2 = new FormControl();\n  options2: string[] = ['One', 'Two', 'Three'];\n  filteredOptions1: Observable<string[]>;\n\n  // 6\n\n  highControl = new FormControl();\n  options3: string[] = ['One', 'Two', 'Three'];\n  filteredOptions2: Observable<string[]>;\n\n  constructor(private fb: FormBuilder) {\n    this.stateCtrl = new FormControl();\n    this.filteredStates = this.stateCtrl.valueChanges.pipe(\n      startWith(''),\n      map(state => (state ? this.filterStates(state) : this.states.slice()))\n    );\n  }\n\n  filterStates(name: string) {\n    return this.states.filter(\n      state => state.name.toLowerCase().indexOf(name.toLowerCase()) === 0\n    );\n  }\n\n  ngOnInit() {\n    // tslint:disable-next-line:no-non-null-assertion\n    this.stateGroupOptions = this.stateForm\n      .get('stateGroup')!\n      .valueChanges.pipe(\n        startWith(''),\n        map(value => this._filterGroup(value))\n      );\n\n    // 4\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith<string | User>(''),\n      map(value => (typeof value === 'string' ? value : value.name)),\n      map(name => (name ? this._filter(name) : this.options1.slice()))\n    );\n\n    // 5\n\n    this.filteredOptions1 = this.myControl2.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter1(value))\n    );\n\n    // 6\n    this.filteredOptions2 = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter2(value))\n    );\n  }\n\n  // 4\n\n  displayFn(user?: User): string | undefined {\n    return user ? user.name : undefined;\n  }\n\n  private _filterGroup(value: string): StateGroup[] {\n    if (value) {\n      return this.stateGroups\n        .map(group => ({\n          letter: group.letter,\n          names: _filter(group.names, value)\n        }))\n        .filter(group => group.names.length > 0);\n    }\n\n    return this.stateGroups;\n  }\n\n  private _filter(name: string): User[] {\n    const filterValue = name.toLowerCase();\n\n    return this.options1.filter(\n      option => option.name.toLowerCase().indexOf(filterValue) === 0\n    );\n  }\n\n  // 5\n\n  private _filter1(value: string): string[] {\n    const filterValue1 = value.toLowerCase();\n\n    return this.options2.filter(option1 =>\n      option1.toLowerCase().includes(filterValue1)\n    );\n  }\n\n  // 6\n\n  private _filter2(value: string): string[] {\n    const filterValue2 = value.toLowerCase();\n\n    return this.options3.filter(\n      option => option.toLowerCase().indexOf(filterValue2) === 0\n    );\n  }\n}\n","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <h3 class=\\\"example-h2\\\">Checkbox configuration</h3>\\n\\n    <section class=\\\"example-section\\\">\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\">Checked</mat-checkbox>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"indeterminate\\\">Indeterminate</mat-checkbox>\\n    </section>\\n\\n    <section class=\\\"example-section\\\">\\n      <label class=\\\"example-margin\\\">Align:</label>\\n      <mat-radio-group [(ngModel)]=\\\"labelPosition\\\">\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"after\\\">After</mat-radio-button>\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"before\\\">Before</mat-radio-button>\\n      </mat-radio-group>\\n    </section>\\n\\n    <section class=\\\"example-section\\\">\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox>\\n    </section>\\n  </mat-card-content>\\n</mat-card>\\n\\n<mat-card class=\\\"result\\\">\\n  <mat-card-content>\\n    <h2 class=\\\"example-h2\\\">Result</h2>\\n    <section class=\\\"example-section\\\">\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\" [(indeterminate)]=\\\"indeterminate\\\" [labelPosition]=\\\"labelPosition\\\"\\n        [disabled]=\\\"disabled\\\">\\n        I'm a checkbox\\n      </mat-checkbox>\\n    </section>\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \".example-h2 {\\n  margin: 10px; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 0 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL2NoZWNrYm94L2NoZWNrYm94LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBWSxFQUNiOztBQUVEO0VBQ0UsY0FBYTtFQUNiLHNCQUFxQjtFQUNyQixvQkFBbUI7RUFDbkIsYUFBWSxFQUNiOztBQUVEO0VBQ0UsZUFBYyxFQUNmIiwiZmlsZSI6InNyYy9hcHAvZm9ybXMvY2hlY2tib3gvY2hlY2tib3guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1oMiB7XG4gIG1hcmdpbjogMTBweDtcbn1cblxuLmV4YW1wbGUtc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiA2MHB4O1xufVxuXG4uZXhhbXBsZS1tYXJnaW4ge1xuICBtYXJnaW46IDAgMTBweDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\n  checked = false;\n  indeterminate = false;\n  align = 'start';\n  disabled = false;\n  labelPosition = false;\n}\n","module.exports = \"<!-- ============================================================== -->\\n<!-- Fixed height Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Basic Datepicker</mat-card-title>\\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                </mat-form-field>\\n\\n            </mat-card-content>\\n\\n        </mat-card>\\n    </div>\\n</div>\\n<div fxLayout=\\\"row wrap\\\">\\n    <!-- Grid-->\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Datepicker start date</mat-card-title>\\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Choose a date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker2 startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\n                </mat-form-field>\\n\\n            </mat-card-content>\\n\\n        </mat-card>\\n    </div>\\n</div>\\n<div fxLayout=\\\"row wrap\\\">\\n    <!-- Grid-->\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Datepicker selected value</mat-card-title>\\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Angular forms\\\" [formControl]=\\\"date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker3></mat-datepicker>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"Angular forms (w/ deserialization)\\\"\\n                        [formControl]=\\\"serializedDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker4></mat-datepicker>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker5\\\" placeholder=\\\"Value binding\\\" [value]=\\\"date.value\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker5\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker5></mat-datepicker>\\n                </mat-form-field>\\n\\n            </mat-card-content>\\n\\n        </mat-card>\\n    </div>\\n</div>\\n<div fxLayout=\\\"row wrap\\\">\\n    <!-- Grid-->\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Datepicker input and change events</mat-card-title>\\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker6\\\" placeholder=\\\"Input & change events\\\" (dateInput)=\\\"addEvent('input', $event)\\\"\\n                        (dateChange)=\\\"addEvent('change', $event)\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker6\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker6></mat-datepicker>\\n                </mat-form-field>\\n\\n                <div class=\\\"b-all p-20\\\">\\n                    <div *ngFor=\\\"let e of events\\\">{{e}}</div>\\n                </div>\\n\\n            </mat-card-content>\\n\\n        </mat-card>\\n    </div>\\n</div>\\n<div fxLayout=\\\"row wrap\\\">\\n    <!-- Grid-->\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Disabled datepicker</mat-card-title>\\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\\n                <p>\\n                    <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"dp1\\\" placeholder=\\\"Completely disabled\\\" disabled>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"dp1\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #dp1></mat-datepicker>\\n                    </mat-form-field>\\n                </p>\\n\\n                <p>\\n                    <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"dp2\\\" placeholder=\\\"Popup disabled\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"dp2\\\" disabled></mat-datepicker-toggle>\\n                        <mat-datepicker #dp2></mat-datepicker>\\n                    </mat-form-field>\\n                </p>\\n\\n                <p>\\n                    <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"dp3\\\" placeholder=\\\"Input disabled\\\" disabled>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"dp3\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #dp3 disabled=\\\"false\\\"></mat-datepicker>\\n                    </mat-form-field>\\n                </p>\\n\\n            </mat-card-content>\\n\\n        </mat-card>\\n    </div>\\n</div>\\n<div fxLayout=\\\"row wrap\\\">\\n    <!-- Grid-->\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Datepicker touch UI</mat-card-title>\\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput [matDatepicker]=\\\"picker7\\\" placeholder=\\\"Choose a date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker7\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker touchUi=\\\"true\\\" #picker7></mat-datepicker>\\n                </mat-form-field>\\n\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n<div fxLayout=\\\"row wrap\\\">\\n    <!-- Grid-->\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Datepicker open method</mat-card-title>\\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput [matDatepicker]=\\\"picker8\\\" placeholder=\\\"Choose a date\\\">\\n                    <mat-datepicker #picker8></mat-datepicker>\\n                </mat-form-field>\\n                <button mat-raised-button (click)=\\\"picker8.open()\\\">Open</button>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <!-- Grid-->\\n</div>\\n\\n\\n\\n\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Changing the datepicker colors</mat-card-title>\\n                <mat-form-field color=\\\"accent\\\">\\n                    <mat-label>Inherited calendar color</mat-label>\\n                    <input matInput [matDatepicker]=\\\"picker111\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker111\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker111></mat-datepicker>\\n                </mat-form-field>\\n\\n                <mat-form-field color=\\\"accent\\\">\\n                    <mat-label>Custom calendar color</mat-label>\\n                    <input matInput [matDatepicker]=\\\"picker222\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker222\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker222 color=\\\"success\\\"></mat-datepicker>\\n                </mat-form-field>\\n\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Datepicker with min & max validation</mat-card-title>\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"minpicker\\\" placeholder=\\\"Choose a date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"minpicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #minpicker></mat-datepicker>\\n                </mat-form-field>\\n\\n\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Datepicker with filter validation</mat-card-title>\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"filterpicker\\\" placeholder=\\\"Choose a date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"filterpicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #filterpicker></mat-datepicker>\\n                </mat-form-field>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Datepicker input and change events</mat-card-title>\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"pickerevent\\\" placeholder=\\\"Input & change events\\\" (dateInput)=\\\"addEvent('input', $event)\\\"\\n                        (dateChange)=\\\"addEvent('change', $event)\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"pickerevent\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #pickerevent></mat-datepicker>\\n                </mat-form-field>\\n\\n                <div class=\\\"example-events\\\">\\n                    <div *ngFor=\\\"let e of events\\\">{{e}}</div>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                <mat-card-title>Setting the locale code</mat-card-title>\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Different locale\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #dp></mat-datepicker>\\n                </mat-form-field>\\n\\n                <button mat-button (click)=\\\"french()\\\">Dynamically switch to French</button>\\n\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\"","module.exports = \"md-calendar {\\n  width: 300px; }\\n\\n.example-events {\\n  width: 400px;\\n  height: 200px;\\n  border: 1px solid #555;\\n  overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQVksRUFDYjs7QUFHRDtFQUNFLGFBQVk7RUFDWixjQUFhO0VBQ2IsdUJBQXNCO0VBQ3RCLGVBQWMsRUFDZiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1kLWNhbGVuZGFyIHtcbiAgd2lkdGg6IDMwMHB4O1xufVxuXG5cbi5leGFtcGxlLWV2ZW50cyB7XG4gIHdpZHRoOiA0MDBweDtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzU1NTtcbiAgb3ZlcmZsb3c6IGF1dG87XG59Il19 */\"","import { Component } from '@angular/core';\nimport { DateAdapter } from '@angular/material';\nimport { FormControl } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss']\n})\nexport class DatepickerComponent {\n  // this is for the start date\n  startDate = new Date(1990, 0, 1);\n\n  minDate = new Date(2000, 0, 1);\n  maxDate = new Date(2020, 0, 1);\n\n  // Datepicker selected value\n  date = new FormControl(new Date());\n  serializedDate = new FormControl(new Date().toISOString());\n\n  // Datepicker input and change event\n\n  events: string[] = [];\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    this.events.push(`${type}: ${event.value}`);\n  }\n\n  myFilter = (d: Date): boolean => {\n    const day = d.getDay();\n    // Prevent Saturday and Sunday from being selected.\n    return day !== 0 && day !== 6;\n    // tslint:disable-next-line:semicolon\n  };\n\n  constructor(private adapter: DateAdapter<any>) {}\n\n  french() {\n    this.adapter.setLocale('fr');\n  }\n}\n","module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>Default Editor</mat-card-title>\\n        <mat-card-subtitle>quill editor with angular and TypeScript. ngx-quill is the new angular 2 and beyond implementation of ngQuill.\\n            <a\\n                href=\\\"https://github.com/KillerCodeMonkey/ngx-quill\\\" target=\\\"_blank\\\">Official website</a>\\n        </mat-card-subtitle>\\n        <quill-editor [style]=\\\"{height: '200px'}\\\"></quill-editor>\\n    </mat-card-content>\\n</mat-card>\\n<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>Bubble Editor</mat-card-title>\\n        <quill-editor theme=\\\"bubble\\\" placeholder=\\\"Bubble editor\\\" bounds=\\\".mat-drawer-content\\\" [style]=\\\"{border: '1px solid #dadada'}\\\"></quill-editor>\\n    </mat-card-content>\\n</mat-card>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL2VkaXRvci9lZGl0b3IuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\nexport class EditorComponent {\n  subtitle: string;\n\n  constructor() {\n    this.subtitle = 'This is some text within a card block.';\n  }\n}\n","module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>Angular2 File Upload</mat-card-title>\\n        <section id=\\\"file-upload\\\">\\n\\n            <div fxLayout=\\\"row wrap\\\">\\n                <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\" [uploader]=\\\"uploader\\\" class=\\\"py-5 mb-3 text-center font-medium-5 text-uppercase grey my-drop-zone\\\">\\n                        Base dropzone\\n                    </div>\\n                </div>\\n                <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <div ng2FileDrop [ngClass]=\\\"{'another-file-over-class': hasAnotherDropZoneOver}\\\" (fileOver)=\\\"fileOverAnother($event)\\\" [uploader]=\\\"uploader\\\"\\n                        class=\\\"py-5 mb-3 text-center font-medium-5 text-uppercase grey my-drop-zone\\\">\\n                        Another dropzone\\n                    </div>\\n                </div>\\n            </div>\\n            <div fxLayout=\\\"row wrap\\\">\\n                <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                    <h4>Select files</h4>\\n                    <div>Multiple</div>\\n                    <label class=\\\"custom-file\\\">\\n                        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple class=\\\"custom-file-input\\\">\\n                        <span class=\\\"custom-file-control\\\"></span>\\n                    </label>\\n\\n                    <div class=\\\"m-t-30\\\">Single</div>\\n                    <label class=\\\"custom-file\\\">\\n                        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" class=\\\"custom-file-input\\\">\\n                        <span class=\\\"custom-file-control\\\"></span>\\n                    </label>\\n                </div>\\n\\n                <div fxFlex.gt-sm=\\\"75\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                    <h4>Upload queue</h4>\\n                    <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th width=\\\"50%\\\">Name</th>\\n                                <th>Size</th>\\n                                <th>Progress</th>\\n                                <th>Status</th>\\n                                <th>Actions</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                                <td>\\n                                    <strong>{{ item?.file?.name }}</strong>\\n                                </td>\\n                                <td *ngIf=\\\"uploader.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n                                <td *ngIf=\\\"uploader.isHTML5\\\">\\n                                    <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\n                                        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\n                                    </div>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <span *ngIf=\\\"item.isSuccess\\\">\\n                                        <i class=\\\"fa fa-ok\\\"></i>\\n                                    </span>\\n                                    <span *ngIf=\\\"item.isCancel\\\">\\n                                        <i class=\\\"fa fa-ban\\\"></i>\\n                                    </span>\\n                                    <span *ngIf=\\\"item.isError\\\">\\n                                        <i class=\\\"fa fa-remove\\\"></i>\\n                                    </span>\\n                                </td>\\n                                <td nowrap>\\n                                    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\n                                        <span class=\\\"fa fa-upload\\\"></span> Upload\\n                                    </button>\\n                                    <button type=\\\"button\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\n                                        <span class=\\\"fa fa-ban\\\"></span> Cancel\\n                                    </button>\\n                                    <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"item.remove()\\\">\\n                                        <span class=\\\"fa fa-trash\\\"></span> Remove\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n\\n                    <div>\\n                        <p>Queue progress:\\n                            <mat-progress-bar mode=\\\"determinate\\\" [value]=\\\"uploader.progress\\\" class=\\\"m-t-10\\\"></mat-progress-bar>\\n                        </p>\\n                        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                            <span class=\\\"fa fa-upload\\\"></span> Upload all\\n                        </button>\\n                        <button type=\\\"button\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n                            <span class=\\\"fa fa-ban\\\"></span> Cancel all\\n                        </button>\\n                        <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n                            <span class=\\\"fa fa-trash\\\"></span> Remove all\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </section>\\n    </mat-card-content>\\n</mat-card>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload/ng2-file-upload';\n\nconst URL = 'https://evening-anchorage-3159.herokuapp.com/api/';\n\n@Component({\n  templateUrl: './upload.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./upload.scss']\n})\nexport class UploadComponent {\n  uploader: FileUploader = new FileUploader({\n    url: URL,\n    isHTML5: true\n  });\n  hasBaseDropZoneOver = false;\n  hasAnotherDropZoneOver = false;\n\n  // Angular2 File Upload\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  fileOverAnother(e: any): void {\n    this.hasAnotherDropZoneOver = e;\n  }\n}\n","module.exports = \".my-drop-zone {\\n  border: dotted 2px #dadada;\\n  background-color: #fff !important;\\n  min-height: 80px;\\n  line-height: 80px; }\\n\\n.nv-file-over {\\n  border: dotted 2px red; }\\n\\n/* Default class applied to drop zones on over */\\n\\n.another-file-over-class {\\n  border: dotted 2px green; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL2ZpbGUtdXBsb2FkL3VwbG9hZC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMkJBQTBCO0VBQzFCLGtDQUFpQztFQUNqQyxpQkFBZ0I7RUFDaEIsa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsdUJBQXNCLEVBQ3ZCOztBQUFDLGlEQUFpRDs7QUFDbkQ7RUFDRSx5QkFBd0IsRUFDekIiLCJmaWxlIjoic3JjL2FwcC9mb3Jtcy9maWxlLXVwbG9hZC91cGxvYWQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5teS1kcm9wLXpvbmUge1xuICBib3JkZXI6IGRvdHRlZCAycHggI2RhZGFkYTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xuICBtaW4taGVpZ2h0OiA4MHB4O1xuICBsaW5lLWhlaWdodDogODBweDtcbn1cbi5udi1maWxlLW92ZXIge1xuICBib3JkZXI6IGRvdHRlZCAycHggcmVkO1xufSAvKiBEZWZhdWx0IGNsYXNzIGFwcGxpZWQgdG8gZHJvcCB6b25lcyBvbiBvdmVyICovXG4uYW5vdGhlci1maWxlLW92ZXItY2xhc3Mge1xuICBib3JkZXI6IGRvdHRlZCAycHggZ3JlZW47XG59XG4iXX0= */\"","module.exports = \"<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n  <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Form Basic Layouts</mat-card-title>\\n        <!-- ============================================================== -->\\n        <!-- column -->\\n        <!-- ============================================================== -->\\n        <form class=\\\"basic-form\\\">\\n          <div fxLayout=\\\"row wrap\\\">\\n            <!-- column -->\\n            <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Some text value\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"EmailId\\\" type=\\\"email\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n              <mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\n                <mat-label>Both a label and a placeholder</mat-label>\\n                <input matInput placeholder=\\\"Simple placeholder\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n              <mat-form-field hintLabel=\\\"Max 10 characters\\\">\\n                <input matInput #input maxlength=\\\"10\\\" placeholder=\\\"Enter some input\\\">\\n                <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/10</mat-hint>\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Select\\\">\\n                  <mat-option value=\\\"option\\\">Option</mat-option>\\n                  <mat-option value=\\\"option\\\">Option2</mat-option>\\n                  <mat-option value=\\\"option\\\">Option3</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"m-b-20\\\">\\n              <input class=\\\"form-control b-b\\\" placeholder=\\\"file\\\" type=\\\"file\\\">\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n              <mat-form-field [hideRequiredMarker]=\\\"options.value.hideRequired\\\" [floatLabel]=\\\"options.value.floatLabel\\\">\\n                <mat-select required>\\n                  <mat-option>-- None --</mat-option>\\n                  <mat-option value=\\\"option\\\">Option</mat-option>\\n                </mat-select>\\n                <mat-placeholder>\\n                  <mat-icon>favorite</mat-icon>\\n                  <b> Fancy</b>\\n                  <i> placeholder</i>\\n                </mat-placeholder>\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"m-t-10 m-b-10\\\">\\n              <mat-checkbox color=\\\"primary\\\" class=\\\"m-r-10\\\">Checkbox</mat-checkbox>\\n              <mat-checkbox color=\\\"warn\\\" class=\\\"m-r-10\\\">Checkbox</mat-checkbox>\\n              <mat-checkbox color=\\\"accent\\\">Checkbox</mat-checkbox>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"m-t-20 m-b-20\\\">\\n              <mat-radio-group>\\n                <mat-radio-button color=\\\"primary\\\" value=\\\"auto\\\" class=\\\"m-r-10\\\">Auto</mat-radio-button>\\n                <mat-radio-button color=\\\"warn\\\" value=\\\"always\\\" class=\\\"m-r-10\\\">Always</mat-radio-button>\\n                <mat-radio-button color=\\\"accent\\\" value=\\\"never\\\">Never</mat-radio-button>\\n              </mat-radio-group>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n              <mat-form-field>\\n                <textarea matInput placeholder=\\\"Textarea\\\"></textarea>\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n              <button mat-raised-button color=\\\"primary\\\">Submit</button>\\n            </div>\\n          </div>\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n<div fxLayout=\\\"row wrap\\\">\\n  <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Form field with error messages</mat-card-title>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\n          <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n<div fxLayout=\\\"row wrap\\\">\\n  <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Form field with prefix &amp; suffix</mat-card-title>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Amount\\\" type=\\\"number\\\" class=\\\"example-right-align\\\">\\n          <span matPrefix>$&nbsp;</span>\\n          <span matSuffix>.00</span>\\n        </mat-form-field>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n  <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Form with grid</mat-card-title>\\n        <mat-card-subtitle>use this class\\n          <code>.row</code> to the fxLayout=\\\"row\\\" and\\n          <code>p-10</code> to the fxFlex div</mat-card-subtitle>\\n        <!-- ============================================================== -->\\n        <!-- column -->\\n        <!-- ============================================================== -->\\n        <form class=\\\"basic-form\\\">\\n          <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 25\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 25\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 25\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 25\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 33.33\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 33.33\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 33.33\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 50\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 50\\\">\\n              </mat-form-field>\\n            </div>\\n            <!-- column -->\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"grid 100\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 90%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL2Zvcm0tbGF5b3V0cy9mb3JtLWxheW91dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFnQjtFQUNoQixpQkFBZ0I7RUFDaEIsWUFBVyxFQUNaOztBQUVEO0VBQ0UsV0FBVSxFQUNYIiwiZmlsZSI6InNyYy9hcHAvZm9ybXMvZm9ybS1sYXlvdXRzL2Zvcm0tbGF5b3V0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybSB7XG4gIG1pbi13aWR0aDogMTUwcHg7XG4gIG1heC13aWR0aDogNTAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDkwJTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-formlayout',\n  templateUrl: './form-layout.component.html',\n  styleUrls: ['./form-layout.component.scss']\n})\nexport class FormLayoutComponent {\n  options: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto'\n    });\n  }\n  // For form validator\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  // Sufix and prefix\n  hide = true;\n\n  getErrorMessage() {\n    return this.email.hasError('required')\n      ? 'You must enter a value'\n      : this.email.hasError('email')\n        ? 'Not a valid email'\n        : '';\n  }\n}\n","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Form validation</mat-card-title>\\n    <mat-card-subtitle>Angular2 custom validation here is the\\n      <a href=\\\"https://github.com/yuyang041060120/ng2-validation\\\" target=\\\"_blank\\\">official site</a>\\n    </mat-card-subtitle>\\n    <form [formGroup]=\\\"form\\\">\\n\\n      <div fxLayout=\\\"row wrap\\\">\\n        <div class=\\\"p-10\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"First name\\\" [formControl]=\\\"form.controls['fname']\\\">\\n          </mat-form-field>\\n          <mat-hint *ngIf=\\\"form.controls['fname'].hasError('required') && form.controls['fname'].touched\\\" class=\\\"text-danger font-14\\\">You must include a first name.</mat-hint>\\n          <mat-hint *ngIf=\\\"form.controls['fname'].hasError('minlength') && form.controls['fname'].touched\\\" class=\\\"text-danger font-14\\\">Your first name must be at least 5 characters long.</mat-hint>\\n          <mat-hint *ngIf=\\\"form.controls['fname'].hasError('maxlength') && form.controls['fname'].touched\\\" class=\\\"text-danger font-14\\\">Your first name cannot exceed 10 characters.</mat-hint>\\n        </div>\\n\\n\\n        <div class=\\\"p-10\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Email Id\\\" [formControl]=\\\"form.controls['email']\\\" type=\\\"email\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"form.controls['email'].hasError('required') && form.controls['email'].touched\\\" class=\\\"text-danger font-14\\\">You must include an email address.</small>\\n          <small *ngIf=\\\"form.controls['email'].errors?.email && form.controls['email'].touched\\\" class=\\\"text-danger font-14\\\">You must include a valid email address.</small>\\n        </div>\\n\\n        <div class=\\\"p-10\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Website\\\" [formControl]=\\\"form.controls['url']\\\" type=\\\"url\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"form.controls['url'].hasError('required') && form.controls['url'].touched\\\" class=\\\"text-danger font-14\\\">You must include a web address.</small>\\n          <small *ngIf=\\\"form.controls['url'].errors?.url && form.controls['url'].touched\\\" class=\\\"text-danger font-14\\\">You must include a valid web address.</small>\\n        </div>\\n\\n        <div class=\\\"p-10\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field>\\n            <input matInput [matDatepicker]=\\\"picker\\\" [formControl]=\\\"form.controls['date']\\\" placeholder=\\\"Choose a date\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n          </mat-form-field>\\n          <mat-hint *ngIf=\\\"form.controls['date'].hasError('required') && form.controls['date'].touched\\\" class=\\\"text-danger font-14\\\">You must include a date.</mat-hint>\\n          <mat-hint *ngIf=\\\"form.controls['date'].errors?.date && form.controls['date'].touched\\\" class=\\\"text-danger font-14\\\">You must include a valid date.</mat-hint>\\n        </div>\\n\\n        <div class=\\\"p-10\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Number range (between 5 and 9)\\\" [formControl]=\\\"form.controls['range']\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"form.controls['range'].hasError('required') && form.controls['range'].touched\\\" class=\\\"text-danger font-14\\\">You must enter a number.</small>\\n          <small *ngIf=\\\"form.controls['range'].errors?.range && form.controls['range'].touched\\\" class=\\\"text-danger font-14\\\">Number should be between 5 and 9.</small>\\n        </div>\\n        <div class=\\\"p-10\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Phone number\\\" [formControl]=\\\"form.controls['phone']\\\" type=\\\"text\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"form.controls['phone'].hasError('required') && form.controls['phone'].touched\\\" class=\\\"text-danger font-14\\\">You must include phone number.</small>\\n          <small *ngIf=\\\"form.controls['phone'].errors?.phone && form.controls['phone'].touched\\\" class=\\\"text-danger font-14\\\">You must include a valid phone number.</small>\\n        </div>\\n\\n        <div class=\\\"p-10\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Password\\\" [formControl]=\\\"form.controls['password']\\\" type=\\\"password\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"form.controls['password'].hasError('required') && form.controls['password'].touched\\\" class=\\\"text-danger font-14\\\">You must include password.</small>\\n        </div>\\n\\n        <div class=\\\"p-10\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Confirm Password\\\" [formControl]=\\\"form.controls['confirmPassword']\\\" type=\\\"password\\\">\\n          </mat-form-field>\\n          <small *ngIf=\\\"form.controls['confirmPassword'].hasError('required') && form.controls['confirmPassword'].touched\\\" class=\\\"text-danger font-14\\\">You must include confirm password.</small>\\n          <small *ngIf=\\\"form.controls['confirmPassword'].errors?.equalTo\\\" class=\\\"text-danger font-14\\\">Passwords do not math.</small>\\n        </div>\\n\\n        <div class=\\\"p-10\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n          <label class=\\\"m-r-20\\\">Gender :</label>\\n          <mat-radio-group [formControl]=\\\"form.controls['gender']\\\">\\n            <mat-radio-button value=\\\"male\\\" class=\\\"m-r-10\\\">Male</mat-radio-button>\\n            <mat-radio-button value=\\\"female\\\">Female</mat-radio-button>\\n          </mat-radio-group>\\n          <small *ngIf=\\\"!form.controls['gender'].valid && form.controls['gender'].touched\\\" class=\\\"mat-text-warn\\\">You must select a gender.</small>\\n        </div>\\n      </div>\\n\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL2Zvcm0tdmFsaWRhdGlvbi9mb3JtLXZhbGlkYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\nconst password = new FormControl('', Validators.required);\nconst confirmPassword = new FormControl('', CustomValidators.equalTo(password));\n\n@Component({\n  selector: 'app-form-validation',\n  templateUrl: './form-validation.component.html',\n  styleUrls: ['./form-validation.component.scss']\n})\nexport class FormValidationComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n  ngOnInit() {\n    this.form = this.fb.group({\n      fname: [\n        null,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(10)\n        ])\n      ],\n      email: [\n        null,\n        Validators.compose([Validators.required, CustomValidators.email])\n      ],\n      range: [\n        null,\n        Validators.compose([\n          Validators.required,\n          CustomValidators.range([5, 9])\n        ])\n      ],\n      url: [\n        null,\n        Validators.compose([Validators.required, CustomValidators.url])\n      ],\n      date: [\n        null,\n        Validators.compose([Validators.required, CustomValidators.date])\n      ],\n      phone: [\n        null,\n        Validators.compose([Validators.required, CustomValidators.phone('IN')])\n      ],\n      gender: [null, Validators.required],\n      password: password,\n      confirmPassword: confirmPassword\n    });\n  }\n}\n","module.exports = \"<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Simple form field</mat-card-title>\\n\\n\\t\\t<div>\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<input matInput placeholder=\\\"Input\\\">\\n\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<textarea matInput placeholder=\\\"Textarea\\\"></textarea>\\n\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<mat-select placeholder=\\\"Select\\\">\\n\\t\\t\\t\\t\\t<mat-option value=\\\"option\\\">Option</mat-option>\\n\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Form field with label</mat-card-title>\\n\\n\\t\\t<div class=\\\"m-t-20\\\">\\n\\t\\t\\t<form [formGroup]=\\\"options\\\">\\n\\t\\t\\t\\t<mat-checkbox formControlName=\\\"hideRequired\\\">Hide required marker</mat-checkbox>\\n\\t\\t\\t\\t<div class=\\\"m-t-20 m-b-30\\\">\\n\\t\\t\\t\\t\\t<label>Float label: </label>\\n\\t\\t\\t\\t\\t<mat-radio-group formControlName=\\\"floatLabel\\\">\\n\\t\\t\\t\\t\\t\\t<mat-radio-button value=\\\"auto\\\">Auto</mat-radio-button>\\n\\t\\t\\t\\t\\t\\t<mat-radio-button value=\\\"always\\\">Always</mat-radio-button>\\n\\t\\t\\t\\t\\t\\t<mat-radio-button value=\\\"never\\\">Never</mat-radio-button>\\n\\t\\t\\t\\t\\t</mat-radio-group>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\n\\t\\t\\t<mat-form-field [hideRequiredMarker]=\\\"options.value.hideRequired\\\" [floatLabel]=\\\"options.value.floatLabel\\\">\\n\\t\\t\\t\\t<input matInput placeholder=\\\"Simple placeholder\\\" required>\\n\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t<mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\n\\t\\t\\t\\t<mat-label>Both a label and a placeholder</mat-label>\\n\\t\\t\\t\\t<input matInput placeholder=\\\"Simple placeholder\\\">\\n\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t<mat-form-field [hideRequiredMarker]=\\\"options.value.hideRequired\\\" [floatLabel]=\\\"options.value.floatLabel\\\">\\n\\t\\t\\t\\t<mat-select required>\\n\\t\\t\\t\\t\\t<mat-option>-- None --</mat-option>\\n\\t\\t\\t\\t\\t<mat-option value=\\\"option\\\">Option</mat-option>\\n\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t<mat-label>\\n\\t\\t\\t\\t\\t<mat-icon>favorite</mat-icon> <b> Fancy</b> <i> label</i>\\n\\t\\t\\t\\t</mat-label>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\n\\n\\n\\t</mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Form field with hints</mat-card-title>\\n\\n\\t\\t<div>\\n\\t\\t\\t<mat-form-field hintLabel=\\\"Max 10 characters\\\">\\n\\t\\t\\t\\t<input matInput #input maxlength=\\\"10\\\" placeholder=\\\"Enter some input\\\">\\n\\t\\t\\t\\t<mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/10</mat-hint>\\n\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<mat-select placeholder=\\\"Select me\\\">\\n\\t\\t\\t\\t\\t<mat-option value=\\\"option\\\">Option</mat-option>\\n\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t<mat-hint align=\\\"end\\\">Here's the dropdown arrow ^</mat-hint>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\n\\t</mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Form field with error messages</mat-card-title>\\n\\n\\t\\t<div>\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<input matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\n\\t\\t\\t\\t<mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Form field with prefix & suffix</mat-card-title>\\n\\n\\t\\t<div>\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n\\t\\t\\t\\t<mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<input matInput placeholder=\\\"Amount\\\" type=\\\"number\\\" class=\\\"example-right-align\\\">\\n\\t\\t\\t\\t<span matPrefix>$&nbsp;</span>\\n\\t\\t\\t\\t<span matSuffix>.00</span>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\n\\t</mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Form field theming</mat-card-title>\\n\\n\\t\\t<form class=\\\"m-t-20\\\" [formGroup]=\\\"options\\\" [style.fontSize.px]=\\\"getFontSize()\\\">\\n\\t\\t\\t<mat-form-field [color]=\\\"options.value.color\\\">\\n\\t\\t\\t\\t<mat-select placeholder=\\\"Color\\\" formControlName=\\\"color\\\">\\n\\t\\t\\t\\t\\t<mat-option value=\\\"primary\\\">Primary</mat-option>\\n\\t\\t\\t\\t\\t<mat-option value=\\\"accent\\\">Accent</mat-option>\\n\\t\\t\\t\\t\\t<mat-option value=\\\"warn\\\">Warn</mat-option>\\n\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t<mat-form-field [color]=\\\"options.value.color\\\">\\n\\t\\t\\t\\t<input matInput type=\\\"number\\\" placeholder=\\\"Font size (px)\\\" formControlName=\\\"fontSize\\\" min=\\\"10\\\">\\n\\t\\t\\t\\t<mat-error *ngIf=\\\"options.get('fontSize')?.invalid\\\">Min size: 10px</mat-error>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</form>\\n\\t</mat-card-content>\\n</mat-card>\"","module.exports = \".example-right-align {\\n  text-align: right; }\\n\\ninput.example-right-align::-webkit-outer-spin-button,\\ninput.example-right-align::-webkit-inner-spin-button {\\n  display: none; }\\n\\ninput.example-right-align {\\n  -moz-appearance: textfield; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL2Zvcm1maWVsZC9mb3JtZmllbGQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBaUIsRUFDbEI7O0FBRUQ7O0VBRUUsY0FBYSxFQUNkOztBQUVEO0VBQ0UsMkJBQTBCLEVBQzNCIiwiZmlsZSI6InNyYy9hcHAvZm9ybXMvZm9ybWZpZWxkL2Zvcm1maWVsZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXJpZ2h0LWFsaWduIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbmlucHV0LmV4YW1wbGUtcmlnaHQtYWxpZ246Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24sXG5pbnB1dC5leGFtcGxlLXJpZ2h0LWFsaWduOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuaW5wdXQuZXhhbXBsZS1yaWdodC1hbGlnbiB7XG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufVxuIl19 */\"","import { Component } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-formfield',\n  templateUrl: './formfield.component.html',\n  styleUrls: ['./formfield.component.scss']\n})\nexport class FormfieldComponent {\n  options: FormGroup;\n\n  hide = true;\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto',\n      color: 'primary',\n      fontSize: [16, Validators.min(10)]\n    });\n  }\n\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  getErrorMessage() {\n    return this.email.hasError('required')\n      ? 'You must enter a value'\n      : this.email.hasError('email')\n        ? 'Not a valid email'\n        : '';\n  }\n\n  getFontSize() {\n    return Math.max(10, this.options.value.fontSize);\n  }\n}\n","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormRoutes } from './forms.routing';\nimport { QuillModule } from 'ngx-quill';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { RadiobuttonComponent } from './radiobutton/radiobutton.component';\nimport { FormfieldComponent } from './formfield/formfield.component';\nimport { InputfieldComponent } from './input/input.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { FormLayoutComponent } from './form-layouts/form-layout.component';\nimport { PaginatiorComponent } from './paginator/paginator.component';\nimport { SortheaderComponent } from './sortheader/sortheader.component';\nimport { SelectfieldComponent } from './select/select.component';\nimport { TreeComponent } from './tree/tree.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { FormValidationComponent } from './form-validation/form-validation.component';\nimport { UploadComponent } from './file-upload/upload.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { MultiselectComponent } from './multiselect/multiselect.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(FormRoutes),\n    DemoMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    QuillModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    MatTreeModule,\n    MatDatepickerModule,\n    NgMultiSelectDropDownModule.forRoot()\n  ],\n  declarations: [\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    FormfieldComponent,\n    DatepickerComponent,\n    FormLayoutComponent,\n    InputfieldComponent,\n    SortheaderComponent,\n    SelectfieldComponent,\n    TreeComponent,\n    EditorComponent,\n    PaginatiorComponent,\n    FormValidationComponent,\n    UploadComponent,\n    WizardComponent,\n    MultiselectComponent\n  ]\n})\nexport class FormModule {}\n","import { Routes } from '@angular/router';\n\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { RadiobuttonComponent } from './radiobutton/radiobutton.component';\nimport { FormfieldComponent } from './formfield/formfield.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { FormLayoutComponent } from './form-layouts/form-layout.component';\nimport { PaginatiorComponent } from './paginator/paginator.component';\nimport { SortheaderComponent } from './sortheader/sortheader.component';\nimport { SelectfieldComponent } from './select/select.component';\nimport { InputfieldComponent } from './input/input.component';\nimport { TreeComponent } from './tree/tree.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { FormValidationComponent } from './form-validation/form-validation.component';\nimport { UploadComponent } from './file-upload/upload.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { MultiselectComponent } from './multiselect/multiselect.component';\n\nexport const FormRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'autocomplete',\n        component: AutocompleteComponent\n      },\n      {\n        path: 'checkbox',\n        component: CheckboxComponent\n      },\n      {\n        path: 'radiobutton',\n        component: RadiobuttonComponent\n      },\n      {\n        path: 'datepicker',\n        component: DatepickerComponent\n      },\n      {\n        path: 'formfield',\n        component: FormfieldComponent\n      },\n      {\n        path: 'input',\n        component: InputfieldComponent\n      },\n      {\n        path: 'select',\n        component: SelectfieldComponent\n      },\n      {\n        path: 'tree',\n        component: TreeComponent\n      },\n      {\n        path: 'paginator',\n        component: PaginatiorComponent\n      },\n      {\n        path: 'form-layout',\n        component: FormLayoutComponent\n      },\n      {\n        path: 'editor',\n        component: EditorComponent\n      },\n      {\n        path: 'form-validation',\n        component: FormValidationComponent\n      },\n      {\n        path: 'file-upload',\n        component: UploadComponent\n      },\n      {\n        path: 'sortheader',\n        component: SortheaderComponent\n      },\n      {\n        path: 'wizard',\n        component: WizardComponent\n      },\n      {\n        path: 'multiselect',\n        component: MultiselectComponent\n      }\n    ]\n  }\n];\n","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Basic Inputs</mat-card-title>\\n\\n    <form class=\\\"m-t-20\\\">\\n\\t  <mat-form-field class=\\\"example-full-width\\\">\\n\\t    <input matInput placeholder=\\\"Favorite food\\\" value=\\\"Sushi\\\">\\n\\t  </mat-form-field>\\n\\n\\t  <mat-form-field class=\\\"example-full-width\\\">\\n\\t    <textarea matInput placeholder=\\\"Leave a comment\\\"></textarea>\\n\\t  </mat-form-field>\\n\\t</form>\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Input with a custom ErrorStateMatcher</mat-card-title>\\n\\n    <form>\\n\\t  <mat-form-field class=\\\"example-full-width\\\">\\n\\t    <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\"\\n\\t           [errorStateMatcher]=\\\"matcher\\\">\\n\\t    <mat-hint>Errors appear instantly!</mat-hint>\\n\\t    <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n\\t      Please enter a valid email address\\n\\t    </mat-error>\\n\\t    <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n\\t      Email is <strong>required</strong>\\n\\t    </mat-error>\\n\\t  </mat-form-field>\\n\\t</form>\\n\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Auto-resizing textarea</mat-card-title>\\n\\n    <mat-form-field class=\\\"m-t-20\\\">\\n\\t  <mat-label>Font size</mat-label>\\n\\t  <mat-select #fontSize value=\\\"16px\\\" (selectionChange)=\\\"triggerResize()\\\">\\n\\t    <mat-option value=\\\"10px\\\">10px</mat-option>\\n\\t    <mat-option value=\\\"12px\\\">12px</mat-option>\\n\\t    <mat-option value=\\\"14px\\\">14px</mat-option>\\n\\t    <mat-option value=\\\"16px\\\">16px</mat-option>\\n\\t    <mat-option value=\\\"18px\\\">18px</mat-option>\\n\\t    <mat-option value=\\\"20px\\\">20px</mat-option>\\n\\t  </mat-select>\\n\\t</mat-form-field>\\n\\n\\t<mat-form-field [style.fontSize]=\\\"fontSize.value\\\">\\n\\t  <mat-label>Autosize textarea</mat-label>\\n\\t  <textarea matInput\\n\\t            cdkTextareaAutosize\\n\\t            #autosize=\\\"cdkTextareaAutosize\\\"\\n\\t            cdkAutosizeMinRows=\\\"2\\\"\\n\\t            cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n\\t</mat-form-field>\\n\\n\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Input with a clear button</mat-card-title>\\n\\n    <mat-form-field class=\\\"example-form-field m-t-20\\\">\\n\\t  <input matInput type=\\\"text\\\" placeholder=\\\"Clearable input\\\" [(ngModel)]=\\\"value\\\">\\n\\t  <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"value=''\\\">\\n\\t    <mat-icon>close</mat-icon>\\n\\t  </button>\\n\\t</mat-form-field>\\n\\n\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Input with error messages</mat-card-title>\\n\\n    <form>\\n\\t  <mat-form-field class=\\\"example-full-width\\\">\\n\\t    <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\">\\n\\t    <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n\\t      Please enter a valid email address\\n\\t    </mat-error>\\n\\t    <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n\\t      Email is <strong>required</strong>\\n\\t    </mat-error>\\n\\t  </mat-form-field>\\n\\t</form>\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Inputs in a form</mat-card-title>\\n\\n   \\t<form class=\\\"m-t-20\\\">\\n\\t  <mat-form-field class=\\\"example-full-width\\\">\\n\\t    <input matInput placeholder=\\\"Company (disabled)\\\" disabled value=\\\"Google\\\">\\n\\t  </mat-form-field>\\n\\n\\t  <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n\\t    <td><mat-form-field class=\\\"example-full-width\\\">\\n\\t      <input matInput placeholder=\\\"First name\\\">\\n\\t    </mat-form-field></td>\\n\\t    <td><mat-form-field class=\\\"example-full-width\\\">\\n\\t      <input matInput placeholder=\\\"Long Last Name That Will Be Truncated\\\">\\n\\t    </mat-form-field></td>\\n\\t  </tr></table>\\n\\n\\t  <p>\\n\\t    <mat-form-field class=\\\"example-full-width\\\">\\n\\t      <textarea matInput placeholder=\\\"Address\\\">1600 Amphitheatre Pkwy</textarea>\\n\\t    </mat-form-field>\\n\\t    <mat-form-field class=\\\"example-full-width\\\">\\n\\t      <textarea matInput placeholder=\\\"Address 2\\\"></textarea>\\n\\t    </mat-form-field>\\n\\t  </p>\\n\\n\\t  <mat-form-field class=\\\"\\\">\\n\\t      <input matInput placeholder=\\\"City\\\">\\n\\t    </mat-form-field><mat-form-field class=\\\"\\\">\\n\\t      <input matInput placeholder=\\\"State\\\">\\n\\t    </mat-form-field><mat-form-field class=\\\"\\\">\\n\\t      <input matInput #postalCode maxlength=\\\"5\\\" placeholder=\\\"Postal Code\\\" value=\\\"94043\\\">\\n\\t      <mat-hint align=\\\"end\\\">{{postalCode.value.length}} / 5</mat-hint>\\n\\t    </mat-form-field>\\n\\t  \\n\\t</form>\\n\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Input with hints</mat-card-title>\\n\\n    <form>\\n\\n\\t  <mat-form-field class=\\\"example-full-width\\\">\\n\\t    <input matInput #message maxlength=\\\"256\\\" placeholder=\\\"Message\\\">\\n\\t    <mat-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong> </mat-hint>\\n\\t    <mat-hint align=\\\"end\\\">{{message.value.length}} / 256</mat-hint>\\n\\t  </mat-form-field>\\n\\t  \\n\\t</form>\\n\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Inputs with prefixes and suffixes</mat-card-title>\\n\\n    <form>\\n\\n\\t  <mat-form-field class=\\\"example-full-width\\\">\\n\\t    <span matPrefix>+1 &nbsp;</span>\\n\\t    <input type=\\\"tel\\\" matInput placeholder=\\\"Telephone\\\">\\n\\t    <mat-icon matSuffix>mode_edit</mat-icon>\\n\\t  </mat-form-field>\\n\\t  \\n\\t</form>\\n\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL2lucHV0L2lucHV0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWdCO0VBQ2hCLGlCQUFnQjtFQUNoQixZQUFXLEVBQ1oiLCJmaWxlIjoic3JjL2FwcC9mb3Jtcy9pbnB1dC9pbnB1dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWZvcm0ge1xuICBtaW4td2lkdGg6IDE1MHB4O1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\"","import { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { Component, OnInit, NgZone, ViewChild } from '@angular/core';\nimport {\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n  Validators\n} from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { take } from 'rxjs/operators';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(\n      control &&\n      control.invalid &&\n      (control.dirty || control.touched || isSubmitted)\n    );\n  }\n}\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputfieldComponent {\n  value = 'Clear me';\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(private ngZone: NgZone) {}\n\n  @ViewChild('autosize')\n  autosize: CdkTextareaAutosize;\n\n  triggerResize() {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this.ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL211bHRpc2VsZWN0L211bHRpc2VsZWN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Multiple Select</mat-card-title>\\n    <ng-multiselect-dropdown\\n      [placeholder]=\\\"'custom placeholder'\\\"\\n      [data]=\\\"dropdownList\\\"\\n      [(ngModel)]=\\\"selectedItems\\\"\\n      [settings]=\\\"dropdownSettings\\\"\\n      (onSelect)=\\\"onItemSelect($event)\\\"\\n      (onSelectAll)=\\\"onSelectAll($event)\\\"\\n    >\\n    </ng-multiselect-dropdown>\\n    <div class=\\\"m-t-40\\\">\\n      <mat-card-title>Single Select</mat-card-title>\\n      <ng-multiselect-dropdown\\n         name=\\\"city\\\"\\n         [data]=\\\"cities\\\"\\n         [(ngModel)]=\\\"singleselectedItems\\\"\\n         [settings]=\\\"singledropdownSettings\\\"\\n         (onSelect)=\\\"onItemSelect($event)\\\">\\n      </ng-multiselect-dropdown>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\"","import { FormBuilder, FormGroup } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-multiselect',\n  templateUrl: './multiselect.component.html',\n  styleUrls: ['./multiselect.component.css']\n})\nexport class MultiselectComponent implements OnInit {\n\tdropdownList = [];\n  cities = [];\n  selectedItems = [];\n  singleselectedItems = [];\n  dropdownSettings = {};\n  singledropdownSettings = {};\n  closeDropdownSelection=false;\n  ngOnInit() {\n    this.dropdownList = [\n      { item_id: 1, item_text: 'Mumbai' },\n      { item_id: 2, item_text: 'Bangaluru' },\n      { item_id: 3, item_text: 'Pune' },\n      { item_id: 4, item_text: 'Navsari' },\n      { item_id: 5, item_text: 'New Delhi' } \n    ];\n    this.cities = ['Mumbai', 'New Delhi', 'Bangaluru', 'Pune', 'Navsari'];\n    this.selectedItems = [\n      { item_id: 3, item_text: 'Pune' },\n      { item_id: 4, item_text: 'Navsari' }\n    ];\n    this.singleselectedItems = ['Pune'];\n      this.singledropdownSettings = { \n          singleSelection: true,\n          selectAllText: 'Select All',\n          unSelectAllText: 'UnSelect All',\n          allowSearchFilter: true,\n          closeDropDownOnSelection: this.closeDropdownSelection\n      };\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n  }\n  onItemSelect(item: any) {\n    console.log(item);\n  }\n  onSelectAll(items: any) {\n    console.log(items);\n  }\n}","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Paginator</mat-card-title>\\n\\n    <mat-paginator [length]=\\\"100\\\"\\n\\t              [pageSize]=\\\"10\\\"\\n\\t              [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n\\t</mat-paginator>\\n\\n\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Paginator</mat-card-title>\\n\\n    <mat-form-field>\\n\\t  List length:\\n\\t  <input matInput [(ngModel)]=\\\"length\\\">\\n\\t</mat-form-field>\\n\\n\\t<mat-form-field>\\n\\t  Page size:\\n\\t  <input matInput [(ngModel)]=\\\"pageSize\\\">\\n\\t</mat-form-field>\\n\\t<mat-form-field>\\n\\t  Page size options:\\n\\t  <input matInput\\n\\t         [ngModel]=\\\"pageSizeOptions\\\"\\n\\t         (ngModelChange)=\\\"setPageSizeOptions($event)\\\">\\n\\t</mat-form-field>\\n\\n\\t<mat-paginator [length]=\\\"length\\\"\\n\\t              [pageSize]=\\\"pageSize\\\"\\n\\t              [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n\\t              (page)=\\\"pageEvent = $event\\\">\\n\\t</mat-paginator>\\n\\n\\t<div *ngIf=\\\"pageEvent\\\">\\n\\t  <h5>Page Change Event Properties</h5>\\n\\t  <div>List length: {{pageEvent.length}}</div>\\n\\t  <div>Page size: {{pageEvent.pageSize}}</div>\\n\\t  <div>Page index: {{pageEvent.pageIndex}}</div>\\n\\t</div>\\n\\n\\n\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \".example-radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.example-radio-button {\\n  margin: 5px; }\\n\\n.example-selected-value {\\n  margin: 15px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL3BhZ2luYXRvci9wYWdpbmF0b3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBb0I7RUFDcEIsdUJBQXNCLEVBQ3ZCOztBQUVEO0VBQ0UsWUFBVyxFQUNaOztBQUVEO0VBQ0UsZUFBYyxFQUNmIiwiZmlsZSI6InNyYy9hcHAvZm9ybXMvcGFnaW5hdG9yL3BhZ2luYXRvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXJhZGlvLWdyb3VwIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5leGFtcGxlLXJhZGlvLWJ1dHRvbiB7XG4gIG1hcmdpbjogNXB4O1xufVxuXG4uZXhhbXBsZS1zZWxlY3RlZC12YWx1ZSB7XG4gIG1hcmdpbjogMTVweCAwO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {PageEvent} from '@angular/material';\n\n@Component({\n  selector: 'app-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss']\n})\nexport class PaginatiorComponent {\n  // MatPaginator Inputs\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n  }\n}\n","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <h3 class=\\\"example-h2\\\">Radio Button configuration</h3>\\n\\n    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"favoriteSeason\\\">\\n      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let season of seasons\\\" [value]=\\\"season\\\">\\n        {{season}}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n    <div class=\\\"example-selected-value\\\">Your favorite season is: {{favoriteSeason}}</div>\\n\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \".example-radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.example-radio-button {\\n  margin: 5px; }\\n\\n.example-selected-value {\\n  margin: 15px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL3JhZGlvYnV0dG9uL3JhZGlvYnV0dG9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQW9CO0VBQ3BCLHVCQUFzQixFQUN2Qjs7QUFFRDtFQUNFLFlBQVcsRUFDWjs7QUFFRDtFQUNFLGVBQWMsRUFDZiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL3JhZGlvYnV0dG9uL3JhZGlvYnV0dG9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtcmFkaW8tZ3JvdXAge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmV4YW1wbGUtcmFkaW8tYnV0dG9uIHtcbiAgbWFyZ2luOiA1cHg7XG59XG5cbi5leGFtcGxlLXNlbGVjdGVkLXZhbHVlIHtcbiAgbWFyZ2luOiAxNXB4IDA7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-radiobutton',\n  templateUrl: './radiobutton.component.html',\n  styleUrls: ['./radiobutton.component.scss']\n})\nexport class RadiobuttonComponent {\n  favoriteSeason: string;\n  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n}\n","module.exports = \"<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title class=\\\"mb-3\\\">Basic Material select</mat-card-title>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"Favorite food\\\">\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\n\\t\\t\\t\\t\\t{{food.viewValue}}\\n\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-form-field>\\n\\t</mat-card-content>\\n</mat-card>\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title class=\\\"mb-3\\\">Basic Native select</mat-card-title>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<select matNativeControl required>\\n\\t\\t\\t\\t<option value=\\\"volvo\\\">Volvo</option>\\n\\t\\t\\t\\t<option value=\\\"saab\\\">Saab</option>\\n\\t\\t\\t\\t<option value=\\\"mercedes\\\">Mercedes</option>\\n\\t\\t\\t\\t<option value=\\\"audi\\\">Audi</option>\\n\\t\\t\\t</select>\\n\\t\\t</mat-form-field>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title class=\\\"mb-3\\\">Select with 2-way value binding</mat-card-title>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select [(value)]=\\\"selected1\\\">\\n\\t\\t\\t\\t<mat-option>None</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"option1\\\">Option 1</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"option2\\\">Option 2</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"option3\\\">Option 3</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-form-field>\\n\\n\\t\\t<p>You selected: {{selected1}}</p>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Select in a Form </mat-card-title>\\n\\t\\t<form>\\n\\t\\t\\t<h5 class=\\\"m-b-10\\\">Material Select</h5>\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<mat-select placeholder=\\\"Favorite food\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"food\\\">\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let food of foods1\\\" [value]=\\\"food.value\\\">\\n\\t\\t\\t\\t\\t\\t{{food.viewValue}}\\n\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<p> Selected food: {{selectedValue}} </p>\\n\\n\\t\\t\\t<h5 class=\\\"m-b-10\\\">Native html Select</h5>\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<select matNativeControl placeholder=\\\"Favorite car\\\" [(ngModel)]=\\\"selectedCar\\\" name=\\\"car\\\">\\n\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected></option>\\n\\t\\t\\t\\t\\t<option *ngFor=\\\"let car of cars\\\" [value]=\\\"car.value\\\">\\n\\t\\t\\t\\t\\t\\t{{car.viewValue}}\\n\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t</select>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<p> Selected car: {{selectedCar}} </p>\\n\\t\\t</form>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Select with form field features</mat-card-title>\\n\\t\\t<form>\\n\\t\\t\\t<h5 class=\\\"m-b-10\\\">Material Select</h5>\\n\\t\\t\\t<mat-form-field class=\\\"m-b-20\\\">\\n\\t\\t\\t\\t<mat-select placeholder=\\\"Favorite animal\\\" [formControl]=\\\"animalControl\\\" required>\\n\\t\\t\\t\\t\\t<mat-option>--</mat-option>\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let animal of animals\\\" [value]=\\\"animal\\\">\\n\\t\\t\\t\\t\\t\\t{{animal.name}}\\n\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t<mat-error *ngIf=\\\"animalControl.hasError('required')\\\">Please choose an animal</mat-error>\\n\\t\\t\\t\\t<mat-hint>{{animalControl.value?.sound}}</mat-hint>\\n\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t<h5 class=\\\"m-b-10\\\">Native html Select</h5>\\n\\t\\t\\t<mat-form-field class=\\\"m-t-15\\\">\\n\\t\\t\\t\\t<mat-label>Select your car (required)</mat-label>\\n\\t\\t\\t\\t<select matNativeControl required [formControl]=\\\"selectFormControl1\\\">\\n\\t\\t\\t\\t\\t<option label=\\\"--select something --\\\"></option>\\n\\t\\t\\t\\t\\t<option value=\\\"saab\\\">Saab</option>\\n\\t\\t\\t\\t\\t<option value=\\\"mercedes\\\">Mercedes</option>\\n\\t\\t\\t\\t\\t<option value=\\\"audi\\\">Audi</option>\\n\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t<mat-error *ngIf=\\\"selectFormControl1.hasError('required')\\\">\\n\\t\\t\\t\\t\\tThis field is required\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t<mat-hint>You can pick up your favorite car here</mat-hint>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</form>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Disabled select</mat-card-title>\\n\\t\\t<p>\\n\\t\\t\\t<mat-checkbox [formControl]=\\\"disableSelect\\\">Disable select</mat-checkbox>\\n\\t\\t</p>\\n\\t\\t<h5 class=\\\"m-b-10\\\">Material Select</h5>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"Choose an option\\\" [disabled]=\\\"disableSelect.value\\\">\\n\\t\\t\\t\\t<mat-option value=\\\"option1\\\">Option 1</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"option2\\\" disabled>Option 2 (disabled)</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"option3\\\">Option 3</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-form-field>\\n\\t\\t<h5 class=\\\"m-b-10\\\">Native html select</h5>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<select matNativeControl placeholder=\\\"Choose an option\\\" [disabled]=\\\"disableSelect.value\\\">\\n\\t\\t\\t\\t<option value=\\\"\\\" disabled selected></option>\\n\\t\\t\\t\\t<option value=\\\"volvo\\\">Volvo</option>\\n\\t\\t\\t\\t<option value=\\\"saab\\\" disabled>Saab</option>\\n\\t\\t\\t\\t<option value=\\\"mercedes\\\">Mercedes</option>\\n\\t\\t\\t\\t<option value=\\\"audi\\\">Audi</option>\\n\\t\\t\\t</select>\\n\\t\\t</mat-form-field>\\n\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Select with reset option</mat-card-title>\\n\\t\\t<h5 class=\\\"m-b-10\\\">Material Select</h5>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"State\\\">\\n\\t\\t\\t\\t<mat-option>None</mat-option>\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state\\\">{{state}}</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-form-field>\\n\\t\\t<h5 class=\\\"m-b-10\\\">Native html select</h5>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-label>Select your car</mat-label>\\n\\t\\t\\t<select matNativeControl id=\\\"mySelectId\\\">\\n\\t\\t\\t\\t<option value=\\\"\\\" disabled selected></option>\\n\\t\\t\\t\\t<option value=\\\"volvo\\\">Volvo</option>\\n\\t\\t\\t\\t<option value=\\\"saab\\\">Saab</option>\\n\\t\\t\\t\\t<option value=\\\"mercedes\\\">Mercedes</option>\\n\\t\\t\\t\\t<option value=\\\"audi\\\">Audi</option>\\n\\t\\t\\t</select>\\n\\t\\t</mat-form-field>\\n\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Select with option groups </mat-card-title>\\n\\t\\t<h5 class=\\\"m-b-10\\\">Material Select</h5>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"Pokemon\\\" [formControl]=\\\"pokemonControl\\\">\\n\\t\\t\\t\\t<mat-option>-- None --</mat-option>\\n\\t\\t\\t\\t<mat-optgroup *ngFor=\\\"let group of pokemonGroups\\\" [label]=\\\"group.name\\\" [disabled]=\\\"group.disabled\\\">\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let pokemon of group.pokemon\\\" [value]=\\\"pokemon.value\\\">\\n\\t\\t\\t\\t\\t\\t{{pokemon.viewValue}}\\n\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t</mat-optgroup>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-form-field>\\n\\t\\t<h5 class=\\\"m-b-10\\\">Native html select</h5>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<select matNativeControl>\\n\\t\\t\\t\\t<optgroup label=\\\"Swedish Cars\\\">\\n\\t\\t\\t\\t\\t<option value=\\\"volvo\\\">volvo</option>\\n\\t\\t\\t\\t\\t<option value=\\\"saab\\\">Saab</option>\\n\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t\\t<optgroup label=\\\"German Cars\\\">\\n\\t\\t\\t\\t\\t<option value=\\\"mercedes\\\">Mercedes</option>\\n\\t\\t\\t\\t\\t<option value=\\\"audi\\\">Audi</option>\\n\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t</select>\\n\\t\\t</mat-form-field>\\n\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Select with multiple selection</mat-card-title>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"Toppings\\\" [formControl]=\\\"toppings\\\" multiple>\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let topping of toppingList\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-form-field>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Select with custom trigger text</mat-card-title>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"Toppings\\\" [formControl]=\\\"toppings\\\" multiple>\\n\\t\\t\\t\\t<mat-select-trigger>\\n\\t\\t\\t\\t\\t{{toppings.value ? toppings.value[0] : ''}}\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"toppings.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\n\\t\\t\\t\\t\\t\\t(+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t</mat-select-trigger>\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let topping of toppingList\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-form-field>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Select with no option ripple</mat-card-title>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"Select an option\\\" disableRipple>\\n\\t\\t\\t\\t<mat-option value=\\\"1\\\">Option 1</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"2\\\">Option 2</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"3\\\">Option 3</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-form-field>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Select with custom panel styling</mat-card-title>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"Panel color\\\" [formControl]=\\\"panelColor\\\" panelClass=\\\"example-panel-{{panelColor.value}}\\\">\\n\\t\\t\\t\\t<mat-option value=\\\"red\\\">Red</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"green\\\">Green</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"blue\\\">Blue</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t</mat-form-field>\\n\\t</mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Select with a custom ErrorStateMatcher </mat-card-title>\\n\\t\\t<h5 class=\\\"m-b-10\\\">Material Select</h5>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"Choose one\\\" [formControl]=\\\"selected\\\" [errorStateMatcher]=\\\"matcher\\\">\\n\\t\\t\\t\\t<mat-option>Clear</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"valid\\\">Valid option</mat-option>\\n\\t\\t\\t\\t<mat-option value=\\\"invalid\\\">Invalid option</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t<mat-hint>Errors appear instantly!</mat-hint>\\n\\t\\t\\t<mat-error *ngIf=\\\"selected.hasError('required')\\\">You must make a selection</mat-error>\\n\\t\\t\\t<mat-error *ngIf=\\\"selected.hasError('pattern') && !selected.hasError('required')\\\">\\n\\t\\t\\t\\tYour selection is invalid\\n\\t\\t\\t</mat-error>\\n\\t\\t</mat-form-field>\\n\\t\\t<h5 class=\\\"m-b-10\\\">Native html select</h5>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<select matNativeControl placeholder=\\\"Choose one\\\" [formControl]=\\\"nativeSelectFormControl\\\" [errorStateMatcher]=\\\"matcher\\\">\\n\\t\\t\\t\\t<option value=\\\"\\\"></option>\\n\\t\\t\\t\\t<option value=\\\"valid\\\" selected>Valid option</option>\\n\\t\\t\\t\\t<option value=\\\"invalid\\\">Invalid option</option>\\n\\t\\t\\t</select>\\n\\t\\t\\t<mat-error *ngIf=\\\"nativeSelectFormControl.hasError('required')\\\">You must make a selection</mat-error>\\n\\t\\t\\t<mat-error *ngIf=\\\"nativeSelectFormControl.hasError('pattern') && !nativeSelectFormControl.hasError('required')\\\">\\n\\t\\t\\t\\tYour selection is invalid\\n\\t\\t\\t</mat-error>\\n\\t\\t</mat-form-field>\\n\\n\\t</mat-card-content>\\n</mat-card>\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL3NlbGVjdC9zZWxlY3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBZ0I7RUFDaEIsaUJBQWdCO0VBQ2hCLFlBQVcsRUFDWjs7QUFFRDtFQUNFLFlBQVcsRUFDWiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL3NlbGVjdC9zZWxlY3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mb3JtIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport {\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n  Validators\n} from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(\n      control &&\n      control.invalid &&\n      (control.dirty || control.touched || isSubmitted)\n    );\n  }\n}\n\nexport interface Food {\n  value: string;\n  viewValue: string;\n}\n\nexport interface Car {\n  value: string;\n  viewValue: string;\n}\n\nexport interface Animal {\n  name: string;\n  sound: string;\n}\n\nexport interface Pokemon {\n  value: string;\n  viewValue: string;\n}\n\nexport interface PokemonGroup {\n  disabled?: boolean;\n  name: string;\n  pokemon: Pokemon[];\n}\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  // Encapsulation has to be disabled in order for the\n  // component style to apply to the select panel.\n  encapsulation: ViewEncapsulation.None\n})\nexport class SelectfieldComponent {\n  // 1 && 2\n  foods: Food[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' }\n  ];\n  // 3\n  selected1 = 'option2';\n\n  // 4\n  selectedValue: string;\n  selectedCar: string;\n\n  foods1: Food[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' }\n  ];\n\n  cars: Car[] = [\n    { value: 'volvo', viewValue: 'Volvo' },\n    { value: 'saab', viewValue: 'Saab' },\n    { value: 'mercedes', viewValue: 'Mercedes' }\n  ];\n\n  // 5\n  animalControl = new FormControl('', [Validators.required]);\n  selectFormControl1 = new FormControl('', Validators.required);\n  animals: Animal[] = [\n    { name: 'Dog', sound: 'Woof!' },\n    { name: 'Cat', sound: 'Meow!' },\n    { name: 'Cow', sound: 'Moo!' },\n    { name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!' }\n  ];\n\n  // 6\n  disableSelect = new FormControl(false);\n\n  // 7\n  states: string[] = [\n    'Alabama',\n    'Alaska',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'Florida',\n    'Georgia',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Carolina',\n    'North Dakota',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Pennsylvania',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming'\n  ];\n\n  // 8\n  pokemonControl = new FormControl();\n  pokemonGroups: PokemonGroup[] = [\n    {\n      name: 'Grass',\n      pokemon: [\n        { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n        { value: 'oddish-1', viewValue: 'Oddish' },\n        { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n      ]\n    },\n    {\n      name: 'Water',\n      pokemon: [\n        { value: 'squirtle-3', viewValue: 'Squirtle' },\n        { value: 'psyduck-4', viewValue: 'Psyduck' },\n        { value: 'horsea-5', viewValue: 'Horsea' }\n      ]\n    },\n    {\n      name: 'Fire',\n      disabled: true,\n      pokemon: [\n        { value: 'charmander-6', viewValue: 'Charmander' },\n        { value: 'vulpix-7', viewValue: 'Vulpix' },\n        { value: 'flareon-8', viewValue: 'Flareon' }\n      ]\n    },\n    {\n      name: 'Psychic',\n      pokemon: [\n        { value: 'mew-9', viewValue: 'Mew' },\n        { value: 'mewtwo-10', viewValue: 'Mewtwo' }\n      ]\n    }\n  ];\n\n  // 9\n  toppings = new FormControl();\n  toppingList: string[] = [\n    'Extra cheese',\n    'Mushroom',\n    'Onion',\n    'Pepperoni',\n    'Sausage',\n    'Tomato'\n  ];\n\n  // 10\n  panelColor = new FormControl('red');\n\n  // 11\n  selected = new FormControl('valid', [\n    Validators.required,\n    Validators.pattern('valid')\n  ]);\n\n  selectFormControl = new FormControl('valid', [\n    Validators.required,\n    Validators.pattern('valid')\n  ]);\n\n  nativeSelectFormControl = new FormControl('valid', [\n    Validators.required,\n    Validators.pattern('valid')\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n}\n","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <mat-card-title>Sorting overview</mat-card-title>\\n    \\n    \\t\\n    <table class=\\\"m-t-20\\\" matSort (matSortChange)=\\\"sortData($event)\\\" width=\\\"100%\\\">\\n\\t  <tr>\\n\\t    <th mat-sort-header=\\\"name\\\">Dessert (100g)</th>\\n\\t    <th mat-sort-header=\\\"calories\\\">Calories</th>\\n\\t    <th mat-sort-header=\\\"fat\\\">Fat (g)</th>\\n\\t    <th mat-sort-header=\\\"carbs\\\">Carbs (g)</th>\\n\\t    <th mat-sort-header=\\\"protein\\\">Protein (g)</th>\\n\\t  </tr>\\n\\n\\t  <tr *ngFor=\\\"let dessert of sortedData\\\">\\n\\t    <td>{{dessert.name}}</td>\\n\\t    <td>{{dessert.calories}}</td>\\n\\t    <td>{{dessert.fat}}</td>\\n\\t    <td>{{dessert.carbs}}</td>\\n\\t    <td>{{dessert.protein}}</td>\\n\\t  </tr>\\n\\t</table>\\n\\n    \\n\\n  </mat-card-content>\\n</mat-card>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL3NvcnRoZWFkZXIvc29ydGhlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Sort } from '@angular/material';\n\nexport interface Dessert {\n  calories: number;\n  carbs: number;\n  fat: number;\n  name: string;\n  protein: number;\n}\n\n@Component({\n  selector: 'app-sortheader',\n  templateUrl: './sortheader.component.html',\n  styleUrls: ['./sortheader.component.scss']\n})\nexport class SortheaderComponent {\n  desserts: Dessert[] = [\n    { name: 'Frozen yogurt', calories: 159, fat: 6, carbs: 24, protein: 4 },\n    {\n      name: 'Ice cream sandwich',\n      calories: 237,\n      fat: 9,\n      carbs: 37,\n      protein: 4\n    },\n    { name: 'Eclair', calories: 262, fat: 16, carbs: 24, protein: 6 },\n    { name: 'Cupcake', calories: 305, fat: 4, carbs: 67, protein: 4 },\n    { name: 'Gingerbread', calories: 356, fat: 16, carbs: 49, protein: 4 }\n  ];\n\n  sortedData: Dessert[];\n\n  constructor() {\n    this.sortedData = this.desserts.slice();\n  }\n\n  sortData(sort: Sort) {\n    const data = this.desserts.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'name':\n          return compare(a.name, b.name, isAsc);\n        case 'calories':\n          return compare(a.calories, b.calories, isAsc);\n        case 'fat':\n          return compare(a.fat, b.fat, isAsc);\n        case 'carbs':\n          return compare(a.carbs, b.carbs, isAsc);\n        case 'protein':\n          return compare(a.protein, b.protein, isAsc);\n        default:\n          return 0;\n      }\n    });\n  }\n}\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"<mat-card>\\n\\t<mat-card-content>\\n\\t\\t<mat-card-title>Tree with flat nodes</mat-card-title>\\n\\n\\t\\t<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n\\t\\t\\t<mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding>\\n\\t\\t\\t\\t<button mat-icon-button disabled></button>\\n\\t\\t\\t\\t{{node.filename}} : {{node.type}}\\n\\t\\t\\t</mat-tree-node>\\n\\n\\t\\t\\t<mat-tree-node *matTreeNodeDef=\\\"let node;when: hasChild\\\" matTreeNodePadding>\\n\\t\\t\\t\\t<button mat-icon-button matTreeNodeToggle [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n\\t\\t\\t\\t\\t\\t{{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n\\t\\t\\t\\t\\t</mat-icon>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t{{node.filename}} : {{node.type}}\\n\\t\\t\\t</mat-tree-node>\\n\\t\\t</mat-tree>\\n\\t</mat-card-content>\\n</mat-card>\"","module.exports = \".example-tree-progress-bar {\\n  margin-left: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2Zvcm1zL3RyZWUvdHJlZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFpQixFQUNsQiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL3RyZWUvdHJlZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXRyZWUtcHJvZ3Jlc3MtYmFyIHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG59XG4iXX0= */\"","import { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component, Injectable } from '@angular/core';\nimport {\n  MatTreeFlatDataSource,\n  MatTreeFlattener\n} from '@angular/material/tree';\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\n\n/**\n * File node data with nested structure.\n * Each node has a filename, and a type or a list of children.\n */\nexport class FileNode {\n  children: FileNode[];\n  filename: string;\n  type: any;\n}\n\n/** Flat node with expandable and level information */\nexport class FileFlatNode {\n  constructor(\n    public expandable: boolean,\n    public filename: string,\n    public level: number,\n    public type: any\n  ) {}\n}\n\n/**\n * The file structure tree data in string. The data could be parsed into a Json object\n */\nconst TREE_DATA = JSON.stringify({\n  Applications: {\n    Calendar: 'app',\n    Chrome: 'app',\n    Webstorm: 'app'\n  },\n  Documents: {\n    angular: {\n      src: {\n        compiler: 'ts',\n        core: 'ts'\n      }\n    },\n    material2: {\n      src: {\n        button: 'ts',\n        checkbox: 'ts',\n        input: 'ts'\n      }\n    }\n  },\n  Downloads: {\n    October: 'pdf',\n    November: 'pdf',\n    Tutorial: 'html'\n  },\n  Pictures: {\n    'Photo Booth Library': {\n      Contents: 'dir',\n      Pictures: 'dir'\n    },\n    Sun: 'png',\n    Woods: 'jpg'\n  }\n});\n\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class FileDatabase {\n  dataChange = new BehaviorSubject<FileNode[]>([]);\n\n  get data(): FileNode[] {\n    return this.dataChange.value;\n  }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Parse the string to json object.\n    const dataObject = JSON.parse(TREE_DATA);\n\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(dataObject, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `FileNode`.\n   */\n  buildFileTree(obj: object, level: number): FileNode[] {\n    return Object.keys(obj).reduce<FileNode[]>((accumulator, key) => {\n      const value = obj[key];\n      const node = new FileNode();\n      node.filename = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.type = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n}\n\n/**\n * @title Tree with flat nodes\n */\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss'],\n  providers: [FileDatabase]\n})\nexport class TreeComponent {\n  treeControl: FlatTreeControl<FileFlatNode>;\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\n\n  constructor(database: FileDatabase) {\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer,\n      this._getLevel,\n      this._isExpandable,\n      this._getChildren\n    );\n    this.treeControl = new FlatTreeControl<FileFlatNode>(\n      this._getLevel,\n      this._isExpandable\n    );\n    this.dataSource = new MatTreeFlatDataSource(\n      this.treeControl,\n      this.treeFlattener\n    );\n\n    database.dataChange.subscribe(data => (this.dataSource.data = data));\n  }\n\n  transformer = (node: FileNode, level: number) => {\n    return new FileFlatNode(!!node.children, node.filename, level, node.type);\n    // tslint:disable-next-line:semicolon\n  };\n\n  private _getLevel = (node: FileFlatNode) => node.level;\n\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\n\n  private _getChildren = (node: FileNode): Observable<FileNode[]> =>\n    observableOf(node.children);\n\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\n}\n","module.exports = \"<!-- ============================================================== -->\\n<!-- row -->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n  <!-- Card column -->\\n  <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Horizontal wizard</mat-card-title>\\n        <button mat-raised-button (click)=\\\"isLinear = true\\\" id=\\\"toggle-linear\\\">Enable linear mode</button>\\n        <mat-horizontal-stepper [linear]=\\\"isLinear\\\">\\n          <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n            <form [formGroup]=\\\"firstFormGroup\\\">\\n              <ng-template matStepLabel>Fill out your name</ng-template>\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n              </mat-form-field>\\n              <div>\\n                <button mat-raised-button color=\\\"warn\\\" matStepperNext>Next</button>\\n              </div>\\n            </form>\\n          </mat-step>\\n          <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n            <form [formGroup]=\\\"secondFormGroup\\\">\\n              <ng-template matStepLabel>Fill out your address</ng-template>\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n              </mat-form-field>\\n              <div>\\n                <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\n                <button mat-raised-button color=\\\"warn\\\" matStepperNext>Next</button>\\n              </div>\\n            </form>\\n          </mat-step>\\n          <mat-step>\\n            <ng-template matStepLabel>Done</ng-template>\\n            You are now done.\\n            <div>\\n              <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\n            </div>\\n          </mat-step>\\n        </mat-horizontal-stepper>\\n\\n      </mat-card-content>\\n\\n    </mat-card>\\n  </div>\\n</div>\\n<div fxLayout=\\\"row wrap\\\">\\n  <!-- Card column -->\\n  <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Vertical wizard</mat-card-title>\\n        <button mat-raised-button (click)=\\\"isLinear = true\\\" id=\\\"toggle-linear\\\">Enable linear mode</button>\\n        <mat-vertical-stepper [linear]=\\\"isLinear\\\">\\n          <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n            <form [formGroup]=\\\"firstFormGroup\\\">\\n              <ng-template matStepLabel>Fill out your name</ng-template>\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n              </mat-form-field>\\n              <div>\\n                <button mat-raised-button color=\\\"warn\\\" matStepperNext>Next</button>\\n              </div>\\n            </form>\\n          </mat-step>\\n          <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n            <form [formGroup]=\\\"secondFormGroup\\\">\\n              <ng-template matStepLabel>Fill out your address</ng-template>\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n              </mat-form-field>\\n              <div>\\n                <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\n                <button mat-raised-button color=\\\"warn\\\" matStepperNext>Next</button>\\n              </div>\\n            </form>\\n          </mat-step>\\n          <mat-step>\\n            <ng-template matStepLabel>Done</ng-template>\\n            You are now done.\\n            <div>\\n              <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\n            </div>\\n          </mat-step>\\n        </mat-vertical-stepper>\\n\\n      </mat-card-content>\\n\\n    </mat-card>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL3dpemFyZC93aXphcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.scss']\n})\nexport class WizardComponent implements OnInit {\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  constructor(private _formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n}\n"],"sourceRoot":""}