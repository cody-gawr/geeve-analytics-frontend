{"version":3,"sources":["webpack:///./src/app/clinic-goals/clinic-goals.component.html","webpack:///./src/app/clinic-goals/clinic-goals.component.scss","webpack:///./src/app/clinic-goals/clinic-goals.component.ts","webpack:///./src/app/clinic-goals/clinic-goals.module.ts","webpack:///./src/app/clinic-goals/clinic-goals.routing.ts","webpack:///./src/app/clinic-goals/clinic-goals.service.ts"],"names":[],"mappings":"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","file":"clinic-goals-clinic-goals-module.js","sourcesContent":["module.exports = \"<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                Clinic Goals\\n                <!-- ============================================================== -->\\n                <!-- column -->\\n                <!-- ============================================================== -->\\n                <div fxLayout=\\\"row wrap\\\">\\n                    <!-- Card column -->\\n                    <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\" class=\\\"sa_mattabs_design sa_matforms_design\\\">\\n\\n                        <form [formGroup]=\\\"form\\\" class=\\\"basic-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                            <mat-tab-group dynamicHeight>\\n                                <mat-tab label=\\\"Clinician Analysis\\\">\\n                                    <div class=\\\"example-small-box\\\">\\n                                        <div fxLayout=\\\"row wrap\\\">\\n                                            <!-- column -->\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Dentist Production value\\\" [formControl]=\\\"form.controls['dentistprod']\\\" [(ngModel)]= \\\"dentistprod\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Treatment Plan Completion Rate (%) value\\\" [formControl]=\\\"form.controls['treatmentplan']\\\" [(ngModel)]=\\\"treatmentplan\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Treatment Plan Average Cost value\\\" [formControl]=\\\"form.controls['planaverage']\\\" [(ngModel)]=\\\"planaverage\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Recall Prebook Rate value\\\" [formControl]=\\\"form.controls['recallrate']\\\" [(ngModel)]=\\\"recallrate\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Treatment Prebook Rate value\\\" [formControl]=\\\"form.controls['rebookrate']\\\" [(ngModel)]=\\\"rebookrate\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"No. Patient Complaints value\\\" [formControl]=\\\"form.controls['patientcomplaints']\\\" [(ngModel)]=\\\"patientcomplaints\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Hourly Rate value\\\" [formControl]=\\\"form.controls['hourlyrate']\\\" [(ngModel)]=\\\"hourlyrate\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"No. New Patients  value\\\" [formControl]=\\\"form.controls['newpatients']\\\" [(ngModel)]=\\\"newpatients\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <mat-card-actions>\\n                                            <button mat-raised-button color=\\\"dc\\\" type=\\\"submit\\\">Submit</button>\\n                                        </mat-card-actions>\\n                                        <!-- column -->\\n                                    </div>\\n                                </mat-tab>\\n\\n\\n                                <mat-tab label=\\\"Clinician Procedures & Referrals\\\">\\n                                    <div class=\\\"example-small-box\\\">\\n                                        <div fxLayout=\\\"row wrap\\\">\\n                                            <!-- column -->\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Items Predictor Analysis  value\\\" [formControl]=\\\"form.controls['itempredictor']\\\" [(ngModel)]= \\\"itempredictor\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Predictor Ratio 1: (Crown to Large Filling Ratio) value\\\" [formControl]=\\\"form.controls['ratio1']\\\" [(ngModel)]=\\\"ratio1\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Predictor Ratio 2: (Extraction to RCT Ratio) value\\\" [formControl]=\\\"form.controls['ratio2']\\\" [(ngModel)]=\\\"ratio2\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Predictor Ratio 3: (RCT Conversion Ratio) value\\\" [formControl]=\\\"form.controls['ratio3']\\\" [(ngModel)]=\\\"ratio3\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Total Revenue of Clinician Per Procedure value\\\" [formControl]=\\\"form.controls['totalrevenue']\\\" [(ngModel)]=\\\"totalrevenue\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Referral to Other Clinicians Internal / External value\\\" [formControl]=\\\"form.controls['referralclinician']\\\" [(ngModel)]=\\\"referralclinician\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <mat-card-actions>\\n                                            <button mat-raised-button color=\\\"dc\\\" type=\\\"submit\\\">Submit</button>\\n                                        </mat-card-actions>\\n                                        <!-- column -->\\n                                    </div>\\n                                </mat-tab>\\n                                <mat-tab label=\\\"Front Desk\\\">\\n                                    <div class=\\\"example-small-box \\\">\\n                                        <div fxLayout=\\\"row wrap\\\">\\n                                            <!-- column -->\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Items Predictor Analysis  value\\\" [formControl]=\\\"form.controls['utilisationrate']\\\" [(ngModel)]= \\\"utilisationrate\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Recall prebook rate (%) value\\\" [formControl]=\\\"form.controls['recallprebook']\\\" [(ngModel)]=\\\"recallprebook\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Treatment prebook rate (%) value\\\" [formControl]=\\\"form.controls['treatmentprebook']\\\" [(ngModel)]=\\\"treatmentprebook\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"FTA ratio (%) value\\\" [formControl]=\\\"form.controls['fta']\\\" [(ngModel)]=\\\"fta\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"UTA ratio (%) value\\\" [formControl]=\\\"form.controls['uta']\\\" [(ngModel)]=\\\"uta\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Number of Ticks value\\\" [formControl]=\\\"form.controls['noticks']\\\" [(ngModel)]=\\\"noticks\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Recall Attendance Rate value\\\" [formControl]=\\\"form.controls['attendancerate']\\\" [(ngModel)]=\\\"attendancerate\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <mat-card-actions>\\n                                            <button mat-raised-button color=\\\"dc\\\" type=\\\"submit\\\">Submit</button>\\n                                        </mat-card-actions>\\n                                        <!-- column -->\\n                                    </div>\\n                                </mat-tab>\\n\\n                                <mat-tab label=\\\"Marketing\\\">\\n                                    <div class=\\\"example-small-box\\\">\\n                                        <div fxLayout=\\\"row wrap\\\">\\n                                            <!-- column -->\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"No. New Patients By Referral  value\\\" [formControl]=\\\"form.controls['referralpatient']\\\" [(ngModel)]= \\\"referralpatient\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Revenue by Referral value\\\" [formControl]=\\\"form.controls['revenuereferral']\\\" [(ngModel)]=\\\"revenuereferral\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Total Visits value\\\" [formControl]=\\\"form.controls['visits']\\\" [(ngModel)]=\\\"visits\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"No. New Patients value\\\" [formControl]=\\\"form.controls['newpatients2']\\\" [(ngModel)]=\\\"newpatients2\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Cost of New Patient Acquisition value\\\" [formControl]=\\\"form.controls['patientcost']\\\" [(ngModel)]=\\\"patientcost\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <mat-card-actions>\\n                                            <button mat-raised-button color=\\\"dc\\\" type=\\\"submit\\\">Submit</button>\\n                                        </mat-card-actions>\\n                                        <!-- column -->\\n                                    </div>\\n                                </mat-tab>\\n\\n                                <mat-tab label=\\\"Finances\\\">\\n                                    <div class=\\\"example-small-box\\\">\\n                                        <div fxLayout=\\\"row wrap\\\">\\n                                            <!-- column -->\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Net Profit value\\\" [formControl]=\\\"form.controls['netprofit']\\\" [(ngModel)]= \\\"netprofit\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Net Profit % (Xero) value\\\" [formControl]=\\\"form.controls['netprofitxero']\\\" [(ngModel)]=\\\"netprofitxero\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Net Profit % (PMS) value\\\" [formControl]=\\\"form.controls['netprofitpms']\\\" [(ngModel)]=\\\"netprofitpms\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Expenses value\\\" [formControl]=\\\"form.controls['expenses']\\\" [(ngModel)]=\\\"expenses\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"% of Production By Clinician value\\\" [formControl]=\\\"form.controls['productionclinician']\\\" [(ngModel)]=\\\"productionclinician\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Total Production value\\\" [formControl]=\\\"form.controls['totalproduction']\\\" [(ngModel)]=\\\"totalproduction\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Collection value\\\" [formControl]=\\\"form.controls['collection']\\\" [(ngModel)]=\\\"collection\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Production Per Visit value\\\" [formControl]=\\\"form.controls['visitproduction']\\\" [(ngModel)]=\\\"visitproduction\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Total Discounts value\\\" [formControl]=\\\"form.controls['discount']\\\" [(ngModel)]=\\\"discount\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                                <mat-form-field>\\n\\n                                                    <input matInput placeholder=\\\"Overdue Accounts value\\\" [formControl]=\\\"form.controls['overdueaccount']\\\" [(ngModel)]=\\\"overdueaccount\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <mat-card-actions>\\n                                            <button mat-raised-button color=\\\"dc\\\" type=\\\"submit\\\">Submit</button>\\n                                        </mat-card-actions>\\n                                        <!-- column -->\\n                                    </div>\\n                                </mat-tab>\\n                            </mat-tab-group>\\n                        </form>\\n\\n\\n\\n                    </div>\\n                </div>\\n\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 90%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2NsaW5pYy1nb2Fscy9jbGluaWMtZ29hbHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBZ0I7RUFDaEIsaUJBQWdCO0VBQ2hCLFlBQVcsRUFDWjs7QUFFRDtFQUNFLFdBQVUsRUFDWCIsImZpbGUiOiJzcmMvYXBwL2NsaW5pYy1nb2Fscy9jbGluaWMtZ29hbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mb3JtIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICB3aWR0aDogOTAlO1xufVxuIl19 */\"","import { Component,OnInit, AfterViewInit  } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ClinicGoalsService } from './clinic-goals.service';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n@Component({\n  selector: 'app-formlayout',\n  templateUrl: './clinic-goals.component.html',\n  styleUrls: ['./clinic-goals.component.scss']\n})\nexport class ClinicGoalsComponent implements OnInit {\n   public clinic_id:any ={};\n\n   public form: FormGroup;\n   public errorLogin = false;\n          private warningMessage: string;\n          public dentistprod:any =0;\n          public treatmentplan =0;\n          public planaverage =0;\n          public recallrate =0;\n          public rebookrate =0;\n          public patientcomplaints =0;\n          public hourlyrate =0;\n\n          public newpatients = 0;\n          public itempredictor = 0;\n          public ratio1 =0;\n          public ratio2 =0;\n          public ratio3 =0;\n          public totalrevenue =0;\n          public referralclinician = 0;\n\n          public utilisationrate = 0;\n          public recallprebook = 0;\n          public treatmentprebook =0;\n          public fta =0;\n          public uta =0;\n          public noticks =0;\n          public attendancerate = 0;\n\n          public referralpatient = 0;\n          public revenuereferral = 0;\n          public visits =0;\n          public newpatients2 =0;\n          public patientcost =0;\n\n          public netprofit:any =0;\n          public netprofitxero =0;\n          public netprofitpms =0;\n          public expenses =0;\n          public productionclinician =0;\n          public totalproduction =0;\n          public visitproduction =0;\n          public collection =0;\n\n\n          public discount:any =0;\n          public overdueaccount =0;\n          // public chartData: any[] = [];\n          public chartData:any = {};\n\n  options: FormGroup;\n\n  constructor(private fb: FormBuilder,  private clinicGoalsService: ClinicGoalsService, private route: ActivatedRoute,private _cookieService: CookieService, private router: Router) {\n//  this.clinic_id = this.route.snapshot.paramMap.get(\"id\");\n\n    this.options = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto'\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if(this._cookieService.get(\"userid\") != '1'){\n    this.clinic_id = this.route.snapshot.paramMap.get(\"id\");\n  }\n  else\n  {\n    this.clinic_id = '';\n\n  }\n        this.getClinicGoals();\n            $('#title').html('Clinics Goals');\n        $('.external_clinic').show();\n        $('.external_dentist').hide();\n     });\n\n     this.form = this.fb.group({\n      dentistprod: [null, Validators.compose([Validators.required])],\n      treatmentplan: [null, Validators.compose([Validators.required])],\n      planaverage: [null, Validators.compose([Validators.required])],\n      recallrate: [null, Validators.compose([Validators.required])],\n      rebookrate: [null, Validators.compose([Validators.required])],\n      patientcomplaints: [null, Validators.compose([Validators.required])],\n      newpatients: [null, Validators.compose([Validators.required])],\n      hourlyrate: [null, Validators.compose([Validators.required])],\n      itempredictor: [null, Validators.compose([Validators.required])],\n      ratio1: [null, Validators.compose([Validators.required])],\n      ratio2: [null, Validators.compose([Validators.required])],\n      ratio3: [null, Validators.compose([Validators.required])],\n      totalrevenue: [null, Validators.compose([Validators.required])],\n      referralclinician: [null, Validators.compose([Validators.required])],\n      utilisationrate: [null, Validators.compose([Validators.required])],\n      recallprebook: [null, Validators.compose([Validators.required])],\n      treatmentprebook: [null, Validators.compose([Validators.required])],\n      fta: [null, Validators.compose([Validators.required])],\n      uta: [null, Validators.compose([Validators.required])],\n      noticks: [null, Validators.compose([Validators.required])],\n      attendancerate: [null, Validators.compose([Validators.required])],\n            referralpatient: [null, Validators.compose([Validators.required])],\n      revenuereferral: [null, Validators.compose([Validators.required])],\n      visits: [null, Validators.compose([Validators.required])],\n      newpatients2: [null, Validators.compose([Validators.required])],\n      patientcost: [null, Validators.compose([Validators.required])],\n\n      netprofit: [null, Validators.compose([Validators.required])],\n      netprofitxero: [null, Validators.compose([Validators.required])],\n      netprofitpms: [null, Validators.compose([Validators.required])],\n      expenses: [null, Validators.compose([Validators.required])],\n      productionclinician: [null, Validators.compose([Validators.required])],\n      totalproduction: [null, Validators.compose([Validators.required])],\n      collection: [null, Validators.compose([Validators.required])],\n\n      visitproduction: [null, Validators.compose([Validators.required])],\n      discount: [null, Validators.compose([Validators.required])],\n      overdueaccount: [null, Validators.compose([Validators.required])],\n\n\n    });\n  }\n  // For form validator\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  // Sufix and prefix\n  hide = true;\n\n  getErrorMessage() {\n    return this.email.hasError('required')\n      ? 'You must enter a value'\n      : this.email.hasError('email')\n        ? 'Not a valid email'\n        : '';\n  }\n\n  getClinicGoals() {\n  this.clinicGoalsService.getClinicGoals(this.clinic_id).subscribe((res) => {\n    console.log(res);\n       if(res.message == 'success'){\n          this.dentistprod =res.data[1].value;\n          this.treatmentplan =res.data[2].value;\n          this.planaverage =res.data[3].value;\n          this.recallrate =res.data[4].value;\n          this.rebookrate =res.data[5].value;\n          this.patientcomplaints =res.data[6].value;\n          this.hourlyrate =res.data[7].value;\n          this.newpatients =res.data[8].value;\n\n          this.itempredictor =res.data[9].value;\n          this.ratio1 =res.data[10].value;\n          this.ratio2 =res.data[11].value;\n          this.ratio3 =res.data[12].value;\n          this.totalrevenue =res.data[13].value;\n          this.referralclinician =res.data[14].value;\n\n          this.utilisationrate = res.data[15].value;\n          this.recallprebook = res.data[16].value;\n          this.treatmentprebook = res.data[17].value;\n          this.fta = res.data[18].value;\n          this.uta = res.data[19].value;\n          this.noticks = res.data[20].value;\n          this.attendancerate = res.data[21].value;\n\n          this.referralpatient = res.data[22].value;\n          this.revenuereferral = res.data[23].value;\n          this.visits = res.data[24].value;\n          this.newpatients2 = res.data[25].value;\n          this.patientcost = res.data[26].value;\n\n          this.netprofit = res.data[27].value;\n          this.netprofitxero = res.data[28].value;\n          this.netprofitpms = res.data[29].value;\n          this.expenses = res.data[30].value;\n          this.productionclinician = res.data[31].value;\n          this.totalproduction = res.data[32].value;\n          this.collection = res.data[33].value;\n          this.visitproduction = res.data[34].value;\n          this.discount = res.data[35].value;\n          this.overdueaccount = res.data[36].value;\n\n\n       }\n        else if(res.status == '401'){\n              this._cookieService.put(\"username\",'');\n              this._cookieService.put(\"email\", '');\n              this._cookieService.put(\"token\", '');\n              this._cookieService.put(\"userid\", '');\n               this.router.navigateByUrl('/login');\n           }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n  }\n\n  onSubmit() {\n  this.chartData[1] = this.form.value.dentistprod;\n  this.chartData[2] = this.form.value.treatmentplan;\n  this.chartData[3] = this.form.value.planaverage;\n  this.chartData[4] = this.form.value.recallrate;\n  this.chartData[5] = this.form.value.rebookrate;\n  this.chartData[6] = this.form.value.patientcomplaints;\n  this.chartData[7] = this.form.value.hourlyrate;\n  this.chartData[8] = this.form.value.newpatients;\n\n  this.chartData[9] = this.form.value.itempredictor;\n  this.chartData[10] = this.form.value.ratio1;\n  this.chartData[11] = this.form.value.ratio2;\n  this.chartData[12] = this.form.value.ratio3;\n  this.chartData[13] = this.form.value.totalrevenue;\n  this.chartData[14] = this.form.value.referralclinician;\n\n  this.chartData[15] = this.form.value.utilisationrate;\n  this.chartData[16] = this.form.value.recallprebook;\n  this.chartData[17] = this.form.value.treatmentprebook;\n  this.chartData[18] = this.form.value.fta;\n  this.chartData[19] = this.form.value.uta;\n  this.chartData[20] = this.form.value.noticks;\n  this.chartData[21] = this.form.value.attendancerate;\n\n  this.chartData[22] = this.form.value.referralpatient;\n  this.chartData[23] = this.form.value.revenuereferral;\n  this.chartData[24] = this.form.value.visits;\n  this.chartData[25] = this.form.value.newpatients2;\n  this.chartData[26] = this.form.value.patientcost;\n\n  this.chartData[27] = this.form.value.netprofit;\n  this.chartData[28] = this.form.value.netprofitxero;\n  this.chartData[29] = this.form.value.netprofitpms;\n  this.chartData[30] = this.form.value.expenses;\n  this.chartData[31] = this.form.value.productionclinician;\n  this.chartData[32] = this.form.value.totalproduction;\n  this.chartData[33] = this.form.value.collection;\n  this.chartData[34] = this.form.value.visitproduction;\n  this.chartData[35] = this.form.value.discount;\n  this.chartData[36] = this.form.value.overdueaccount;\n  var myJsonString = JSON.stringify(this.chartData);\n   this.clinicGoalsService.updateClinicGoals(myJsonString, this.clinic_id).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('Clinic Goals Updated');\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n  } \n}\n","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ClinicGoalsRoutes } from './clinic-goals.routing';\nimport { QuillModule } from 'ngx-quill';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\nimport { ClinicGoalsComponent } from './clinic-goals.component';\n\nimport { ClinicGoalsService } from './clinic-goals.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ClinicGoalsRoutes),\n    DemoMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    QuillModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    MatTreeModule,\n    MatDatepickerModule,\n    NgMultiSelectDropDownModule.forRoot()\n  ],\n  providers: [\n    ClinicGoalsService\n  ],\n  declarations: [\n    ClinicGoalsComponent\n  ]\n})\nexport class ClinicGoalsModule {}\n","import { Routes } from '@angular/router';\n\nimport { ClinicGoalsComponent } from './clinic-goals.component';\n\nexport const ClinicGoalsRoutes: Routes = [\n  {\n   path: '',\n    component: ClinicGoalsComponent,\n    data: {\n      title: 'Clinic Goals'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class ClinicGoalsService {\n\n   public token: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   // Get ClinicGoals\n    getClinicGoals(clinic_id='', user_id = this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Goals/getClinicGoals?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n       // Get ClinicGoals\n    updateClinicGoals(clinicData, clinic_id='', user_id =  this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): Observable<any> {\n            const formData = new FormData();\n\n    formData.append('goals', clinicData);\n    formData.append('user_id', user_id);\n    formData.append('clinic_id', clinic_id);\n\n    formData.append('token', token);\n\n        return this.http.post(this.apiUrl +\"/Goals/addClinicGoal/\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n       \n}\n\n"],"sourceRoot":""}