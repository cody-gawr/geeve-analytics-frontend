{"version":3,"sources":["webpack:///./src/app/patient-info/dialog-overview-example.html","webpack:///./src/app/patient-info/patient-info.component.html","webpack:///./src/app/patient-info/patient-info.component.scss","webpack:///./src/app/patient-info/patient-info.component.ts","webpack:///./src/app/patient-info/patient-info.module.ts","webpack:///./src/app/patient-info/patient-info.routing.ts","webpack:///./src/app/patient-info/patient-info.service.ts"],"names":[],"mappings":"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","file":"patient-info-patient-info-module.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title>Add/Edit Benefits</h1>\\n<div mat-dialog-content>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.name\\\" placeholder=\\\"Benefits\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" [(ngModel)]=\\\"data.age\\\" placeholder=\\\"No. of sittings\\\">\\n  </mat-form-field>\\n\\n                     \\n  <div class=\\\"responsive-table\\\">\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\n \\n      <ng-container matColumnDef=\\\"position\\\">\\n        <mat-header-cell *matHeaderCellDef> S.No. </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{data.position}} </mat-cell>\\n      </ng-container>\\n\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{data.name}} </mat-cell>\\n      </ng-container>\\n\\n     \\n      <ng-container matColumnDef=\\\"age\\\">\\n        <mat-header-cell *matHeaderCellDef> Age </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{data.age}} </mat-cell>\\n        \\n      </ng-container>\\n\\n     \\n      <ng-container matColumnDef=\\\"gender\\\">\\n        <mat-header-cell *matHeaderCellDef> Gender </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{data.gender}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"action\\\">\\n          <mat-header-cell *matHeaderCellDef>Action </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{data.action}} </mat-cell>\\n        </ng-container>\\n\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n  </div>\\n\\n  <!--  <input type=\\\"file\\\" (change)=\\\"onChange($event)\\\"> -->\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\"","module.exports = \"<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                Patient Plan Details\\n               <!-- ============================================================== -->\\n                <!-- column -->\\n                <!-- ============================================================== -->\\n                <div fxLayout=\\\"row wrap\\\">\\n                    <!-- Card column -->\\n                    <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\" class=\\\"sa_mattabs_design sa_matforms_design\\\">\\n\\n                            <mat-tab-group dynamicHeight>\\n                         \\n                        <!-- Plan Details tab -->\\n                              <mat-tab label=\\\"Plan Details\\\">\\n                                <form>                                \\n                                  <table>\\n                                    <tr>\\n                                      <th>Payment Amount</th>\\n                                      <td>&nbsp;&nbsp;</td>\\n                                      <td>${{patient_amount}}</td>\\n                                    </tr>\\n                                    <tr>\\n                                      <th>No. of Members</th>\\n                                      <td>&nbsp;&nbsp;</td>\\n                                      <td>{{total_subpatient}}</td>\\n                                    </tr>\\n                                    <tr>\\n                                      <th>&nbsp;</th>\\n                                     </tr>\\n                                   </table>\\n                                </form>\\n\\n                                   \\n                                  <ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n                                  [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\n                             <ngx-datatable-column prop=\\\"sr\\\" name=\\\"sr\\\">\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n                              <span>Id</span>\\n                            </ng-template>\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                                <span>\\n                                  {{rowIndex + 1}}\\n                                </span>\\n                              </ng-template>\\n                            </ngx-datatable-column>\\n                            <ngx-datatable-column prop=\\\"sub_patients_name\\\" name=\\\"sub_patients_name\\\">\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n                              <span>Name</span>\\n                            </ng-template>\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n                                <span >\\n                                  {{value}}\\n                                </span>\\n                                    </ng-template>\\n                            </ngx-datatable-column>\\n                      \\n                             <ngx-datatable-column prop=\\\"sub_patients_age\\\" name=\\\"sub_patients_age\\\">\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n                              <span>Age</span>\\n                            </ng-template>\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n                                <span >\\n                                  {{value}}\\n                                </span>\\n                               \\n                              </ng-template>\\n                            </ngx-datatable-column>\\n                      \\n                            <ngx-datatable-column prop=\\\"sub_patients_gender\\\" name=\\\"sub_patients_gender\\\">\\n                              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n                             <span>Gender</span>\\n                           </ng-template>\\n                             <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n                               <span >\\n                                 {{value}}\\n                               </span>\\n                              \\n                             </ng-template>\\n                           </ngx-datatable-column>\\n                      \\n                        \\n                          </ngx-datatable>\\n\\n                            </mat-tab>\\n\\n                        <!-- Benefits Used tab -->\\n                                <mat-tab label=\\\"Benefits Used\\\">\\n  \\n                                  <div class=\\\"responsive-table\\\">\\n                                        <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n                                          <ng-container matColumnDef=\\\"position\\\">\\n                                            <mat-header-cell *matHeaderCellDef> S.No. </mat-header-cell>\\n                                            <mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </mat-cell>\\n                                          </ng-container>\\n                              \\n\\n                                          <ng-container matColumnDef=\\\"name\\\">\\n                                            <mat-header-cell *matHeaderCellDef> Benefits </mat-header-cell>\\n                                            <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n                                          </ng-container>\\n                              \\n                                          <ng-container matColumnDef=\\\"age\\\">\\n                                            \\n                                            <mat-header-cell *matHeaderCellDef> Progress %age </mat-header-cell>\\n                                            <!-- <mat-cell *matCellDef=\\\"let element\\\"> {{element.age}} </mat-cell> -->\\n                                            <mat-cell>\\n                                                <mat-progress-bar style=\\\"width:20%\\\" *matCellDef=\\\"let element\\\" mode=\\\"determinate\\\" value=\\\"40\\\"></mat-progress-bar>\\n                                              </mat-cell>\\n                                           </ng-container>\\n                              \\n                                          <ng-container matColumnDef=\\\"gender\\\">\\n                                            <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                                            <mat-cell *matCellDef=\\\"let element\\\"> {{element.gender}} </mat-cell>\\n                                          </ng-container>\\n                                \\n                                          <ng-container matColumnDef=\\\"action\\\">\\n                                              <mat-header-cell *matHeaderCellDef>Action </mat-header-cell>\\n                                              <!-- <mat-cell *matCellDef=\\\"let element\\\"> {{element.action}} </mat-cell> -->\\n                                              <a class=\\\"action_btn golden mat-raised-button\\\" mat-raised-button *matCellDef=\\\"let element\\\" title= 'action' (click)=\\\"openDialog()\\\"><i class=\\\"ti-settings  m-r-10\\\"></i></a>\\n\\n                                              <!-- <button class=\\\"mat-raised-button ti-settings  m-r-10\\\" *matCellDef=\\\"let element\\\" mat-raised-button ></button> -->\\n                                            </ng-container>\\n\\n                                          <ng-container matColumnDef=\\\"completiondate\\\">\\n                                              <mat-header-cell *matHeaderCellDef> Completion Date </mat-header-cell>\\n                                              <mat-cell *matCellDef=\\\"let element\\\"> {{element.gender}} </mat-cell>\\n                                            </ng-container>\\n                                                          \\n\\n\\n                                            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                                          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                                        </mat-table>\\n                                      </div>\\n                                </mat-tab>\\n\\n                      <!-- Contract Upload tab -->\\n                                <mat-tab label=\\\"Contract Upload\\\">\\n                             \\n                                  <form [formGroup]=\\\"form\\\" class=\\\"basic-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                    <div class=\\\"bd_UpoadImage\\\" fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                        <label>Upload Agreement</label><br>\\n                                        <div class=\\\"upload-btn\\\">\\n                                            <span>Choose file</span>\\n                                            <input class=\\\"\\\" type=\\\"file\\\" placeholder=\\\"\\\" name= \\\"file\\\" id=\\\"file\\\" (change)=\\\"uploadImage($event.target.files)\\\">\\n                                            <input type='hidden'  placeholder=\\\"\\\" id=\\\"imageURL\\\" >\\n                                        </div>\\n                                                          \\n                                     </div>\\n                               \\n                                   <p>\\n                                      <button mat-raised-button color=\\\"dc\\\">Save</button>\\n                                   </p>\\n                                   </form>\\n                                  <p *ngIf=\\\"contract_url; else empty\\\">\\n                                    Download Agreement\\n                                    <a mat-raised-button class=\\\"contractupload\\\" color=\\\"accent\\\" href=\\\"{{contract_url}}\\\">Download</a>\\n                                </p>\\n                                </mat-tab>\\n\\n                    <!-- Payment History tab -->\\n\\n                                <mat-tab label=\\\"Payment History\\\">\\n                                 \\n                                                        \\n                                    <div class=\\\"responsive-table\\\">\\n                                        <mat-table #table [dataSource]=\\\"dataSource\\\">\\n                                     \\n                                          <ng-container matColumnDef=\\\"position\\\">\\n                                            <mat-header-cell *matHeaderCellDef> S.No. </mat-header-cell>\\n                                            <mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </mat-cell>\\n                                          </ng-container>\\n                              \\n                                       \\n                                          <ng-container matColumnDef=\\\"name\\\">\\n                                            <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n                                            <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n                                          </ng-container>\\n                              \\n                                         \\n                                          <ng-container matColumnDef=\\\"age\\\">\\n                                            <mat-header-cell *matHeaderCellDef> Age </mat-header-cell>\\n                                            <mat-cell *matCellDef=\\\"let element\\\"> {{element.age}} </mat-cell>\\n                                            \\n                                          </ng-container>\\n\\n                                        \\n                                          <ng-container matColumnDef=\\\"gender\\\">\\n                                            <mat-header-cell *matHeaderCellDef> Gender </mat-header-cell>\\n                                            <mat-cell *matCellDef=\\\"let element\\\"> {{element.gender}} </mat-cell>\\n                                          </ng-container>\\n                              \\n                                          <ng-container matColumnDef=\\\"action\\\">\\n                                              <mat-header-cell *matHeaderCellDef>Action </mat-header-cell>\\n                                              <mat-cell *matCellDef=\\\"let element\\\"> {{element.action}} </mat-cell>\\n                                            </ng-container>\\n                                            \\n                                          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                                          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                                        </mat-table>\\n                                      </div>\\n\\n                                </mat-tab>\\n\\n                            </mat-tab-group>\\n                       </div>\\n                </div>\\n\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 90%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVtZW1iZXJzL2NsaWVudDIvc3JjL2FwcC9wYXRpZW50LWluZm8vcGF0aWVudC1pbmZvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWdCO0VBQ2hCLGlCQUFnQjtFQUNoQixZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxXQUFVLEVBQ1giLCJmaWxlIjoic3JjL2FwcC9wYXRpZW50LWluZm8vcGF0aWVudC1pbmZvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybSB7XG4gIG1pbi13aWR0aDogMTUwcHg7XG4gIG1heC13aWR0aDogNTAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDkwJTtcbn1cbiJdfQ== */\"","import { Component,OnInit,Inject, AfterViewInit  } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, Validators } from '@angular/forms';\nimport { PatientInfoService } from './patient-info.service';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatTableDataSource,MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\n\nconst ELEMENT_DATA: Element[] = [\n  { position: 1, name: 'sam', age: 22, gender: 'MALE', action: '2' },\n  { position: 2, name: 'ron', age: 23, gender: 'MALE', action: '3' },\n  { position: 3, name: 'justin', age: 43, gender: 'MALE', action: '4' },\n  { position: 4, name: 'thomas', age: 23, gender: 'MALE', action: '5' },\n  { position: 5, name: 'timber', age: 10, gender: 'MALE', action: '5' },\n  { position: 6, name: 'elesa', age: 12, gender: 'FEMALE', action: '5'        },\n\n];\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example.html',\n})\n\n\nexport class DialogOverviewExampleDialogComponent {\n\n  constructor(\n    \n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n\n@Component({\n  selector: 'app-formlayout',\n  templateUrl: './patient-info.component.html',\n  styleUrls: ['./patient-info.component.scss']\n})\nexport class PatientInfoComponent implements OnInit {\n  \n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\n  bufferValue = 75;\n  public id:any ={};\n  public imageURL:any;\n  public patient_amount : any;\n  public total_subpatient:any;\n  public contract_url:any;\n  public form: FormGroup;\n  options: FormGroup;\n  public position;\n  public name;\n  public age;\n  public gender;\n  public discount;\n  public treatmentdata;\n  private warningMessage: string;\n\n  constructor(private fb: FormBuilder,public dialog: MatDialog,  private patientInfoService: PatientInfoService, private route: ActivatedRoute,private _cookieService: CookieService, private router: Router,breakpointObserver: BreakpointObserver) {\n//  this.clinic_id = this.route.snapshot.paramMap.get(\"id\");\nbreakpointObserver.observe(['(max-width: 600px)']).subscribe(result => {\n  this.displayedColumns = result.matches ? \n      ['position', 'name', 'age', 'gender','action'] : \n      ['position', 'name', 'age', 'gender','action'];\n});\n    this.options = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto'\n    });\n  }\n\n  \n  displayedColumns = ['position', 'name', 'age', 'gender','action'];\n  dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n  openDialog(): void {\n      \n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n      width: '250px',\n      data: { position: this.position, name: this.name, age: this.age ,gender: this.gender }\n     \n    });\n\n  }\n  \n\n  ngOnInit() {\n    \n    this.id = this.route.snapshot.paramMap.get(\"id\");\n    this.getSubPatients();\n    this.getPatientContract();\n    $('.header_filters').removeClass('hide_header'); \n    $('nb.header_filters').removeClass('flex_direct_mar'); \n      $('.external_clinic').show();\n        $('.dentist_dropdown').hide();\n        $('.header_filters').addClass('flex_direct_mar');\n      this.route.params.subscribe(params =>  {\n    \n       // this.getClinicGoals();\n        $('#title').html('Patient Plan Detail');\n     });\n\n     this.form = this.fb.group({\n     \n    });\n    \n  }\n  rows = [];\n  // For form validator\n  // email = new FormControl('', [Validators.required, Validators.email]);\n\n  // // Sufix and prefix\n  // hide = true;\n\n  // getErrorMessage() {\n  //   return this.email.hasError('required')\n  //     ? 'You must enter a value'\n  //     : this.email.hasError('email')\n  //       ? 'Not a valid email'\n  //       : '';\n  // }\n\n  getSubPatients() {\n\n    this.patientInfoService.getSubPatients(this.id).subscribe((res) => {\n  \n       if(res.message == 'success'){\n        this.rows = res.data[0]['sub_patients'];\n        this.patient_amount=res.data[0]['total_amount'];\n        this.total_subpatient=res.data[0]['sub_patients'].length;\n       }\n        else if(res.status == '401'){\n              this._cookieService.put(\"username\",'');\n              this._cookieService.put(\"email\", '');\n              this._cookieService.put(\"token\", '');\n              this._cookieService.put(\"userid\", '');\n               this.router.navigateByUrl('/login');\n           }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n  }\n  getPatientContract(){\n      this.patientInfoService.getPatientContract(this.id).subscribe((res) => {\n        if(res.message == 'success'){\n         this.contract_url = res.data['contract_upload'];\n          }\n        \n         else if(res.status == '401'){\n               this._cookieService.put(\"token\", '');\n               this._cookieService.put(\"userid\", '');\n                this.router.navigateByUrl('/login');\n            }\n     }, error => {\n       this.warningMessage = \"Please Provide Valid Inputs!\";\n     }    \n     );\n    }\n  onSubmit() {\n    if(this.imageURL == undefined){\n      alert(\"Please Upload file\");\n    \n    }else{\n\n        this.patientInfoService.updatePatients(this.id,this.imageURL).subscribe((res) => {\n        console.log(this.imageURL);\n          if(res.message == 'success'){\n          alert('Document Uploaded');\n          this.getPatientContract();\n          }\n          }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n          }   \n        );\n        }\n  }\n  public fileToUpload;\n  uploadImage(files: FileList) {\n     this.fileToUpload = files.item(0);\n     const extension = this.fileToUpload.name.split('.')[1].toLowerCase();\n     if(extension !== \"pdf\"){\n      alert('Please Upload PDF file');\n      return null;\n    }else\n    {\n      let formData = new FormData();\n     formData.append('file', this.fileToUpload, this.fileToUpload.name);\n\n     this.patientInfoService.contractUpload(formData).subscribe((res) => {\n         if(res.message == 'success'){\n         this.imageURL= res.data;\n           }\n         });\n      }\n   }\n}\nexport interface Element {\n  name: string;\n  position: number;\n  age: number;\n  gender: string;\n  action :any;\n}","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PatientInfoRoutes } from './patient-info.routing';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { QuillModule } from 'ngx-quill';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\nimport { PatientInfoComponent,DialogOverviewExampleDialogComponent } from './patient-info.component';\n\nimport { PatientInfoService } from './patient-info.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(PatientInfoRoutes),\n    DemoMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    QuillModule,\n    MatInputModule,\n    NgxDatatableModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    MatTreeModule,\n    MatDatepickerModule,\n    NgMultiSelectDropDownModule.forRoot()\n  ],\n  providers: [\n    PatientInfoService\n  ],\n  entryComponents: [DialogOverviewExampleDialogComponent],\n  declarations: [\n    PatientInfoComponent,DialogOverviewExampleDialogComponent\n  ]\n})\nexport class PatientInfoModule {}\n","import { Routes } from '@angular/router';\n\nimport { PatientInfoComponent } from './patient-info.component';\n\nexport const PatientInfoRoutes: Routes = [\n  {\n   path: '',\n    component: PatientInfoComponent,\n    data: {\n      title: 'Patient Detail'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class PatientInfoService {\n\n   public token: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   \n    getSubPatients(patient_id, token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Patients/getAllPatientByID?patient_id=\"+patient_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                    })\n        );\n    }\n\n    getPatientContract(patient_id, token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Patients/getPatientContract?patient_id=\"+patient_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                    })\n        );\n    }\n\n    \n    updatePatients(patient_id,contract_upload): Observable<any> {\n        const formData = new FormData();\n    \n        formData.append('patient_id', patient_id);\n        // formData.append('member_plan_id',member_plan_id);\n        // formData.append('status',patient_status);\n        // formData.append('token', token);\n        formData.append('contract_upload', contract_upload);\n            return this.http.post(this.apiUrl +\"/Patients/UploadContract/\", formData)\n            .pipe(map((response: Response) => {\n          //      console.log(response);\n                            return response;\n                        })\n            );\n    }\n\n\n    contractUpload( formData): Observable<any> {\n       \n        formData.append('id', this._cookieService.get(\"userid\"));\n        formData.append('token', this._cookieService.get(\"token\"));\n\n    return this.http.post(this.apiUrl +\"/Patients/logoUpload/\", formData)\n    .pipe(map((response: Response) => {\n        // console.log(response);\n        \n                    return response;\n                })\n    );\n    }\n       \n}\n\n"],"sourceRoot":""}