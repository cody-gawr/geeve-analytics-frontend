{"version":3,"sources":["webpack:///./src/app/patient-info/dialog-overview-example.html","webpack:///./src/app/patient-info/patient-info.component.html","webpack:///./src/app/patient-info/patient-info.component.scss","webpack:///./src/app/patient-info/patient-info.component.ts","webpack:///./src/app/patient-info/patient-info.module.ts","webpack:///./src/app/patient-info/patient-info.routing.ts","webpack:///./src/app/patient-info/patient-info.service.ts"],"names":[],"mappings":"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","file":"patient-info-patient-info-module.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title>Add/Edit Benefits</h1>\\n<div mat-dialog-content>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.treatmentName\\\" placeholder=\\\"Benefits\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" type=\\\"number\\\" id=\\\"totalsittings\\\" min=\\\"0\\\" (change)=\\\"totalsittings(data.totalsitting)\\\" [(ngModel)]=\\\"data.totalsitting\\\" placeholder=\\\"No. of sittings\\\">\\n  </mat-form-field>\\n\\n  <ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='data.sittings'>\\n   \\n    <ngx-datatable-column prop=\\\"sr\\\" name=\\\"sr\\\">\\n          <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Sittings</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span>\\n            Sittings {{rowIndex + 1}}\\n          </span>\\n        </ng-template>\\n\\n    </ngx-datatable-column>\\n      <ngx-datatable-column prop=\\\"sitting_status\\\" name=\\\"sitting_status\\\">\\n          <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Sitting status</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span >\\n            <mat-checkbox checked=\\\"true\\\" *ngIf=\\\"value=='ACTIVE'\\\" (change)=\\\"statusupdate(rowIndex,$event)\\\">\\n\\n            </mat-checkbox>\\n            <mat-checkbox  *ngIf=\\\"value=='INACTIVE'\\\" (change)=\\\"statusupdate(rowIndex,$event)\\\">\\n     \\n            </mat-checkbox>\\n          </span>\\n            </ng-template>\\n      </ngx-datatable-column>\\n    \\n    <ngx-datatable-column prop=\\\"performed_date\\\" name=\\\"performed_date\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n      <span>Performed Date</span>\\n    </ng-template>\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\"   let-row=\\\"row\\\" let-value=\\\"value\\\">\\n        <span *ngIf=\\\"value !=='NULL'\\\" >\\n          {{value | date: 'dd-MM-yyyy'}}\\n        </span>\\n            </ng-template>\\n    </ngx-datatable-column>\\n    \\n    <ngx-datatable-column prop=\\\"id\\\" name=\\\"id\\\">\\n      <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n    <span>Action</span>\\n  </ng-template>\\n    <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n      <span >\\n        <button mat-button tabindex=\\\"-1\\\"  *ngIf=\\\"value==''\\\" (click)=\\\"deleterow(rowIndex)\\\"  class=\\\"mat-raised-button mat-gray\\\">Delete</button>\\n      </span>\\n          </ng-template>\\n  </ngx-datatable-column>\\n\\n  </ngx-datatable>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\\n\\n\\n\"","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n               \\r\\n                <mat-card-title> Patient Plan Details | {{mainpatientname | titlecase}}</mat-card-title>\\r\\n               <!-- ============================================================== -->\\r\\n                <!-- column -->\\r\\n                <!-- ============================================================== -->\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                    <!-- Card column -->\\r\\n                    <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\" class=\\\"sa_mattabs_design sa_matforms_design\\\">\\r\\n\\r\\n                            <mat-tab-group dynamicHeight>\\r\\n                         \\r\\n                        <!-- Plan Details tab -->\\r\\n                              <mat-tab label=\\\"Plan Details\\\">\\r\\n                                <form>                                \\r\\n                                  <table>\\r\\n                                      <tr>\\r\\n                                          <th>Plan</th>\\r\\n                                          <td>&nbsp;&nbsp;</td>\\r\\n                                          <td>{{plan_name}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <th>No. of Members</th>\\r\\n                                            <td>&nbsp;&nbsp;</td>\\r\\n                                            <td>{{total_subpatient}}</td>\\r\\n                                          </tr>\\r\\n                                    <tr>\\r\\n                                      <th>Payment Amount</th>\\r\\n                                      <td>&nbsp;&nbsp;</td>\\r\\n                                      <td>${{patient_amount}}</td>\\r\\n                                    </tr>\\r\\n                                  \\r\\n                                    <tr>\\r\\n                                      <th>&nbsp;</th>\\r\\n                                     </tr>\\r\\n                                   </table>\\r\\n                                </form>\\r\\n\\r\\n                                   \\r\\n                         <ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\r\\n                                  [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\r\\n                             <ngx-datatable-column prop=\\\"sr\\\" name=\\\"sr\\\">\\r\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                              <span>Id</span>\\r\\n                            </ng-template>\\r\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n                                <span>\\r\\n                                  {{rowIndex + 1}}\\r\\n                                </span>\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column prop=\\\"sub_patients_name\\\" name=\\\"sub_patients_name\\\">\\r\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                              <span>Name</span>\\r\\n                            </ng-template>\\r\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                                <span >\\r\\n                                  {{value}}\\r\\n                                </span>\\r\\n                                    </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                      \\r\\n                             <ngx-datatable-column prop=\\\"sub_patients_age\\\" name=\\\"sub_patients_age\\\">\\r\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                              <span>Age</span>\\r\\n                            </ng-template>\\r\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                                <span >\\r\\n                                  {{value}}\\r\\n                                </span>\\r\\n                               \\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                      \\r\\n                            <ngx-datatable-column prop=\\\"sub_patients_gender\\\" name=\\\"sub_patients_gender\\\">\\r\\n                              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                             <span>Gender</span>\\r\\n                           </ng-template>\\r\\n                             <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                               <span >\\r\\n                                 {{value}}\\r\\n                               </span>\\r\\n                              \\r\\n                             </ng-template>\\r\\n                           </ngx-datatable-column>\\r\\n                      \\r\\n                        \\r\\n                          </ngx-datatable>\\r\\n\\r\\n                            </mat-tab>\\r\\n\\r\\n                        <!-- Benefits Used tab -->\\r\\n                          <mat-tab label=\\\"Benefits Used\\\">\\r\\n\\r\\n                              <ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\r\\n                                      [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='benefit'>\\r\\n                                 <ngx-datatable-column prop=\\\"sr\\\" name=\\\"sr\\\">\\r\\n                                   <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                                  <span>Id</span>\\r\\n                                </ng-template>\\r\\n                                  <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n                                    <span>\\r\\n                                      {{rowIndex + 1}}\\r\\n                                    </span>\\r\\n                                  </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n                                <ngx-datatable-column prop=\\\"treatmentName\\\" name=\\\"treatmentName\\\">\\r\\n                                   <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                                  <span>Treatment Name</span>\\r\\n                                </ng-template>\\r\\n                                  <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                                    <span >\\r\\n                                      {{value}}\\r\\n                                    </span>\\r\\n                                        </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n                          \\r\\n                                 <ngx-datatable-column prop=\\\"percentage\\\" name=\\\"percentage\\\">\\r\\n                                   <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                                  <span>Percentage</span>\\r\\n                                </ng-template>\\r\\n                                  <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                                    <span >\\r\\n                                      {{value}} %\\r\\n                                    </span>\\r\\n                                   \\r\\n                                    <mat-progress-bar mode=\\\"determinate\\\" value={{value}}></mat-progress-bar>\\r\\n                                  </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n                          \\r\\n                                <ngx-datatable-column prop=\\\"percentage\\\" name=\\\"percentage\\\">\\r\\n                                  <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                                 <span>Status</span>\\r\\n                               </ng-template>\\r\\n                                 <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                                   <span *ngIf=\\\"value=='100.00'\\\" >\\r\\n                                    Completed\\r\\n                                   </span>\\r\\n                                   <span *ngIf=\\\"value!=='100.00'\\\" >\\r\\n                                    In-Process\\r\\n                                   </span>\\r\\n                                  \\r\\n                                  \\r\\n                                 </ng-template>\\r\\n                               </ngx-datatable-column>\\r\\n                          \\r\\n                               <ngx-datatable-column prop=\\\"performed_date\\\" name=\\\"performed_date\\\">\\r\\n                                <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                               <span>Completion Date</span>\\r\\n                             </ng-template>\\r\\n                               <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                              \\r\\n                                <span>\\r\\n                                   {{value | date: 'dd-MM-yyyy'}}\\r\\n                                 </span>\\r\\n                                \\r\\n                               </ng-template>\\r\\n\\r\\n                             </ngx-datatable-column>\\r\\n                            \\r\\n                             <ngx-datatable-column name=\\\"id\\\">\\r\\n                              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                             <span>Actions</span>\\r\\n                           </ng-template>\\r\\n                             <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" style=\\\"width:266px!important;\\\">\\r\\n                               <a class=\\\"action_btn golden\\\" (click)=\\\"openDialog(rowIndex)\\\" title= 'Patients Details'><i class=\\\"ti-settings  m-r-10\\\"></i></a>\\r\\n                               <button class=\\\"action_btn danger\\\" mat-menu-item (click) = \\\"deleteBenefitsUsed(rowIndex)\\\">\\r\\n                              <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\r\\n                             </ng-template>\\r\\n                           </ngx-datatable-column>\\r\\n\\r\\n                              </ngx-datatable>\\r\\n    \\r\\n                                </mat-tab>\\r\\n\\r\\n                      <!-- Contract Upload tab -->\\r\\n                                <mat-tab label=\\\"Contract Upload\\\">\\r\\n                             \\r\\n                                  <form [formGroup]=\\\"form\\\" class=\\\"basic-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                                    <div class=\\\"bd_UpoadImage\\\" fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                                        <label>Upload Agreement</label><br>\\r\\n                                        <div class=\\\"upload-btn\\\">\\r\\n                                            <span>Choose file</span>\\r\\n                                            <input class=\\\"\\\" type=\\\"file\\\" placeholder=\\\"\\\" name= \\\"file\\\" id=\\\"file\\\" (change)=\\\"uploadImage($event.target.files)\\\">\\r\\n                                            <input type='hidden'  placeholder=\\\"\\\" id=\\\"imageURL\\\" >\\r\\n                                        </div>\\r\\n                                                          \\r\\n                                     </div>\\r\\n                               \\r\\n                                   <p>\\r\\n                                      <button mat-raised-button color=\\\"dc\\\">Save</button>\\r\\n                                   </p>\\r\\n                                   </form>\\r\\n                                  <p *ngIf=\\\"contract_url; else empty\\\">\\r\\n                                    Download Agreement\\r\\n                                    <a mat-raised-button class=\\\"contractupload\\\" color=\\\"accent\\\" target=\\\"_blank\\\" href=\\\"{{contract_url}}\\\">Download</a>\\r\\n                                </p>\\r\\n                                </mat-tab>\\r\\n\\r\\n                    <!-- Payment History tab -->\\r\\n\\r\\n                          <mat-tab label=\\\"Payment History\\\">\\r\\n                                 \\r\\n                           <ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\r\\n                                  [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='payment'>\\r\\n                             <ngx-datatable-column prop=\\\"sr\\\" name=\\\"sr\\\">\\r\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                              <span>Id</span>\\r\\n                            </ng-template>\\r\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n                                <span>\\r\\n                                  {{rowIndex + 1}}\\r\\n                                </span>\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column prop=\\\"customer_id\\\" name=\\\"customer_id\\\">\\r\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                              <span>Customer ID</span>\\r\\n                            </ng-template>\\r\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                                <span >\\r\\n                                  {{value}}\\r\\n                                </span>\\r\\n                                    </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n\\r\\n                            <ngx-datatable-column prop=\\\"subscr_id\\\" name=\\\"subscr_id\\\">\\r\\n                              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                             <span>Subscriber ID</span>\\r\\n                           </ng-template>\\r\\n                             <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                               <span >\\r\\n                                 {{value}}\\r\\n                               </span>\\r\\n                                   </ng-template>\\r\\n                           </ngx-datatable-column>\\r\\n\\r\\n                             <ngx-datatable-column prop=\\\"invoice_date\\\" name=\\\"invoice_date\\\">\\r\\n                               <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                              <span>Invoice Date</span>\\r\\n                            </ng-template>\\r\\n                              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                                <span >\\r\\n                                  {{value | date: 'dd-MM-yyyy'}}\\r\\n                                </span>\\r\\n                               \\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                      \\r\\n                            <ngx-datatable-column prop=\\\"payment_plan_name\\\" name=\\\"payment_plan_name\\\">\\r\\n                              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                             <span>Plan </span>\\r\\n                           </ng-template>\\r\\n                             <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                               <span >\\r\\n                                 {{payment_plan_name}}\\r\\n                               </span>\\r\\n                              \\r\\n                             </ng-template>\\r\\n                           </ngx-datatable-column>\\r\\n\\r\\n\\r\\n                            <ngx-datatable-column prop=\\\"amount\\\" name=\\\"amount\\\">\\r\\n                              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                             <span>Amount</span>\\r\\n                           </ng-template>\\r\\n                             <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                               <span >\\r\\n                                 {{value}}\\r\\n                               </span>\\r\\n                              \\r\\n                             </ng-template>\\r\\n                           </ngx-datatable-column>\\r\\n                      \\r\\n\\r\\n                            <ngx-datatable-column prop=\\\"payment_status\\\" name=\\\"payment_status\\\">\\r\\n                              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\r\\n                             <span>Payment Status</span>\\r\\n                           </ng-template>\\r\\n                             <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n                               <span >\\r\\n                                 {{value}}\\r\\n                               </span>\\r\\n                              \\r\\n                             </ng-template>\\r\\n                           </ngx-datatable-column>\\r\\n                      \\r\\n                        \\r\\n                          </ngx-datatable>\\r\\n\\r\\n                                </mat-tab>\\r\\n\\r\\n                            </mat-tab-group>\\r\\n                       </div>\\r\\n                </div>\\r\\n\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n \"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 90%; }\\n\\n.sa_plan_show {\\n  width: 100%;\\n  text-align: left;\\n  margin-bottom: 10px; }\\n\\n.sa_plan_show td {\\n  padding: 4px 10px;\\n  background: #f2f2f2;\\n  border: 1px solid #ccc; }\\n\\n.sa_userstable {\\n  width: 100%; }\\n\\n.sa_plan_show th {\\n  padding: 4px 10px;\\n  background: #f2f2f2;\\n  border: 1px solid #ccc;\\n  font-weight: 400;\\n  width: 280px; }\\n\\n.sa_upload_sec {\\n  text-align: center;\\n  padding: 40px 20px 20px;\\n  border: 2px dotted #ccc;\\n  min-height: 220px; }\\n\\n.sa_download_sec {\\n  text-align: center;\\n  padding: 40px 20px 20px;\\n  background: #f2f2f2;\\n  min-height: 220px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVtZW1iZXJzL2NsaWVudDIvc3JjL2FwcC9wYXRpZW50LWluZm8vcGF0aWVudC1pbmZvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWdCO0VBQ2hCLGlCQUFnQjtFQUNoQixZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxXQUFVLEVBQ1g7O0FBRUQ7RUFBYyxZQUFVO0VBQUUsaUJBQWU7RUFBRSxvQkFBa0IsRUFBRzs7QUFDaEU7RUFBaUIsa0JBQWdCO0VBQUUsb0JBQWtCO0VBQUUsdUJBQXFCLEVBQUc7O0FBQy9FO0VBQWUsWUFBVSxFQUFHOztBQUM1QjtFQUFpQixrQkFBZ0I7RUFBRSxvQkFBa0I7RUFBRSx1QkFBcUI7RUFBRSxpQkFBZTtFQUFFLGFBQVcsRUFBRzs7QUFDN0c7RUFBZSxtQkFBa0I7RUFDL0Isd0JBQXVCO0VBQ3ZCLHdCQUF1QjtFQUN2QixrQkFBZ0IsRUFDakI7O0FBRUQ7RUFBaUIsbUJBQWtCO0VBQ2pDLHdCQUF1QjtFQUN4QixvQkFBa0I7RUFBRSxrQkFBZ0IsRUFBRSIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQtaW5mby9wYXRpZW50LWluZm8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mb3JtIHtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiA5MCU7XHJcbn1cclxuXHJcbi5zYV9wbGFuX3Nob3d7d2lkdGg6MTAwJTsgdGV4dC1hbGlnbjpsZWZ0OyBtYXJnaW4tYm90dG9tOjEwcHg7fVxyXG4uc2FfcGxhbl9zaG93IHRke3BhZGRpbmc6NHB4IDEwcHg7IGJhY2tncm91bmQ6I2YyZjJmMjsgYm9yZGVyOjFweCBzb2xpZCAjY2NjO31cclxuLnNhX3VzZXJzdGFibGV7d2lkdGg6MTAwJTt9XHJcbi5zYV9wbGFuX3Nob3cgdGh7cGFkZGluZzo0cHggMTBweDsgYmFja2dyb3VuZDojZjJmMmYyOyBib3JkZXI6MXB4IHNvbGlkICNjY2M7IGZvbnQtd2VpZ2h0OjQwMDsgd2lkdGg6MjgwcHg7fVxyXG4uc2FfdXBsb2FkX3NlY3t0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogNDBweCAyMHB4IDIwcHg7XHJcbiAgYm9yZGVyOiAycHggZG90dGVkICNjY2M7XHJcbiAgbWluLWhlaWdodDoyMjBweDtcclxufVxyXG5cclxuLnNhX2Rvd25sb2FkX3NlY3t0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogNDBweCAyMHB4IDIwcHg7XHJcbiBiYWNrZ3JvdW5kOiNmMmYyZjI7IG1pbi1oZWlnaHQ6MjIwcHg7fSJdfQ== */\"","import { Component,OnInit,Inject, EventEmitter,Output, AfterViewInit  } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, Validators } from '@angular/forms';\nimport { PatientInfoService } from './patient-info.service';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatTableDataSource,MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { NotifierService } from 'angular-notifier';\nimport { DatePipe,formatDate } from '@angular/common';\n\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { empty } from 'rxjs';\n\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example.html',\n})\n\n\nexport class DialogOverviewExampleDialogComponent {\n\n  constructor(\n     public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) { }\n    onNoClick(): void {\n    this.dialogRef.close();\n  }\n  @Output() public sittingsUpdate: EventEmitter<any> = new EventEmitter();\n  @Output() public getSittings: EventEmitter<any> = new EventEmitter();\n  @Output() public deletesittingid: EventEmitter<any> = new EventEmitter();\n  statusupdate(sittingIndex,event){\n    \n    if(event.checked==true){\n      event.checked ='ACTIVE';\n    }else{\n      event.checked==false\n      event.checked ='INACTIVE';\n    }\n\n   var settingstatus = event.checked;\n    // console.log(settingstatus);\n\n    this.sittingsUpdate.emit({settingstatus:settingstatus, sittingIndex: sittingIndex},);\n  }\n  totalsittings(gettotalsittings){\n\n    console.log(gettotalsittings);\n    this.getSittings.emit(gettotalsittings);\n  }\n\n  deleterow(deleteindex){\n    // console.log(deleteindex);\n   this.deletesittingid.emit(deleteindex);\n  }\n\n }\n\nconst data: any = [];\n@Component({\n  selector: 'app-formlayout',\n  templateUrl: './patient-info.component.html',\n  styleUrls: ['./patient-info.component.scss']\n})\nexport class PatientInfoComponent implements OnInit {\n  private readonly notifier: NotifierService;\n\n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\n  bufferValue = 75;\n  public id:any ={};\n  public imageURL:any;\n  public patient_amount : any;\n  public member_plan_id:any;\n  public total_subpatient:any;\n  public contract_url:any;\n  public plan_name:any;\n  public form: FormGroup;\n  options: FormGroup;\n  public treatmentdata;\n  private warningMessage: string;\n  public treatmentName :any={};\n  public totalsitting :any={};\n  public sitting_id :any= {};\n  public sitting_status :any={};\n  public performed_date :any={};\n  sittings=[];\n  public clinic_id:any={};\n  public user_id:any={};\n  public memberplanid:any={};\n  public invoice_date:any={};\n  public benefit_patient_id: any={};\n  public benefit_planid: any={};\n  public patientid:any={};\n  public membertreatmentid:any={};\n  public payment_plan_name:any ={};\n  public mainpatientname;\n  rows = [];\n  benefit =[];\n  payment=[];\n  editing ={};\n \n\n  constructor(notifierService: NotifierService,private fb: FormBuilder,public dialog: MatDialog,  private patientInfoService: PatientInfoService, private route: ActivatedRoute,private _cookieService: CookieService, private router: Router,breakpointObserver: BreakpointObserver) {\n    this.notifier = notifierService;\n    }\n\n   openDialog(treatmentIndex,): void {\n    this.getBenefitsUsed();\n    this.treatmentName = this.benefit[treatmentIndex]['treatmentName'];\n    this.totalsitting= this.benefit[treatmentIndex]['patients_sittings'];\n    if(this.benefit[treatmentIndex]['sittinginfo'])\n    this.sittings= this.benefit[treatmentIndex]['sittinginfo'];\n\n    this.memberplanid = this.benefit[treatmentIndex]['member_plan_id'];\n    this.patientid = this.benefit[treatmentIndex]['patient_id'];\n    this.membertreatmentid = this.benefit[treatmentIndex]['member_treatment_id'];\n    \n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n     width: '250px',\n      data: { treatmentName: this.treatmentName, totalsitting: this.totalsitting, sitting_status: this.sitting_status , sitting_id: this.sitting_id ,sittings: this.sittings ,memberplanid: this.memberplanid}\n      });\n    \n    const sub1 = dialogRef.componentInstance.getSittings.subscribe((gettotalsittings) => {\n      //  console.log(gettotalsittings)\n      // console.log(this.sittings)\n      // console.log(gettotalsittings);\n    \n      var sittingscount = this.sittings.length;\n\n       if(sittingscount==0){\n        for (let index = 0; index < gettotalsittings; index++) {\n          this.sittings[index]= {id:\"\",patient_id:this.id, sitting_status: \"\" };\n           } \n      }else{\n           for (let index = sittingscount; index < gettotalsittings; index++) {\n            this.sittings[index]= {id:\"\",patient_id:this.id, sitting_status: \"\" };\n            } \n       }\n       });\n\n       const sub2 = dialogRef.componentInstance.deletesittingid.subscribe((deleteindex) => {\n        // var ar = this.sittings;\n        // delete ar[deleteindex];\n        // this.sittings.shift(deleteindex);\n        \n        // console.log(ar);\n\n        var my_array = this.sittings;\n        var start_index = deleteindex\n        var number_of_elements_to_remove = deleteindex;\n        var removed_elements = my_array.splice(start_index, number_of_elements_to_remove);\n        this.totalsitting = this.sittings.length;\n\n         $(\"#totalsittings\").val(this.totalsitting);\n        console.log(this.totalsitting)\n        console.log(removed_elements);\n        console.log(my_array);\n        \n        });\n\n        \n    const sub = dialogRef.componentInstance.sittingsUpdate.subscribe((settingstatus,sittingsIndex) => {\n      this.getBenefitsUsed();   \n      this.benefit_patient_id = this.benefit[treatmentIndex]['patient_id'];\n      this.benefit_planid = this.benefit[treatmentIndex]['member_plan_id'];\n      this.sitting_id = this.benefit[treatmentIndex]['sittinginfo'][settingstatus['sittingIndex']]['id'];\n      this.sitting_status = settingstatus['settingstatus'];\n      this.performed_date = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n\n     //  console.log(this.sitting_id);\n     // console.log( treatmentIndex);\n     // console.log(this.sitting_status);\n     // console.log(settingstatus['sittingIndex']);\n     \n\n      this.patientInfoService.updateSittingStatus(this.benefit_patient_id, this.benefit_planid,this.sitting_id,this.sitting_status,this.performed_date).subscribe((res) => {\n        if(res.message == 'success'){\n          this.getBenefitsUsed();\n          this.notifier.notify( 'success', 'Sittings Updated' ,'vertical');\n               }\n      });\n      });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // var sitting =JSON.stringify(this.sittings);\n      var sittingUpdated ={};\n      for (let index = 0; index < this.sittings.length; index++) {\n        var element = this.sittings[index];\n        var temp = {};\n        temp['sitting_id'] = element['id'];\n        temp['patient_id'] = element['patient_id'];\n        temp['sitting_status'] = element['sitting_status'];\n        temp['performed_date'] = element['performed_date'];\n\n        sittingUpdated[index] = temp;\n    }\n    var sittingUpdatedString =JSON.stringify(sittingUpdated); \n    console.log(sittingUpdatedString);\n\n       var totalsiting =this.sittings.length;\n      this.getBenefitsUsed();\n      this.patientInfoService.addBenefits(this.id, this.memberplanid,this.membertreatmentid,totalsiting,sittingUpdatedString).subscribe((res) => {\n        this.getBenefitsUsed();\n            if(res.message == 'success'){\n              console.log(res);\n               this.notifier.notify( 'success', 'Sittings Updated' ,'vertical');\n                }\n      }, error => {\n        this.warningMessage = \"Please Provide Valid Inputs!\";\n      }\n      );\n      });\n\n  }\n  \n  ngOnInit() {\n   \n    this.id = this.route.snapshot.paramMap.get(\"id\");\n    this.getSubPatients();\n    this.getPatientContract();\n   \n    $('.header_filters').removeClass('hide_header'); \n    $('nb.header_filters').removeClass('flex_direct_mar'); \n      $('.external_clinic').show();\n        $('.dentist_dropdown').hide();\n        $('.header_filters').addClass('flex_direct_mar');\n      this.route.params.subscribe(params =>  {\n    \n       // this.getClinicGoals();\n        $('#title').html('Patient Plan Detail');\n     });\n\n     this.form = this.fb.group({\n     \n    });\n    \n      }\n   \n  getSubPatients() {\n\n    this.patientInfoService.getSubPatients(this.id).subscribe((res) => {\n  \n       if(res.message == 'success'){\n\n         console.log(res.data);\n        var patientArray ={};\n        patientArray['sub_patients_name'] = res.data[0]['patient_name'];\n        patientArray['sub_patients_age'] = res.data[0]['patient_age'];\n        patientArray['sub_patients_gender'] = res.data[0]['patient_gender'];\n        patientArray['sub_patients_amount'] = res.data[0]['member_plan']['totalAmount'];\n\n        this.rows = res.data[0]['sub_patients'];\n        var sub_patient_length = this.rows.length;\n        this.rows[sub_patient_length] = patientArray;\n        this.patient_amount=res.data[0]['total_amount'];\n        this.total_subpatient=res.data[0]['sub_patients'].length;\n        this.member_plan_id= res.data[0]['member_plan_id'];\n        this.plan_name=res.data[0]['member_plan']['planName'];\n        this.clinic_id=res.data[0]['clinic_id'];\n        this.user_id=res.data[0]['user_id'];\n        this.mainpatientname = res.data[0]['patient_name'];\n        this.getBenefitsUsed();\n        this.getPaymentHistory();\n       }\n        else if(res.status == '401'){\n              this._cookieService.put(\"username\",'');\n              this._cookieService.put(\"email\", '');\n              this._cookieService.put(\"token\", '');\n              this._cookieService.put(\"userid\", '');\n               this.router.navigateByUrl('/login');\n           }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n  }\n  getPaymentHistory() {\n\n    this.patientInfoService.getPaymentHistory(this.id,this.member_plan_id,this.user_id,this.clinic_id).subscribe((res) => {\n  \n       if(res.message == 'success'){\n        this.payment = res.data;\n        this.payment_plan_name=res.data[0]['member_plan']['planName'];\n        }\n        else if(res.status == '401'){\n              this._cookieService.put(\"username\",'');\n              this._cookieService.put(\"email\", '');\n              this._cookieService.put(\"token\", '');\n              this._cookieService.put(\"userid\", '');\n               this.router.navigateByUrl('/login');\n           }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n  }\n  getPatientContract(){\n      this.patientInfoService.getPatientContract(this.id).subscribe((res) => {\n          if(res.message == 'success'){\n         this.contract_url = res.data['contract_upload'];\n          }\n        \n         else if(res.status == '401'){\n               this._cookieService.put(\"token\", '');\n               this._cookieService.put(\"userid\", '');\n                this.router.navigateByUrl('/login');\n            }\n     }, error => {\n       this.warningMessage = \"Please Provide Valid Inputs!\";\n     }    \n     );\n    }\n\n\n\n  onSubmit() {\n    if(this.imageURL == undefined){\n      alert(\"Please Upload file\");\n    \n    }else{\n      $('.ajax-loader').show();      \n\n        this.patientInfoService.updatePatients(this.id,this.member_plan_id,this.imageURL).subscribe((res) => {\n      $('.ajax-loader').hide();      \n      \n        // console.log(this.imageURL);\n          if(res.message == 'success'){\n            this.notifier.notify( 'success', 'Document Uploaded' ,'vertical');\n               this.getPatientContract();\n            }\n           }, error => {\n          this.warningMessage = \"Please Provide Valid Inputs!\";\n            }   \n           );\n        }\n      }\n  public fileToUpload;\n  uploadImage(files: FileList) {\n    this.fileToUpload = files.item(0);\n    const extension = this.fileToUpload.name.split('.')[1].toLowerCase();\n    if(extension !== \"pdf\"){\n      alert('Please Upload PDF file');\n      return null;\n    }else\n    {\n      $('.ajax-loader').show();      \n\n      let formData = new FormData();\n    formData.append('file', this.fileToUpload, this.fileToUpload.name);\n\n    this.patientInfoService.contractUpload(formData).subscribe((res) => {\n      $('.ajax-loader').hide();      \n\n        if(res.message == 'success'){\n        this.imageURL= res.data;\n          }\n        });\n      }\n  }\n  getBenefitsUsed(){\n\n    this.patientInfoService.getBenefitsUsed(this.id,this.member_plan_id).subscribe((res) => {\n  \n      if(res.message == 'success'){\n        this.benefit = res.data;\n       \n          }\n       else if(res.status == '401'){\n             this._cookieService.put(\"username\",'');\n             this._cookieService.put(\"email\", '');\n             this._cookieService.put(\"token\", '');\n             this._cookieService.put(\"userid\", '');\n              this.router.navigateByUrl('/login');\n          }\n   }, error => {\n     this.warningMessage = \"Please Provide Valid Inputs!\";\n   }    \n   );\n  }\n  public deleteBenefitsUsed(row) {\n    if(confirm(\"Are you sure to delete this plan?\")) {\n       if(this.benefit[row]['patients_benefits_id']) {\n         this.patientInfoService.deleteBenefitsUsed(this.benefit[row]['patients_benefits_id']).subscribe((res) => {\n          if(res.message == 'success'){\n   \n           this.notifier.notify( 'success', 'Plan Removed' ,'vertical');\n             this.getBenefitsUsed();\n          }\n       }, error => {\n         this.warningMessage = \"Please Provide Valid Inputs!\";\n       }    \n       );\n       }\n       else {\n         this.getBenefitsUsed();\n         this.rows.splice(row, 1);\n       this.rows = [...this.rows];\n       }\n     }\n}\n\n}","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PatientInfoRoutes } from './patient-info.routing';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { QuillModule } from 'ngx-quill';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { DatePipe } from '@angular/common';\n\nimport { PatientInfoComponent,DialogOverviewExampleDialogComponent } from './patient-info.component';\n\nimport { PatientInfoService } from './patient-info.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(PatientInfoRoutes),\n    DemoMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    QuillModule,\n    MatInputModule,\n    NgxDatatableModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    MatTreeModule,\n    MatDatepickerModule,\n    NgMultiSelectDropDownModule.forRoot()\n  ],\n  providers: [\n    PatientInfoService,\n    DatePipe\n  ],\n  entryComponents: [DialogOverviewExampleDialogComponent],\n  declarations: [\n    PatientInfoComponent,DialogOverviewExampleDialogComponent\n  ]\n})\nexport class PatientInfoModule {}\n","import { Routes } from '@angular/router';\n\nimport { PatientInfoComponent } from './patient-info.component';\n\nexport const PatientInfoRoutes: Routes = [\n  {\n   path: '',\n    component: PatientInfoComponent,\n    data: {\n      title: 'Patient Detail'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class PatientInfoService {\n\n   public token: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   \n    getSubPatients(patient_id, token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Patients/getAllPatientByID?patient_id=\"+patient_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                    })\n        );\n    }\n\n    getPatientContract(patient_id, token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Patients/getPatientContract?patient_id=\"+patient_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                    })\n        );\n    }\n\n    \n    updatePatients(patient_id,member_plan_id,contract_upload,token = this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n    \n        formData.append('patient_id', patient_id);\n        formData.append('member_plan_id',member_plan_id);\n        formData.append('contract_upload', contract_upload);\n        // formData.append('status',patient_status);\n        formData.append('token', token);\n       \n            return this.http.post(this.apiUrl +\"/Patients/UploadContract/\", formData)\n            .pipe(map((response: Response) => {\n          //      console.log(response);\n                            return response;\n                        })\n            );\n    }\n\n\n    contractUpload( formData): Observable<any> {\n       \n        formData.append('id', this._cookieService.get(\"userid\"));\n        formData.append('token', this._cookieService.get(\"token\"));\n\n    return this.http.post(this.apiUrl +\"/Patients/logoUpload/\", formData)\n    .pipe(map((response: Response) => {\n        // console.log(response);\n        \n                    return response;\n                })\n    );\n    }\n\n    getBenefitsUsed(patient_id,member_plan_id, token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"PatientsBenefits/getBenefitsUsed?patient_id=\"+patient_id+\"&member_plan_id=\"+member_plan_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                    })\n        );\n    }\n\n    addBenefits(patient_id,member_plan_id,member_treatment_id,patients_sittings,sitting,token = this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n    \n        formData.append('patients_id', patient_id);\n        formData.append('member_plan_id',member_plan_id);\n        formData.append('member_treatment_id', member_treatment_id);\n        formData.append('patients_sittings',patients_sittings);\n        formData.append('sitting',sitting);\n        formData.append('token', token);\n       \n            return this.http.post(this.apiUrl +\"/PatientsBenefits/addBenefits/\", formData)\n            .pipe(map((response: Response) => {\n          //      console.log(response);\n                return response;\n            })\n            );\n    }\n\n    updateSittingStatus(patient_id,member_plan_id,sitting_id,sitting_status,performed_date,token = this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n    \n        formData.append('patients_id', patient_id);\n        formData.append('member_plan_id',member_plan_id);\n        formData.append('sitting_id', sitting_id);\n        formData.append('sitting_status',sitting_status);\n        formData.append('performed_date', performed_date);\n        formData.append('token', token);\n       \n            return this.http.post(this.apiUrl +\"/PatientsBenefits/updateSittingStatus/\", formData)\n            .pipe(map((response: Response) => {\n          //      console.log(response);\n                            return response;\n                        })\n            );\n    }\n    getPaymentHistory(patient_id,member_plan_id,user_id,clinic_id, token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"PaymentHistory/getPaymentHistory?patient_id=\"+patient_id+\"&member_plan_id=\"+member_plan_id+\"&user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                return response;\n                console.log(response);\n                    })\n        );\n    }\n\n    deleteBenefitsUsed(patient_id,token = this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n    \n        formData.append('patients_benefits_id', patient_id);\n        formData.append('token', token);\n       \n            return this.http.post(this.apiUrl +\"/PatientsBenefits/deleteBenefitsUsed/\", formData)\n            .pipe(map((response: Response) => {\n          //      console.log(response);\n                            return response;\n                        })\n            );\n    }\n       \n}"],"sourceRoot":""}