{"version":3,"sources":["webpack:///./src/app/defaulters/defaulters.component.html","webpack:///./src/app/defaulters/defaulters.component.scss","webpack:///./src/app/defaulters/defaulters.component.ts","webpack:///./src/app/defaulters/defaulters.module.ts","webpack:///./src/app/defaulters/defaulters.routing.ts","webpack:///./src/app/defaulters/defaulters.service.ts"],"names":[],"mappings":"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","file":"defaulters-defaulters-module.js","sourcesContent":["module.exports = \"\\n<input type=\\\"button\\\" id=\\\"clinic_initiate\\\" (click) = \\\"initiate_clinic()\\\"  [style.display]=\\\"'none'\\\">\\n\\n<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>Defaulters</mat-card-title>\\n\\n        <mat-form-field>\\n            <input matInput type='text' class=\\\"form-control\\\" placeholder='Type to filter Defaulters Name...' (keyup)='updateFilter($event)'\\n            />\\n        </mat-form-field>\\n        <ngx-datatable #table class='material' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\n       <ngx-datatable-column name=\\\"Id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Id</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span>\\n            {{rowIndex+1}}\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column  prop=\\\"patient_name\\\" name=\\\"patient_name\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Patient Name</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n            {{value}}\\n       </ng-template>\\n        \\n      </ngx-datatable-column>\\n\\n\\n       <ngx-datatable-column prop=\\\"patient_email\\\" name=\\\"patient_email\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Patient Email</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n            {{value}}\\n          </ng-template>\\n      </ngx-datatable-column>\\n\\n\\n       <ngx-datatable-column prop=\\\"patient_phone_no\\\" name=\\\"patient_phone_no\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Contact Number</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n             {{value}}\\n       </ng-template>\\n\\n      </ngx-datatable-column>\\n\\n\\n       <ngx-datatable-column prop=\\\"plan_name\\\" name=\\\"plan_name\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n       <span>Plan</span>\\n     </ng-template>\\n       <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n           {{value}} \\n       </ng-template>\\n     </ngx-datatable-column>\\n\\n\\n     <ngx-datatable-column prop=\\\"amount_owing\\\" name=\\\"amount_owing\\\">\\n      <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n     <span>Owning Amount</span>\\n   </ng-template>\\n     <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n         {{value}}\\n   \\n     </ng-template>\\n   </ngx-datatable-column>\\n   \\n      \\n      <ngx-datatable-column  name=\\\"id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Actions</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" style=\\\"width:266px!important;\\\">\\n          <a class=\\\"action_btn golden\\\" (click)=\\\"sendDefaultersemail(rowIndex)\\\" title= 'Update Patient'><i class=\\\"ti-email  m-r-10\\\"></i></a>\\n        </ng-template>\\n      </ngx-datatable-column>\\n        </ngx-datatable>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".lds-roller div::after {\\n  background: black; }\\n\\n.spinner {\\n  position: relative;\\n  background: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVtZW1iZXJzL2NsaWVudDIvc3JjL2FwcC9kZWZhdWx0ZXJzL2RlZmF1bHRlcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBaUIsRUFDcEI7O0FBQ0Q7RUFDSSxtQkFBa0I7RUFDbEIsaUJBQWdCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvZGVmYXVsdGVycy9kZWZhdWx0ZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxkcy1yb2xsZXIgZGl2OjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogYmxhY2s7XG59XG4uc3Bpbm5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG59Il19 */\"","import { Component, Inject , ViewChild, AfterViewInit } from '@angular/core';\nimport { DefaultersService } from './defaulters.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormControl, FormGroupDirective,  NgForm,  Validators} from '@angular/forms';\nimport { NotifierService } from 'angular-notifier';\nimport { empty } from 'rxjs';\n\ndeclare var require: any;\nconst data: any = [];\n\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './defaulters.component.html',\n  styleUrls: ['./defaulters.component.scss']\n})\nexport class DefaultersComponent implements AfterViewInit {\n  private readonly notifier: NotifierService;\n  name: string;\n  address: string;\n  contact_name: string;\n  fileInput: any ;\n  clinic_id: any;\n  public selectedtreat;\n\n  treat = new FormControl();\n\n  ngAfterViewInit() {\n    this.initiate_clinic();\n   \n        $('#title').html('Defaulters');\n        $('.header_filters').removeClass('hide_header');\n        $('.external_clinic').show();\n        $('.dentist_dropdown').hide();\n        $('.header_filters').addClass('flex_direct_mar');\n  \n  }\n  editing = {};\n  rows = [];\n \n  temp = [...data];\n  table;\n  loadingIndicator = true;\n  reorderable = true;\n\n  public patient_name;\n  public planLength;\n  public totalAmount;\n  public description;\n  public discount;\n  public treatmentdata;\n  public memberplan_id;\n\n  \n  constructor(notifierService: NotifierService,private defaultersService: DefaultersService, public dialog: MatDialog,private _cookieService: CookieService, private router: Router) {\n    this.notifier = notifierService;\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n  }\n  private warningMessage: string;\n\n  initiate_clinic(){  \n    this.clinic_id = $('#currentClinicid').attr('cid');\n  if(this.clinic_id)\n      this.getInofficeDefaultersMembers();\n    }\n    \n  private getInofficeDefaultersMembers() {\n  this.rows=[];\n  this.defaultersService.getInofficeDefaultersMembers(this.clinic_id).subscribe((res) => {\n  \n        if(res.message == 'success'){\n        this.rows = res.data;\n        // console.log(this.rows);\n        this.temp = [...res.data];        \n        this.table = data;\n        }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n  }\n  private sendDefaultersemail(rowIndex) {\n    // console.log(rowIndex)\n    var defaulter_name =  this.rows[rowIndex]['patient_name'];\n    var defaulter_email = this.rows[rowIndex]['patient_email'];\n    this.defaultersService.sendDefaultersemail(defaulter_name,defaulter_email).subscribe((res) => {\n    \n          if(res.message == 'success'){\n            this.notifier.notify( 'success', 'Payment Reminder Send' ,'vertical');\n          }\n      }, error => {\n        this.warningMessage = \"Please Provide Valid Inputs!\";\n      }    \n      );\n    }\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\nconsole.log(event.target.value);\n      // filter our data\n    const temp = this.temp.filter(function(d) {\n    \n      return d.patient_name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n  }\n\n  enableEditing(rowIndex, cell) {\n\n    this.editing[rowIndex + '-' + cell] = true;\n//console.log(this.editing);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { DefaultersService } from './defaulters.service';\nimport { DefaultersComponent  } from './defaulters.component';\nimport { DefaultersRoutes } from './defaulters.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DefaultersRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [\n    DefaultersService\n  ],\n  entryComponents: [],\n  declarations: [ DefaultersComponent ]\n})\nexport class DefaultersModule { }","import { Routes } from '@angular/router';\n\nimport { DefaultersComponent } from './defaulters.component';\n\nexport const DefaultersRoutes: Routes = [\n  {\n    path: '',\n    component: DefaultersComponent,\n    data: {\n      title: 'Defaulters'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n\n@Injectable()\nexport class DefaultersService {\n\n   public token: string;\n   public api_url: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        \n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   // Get Dentist\n   getInofficeDefaultersMembers(clinic_id,user_id = this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): \n    Observable<any> {\n        return this.http.get(this.apiUrl +\"/InofficePayments/getInofficeDefaultersMembers?token=\"+this._cookieService.get(\"token\")+\"&user_id=\"+this._cookieService.get(\"userid\")+\"&clinic_id=\"+clinic_id, { headers: this.headers })\n        .pipe(map((response: Response) => {\n                    return response;\n                })\n        );\n    }\n  \n\n    // Update Clinic\n    sendDefaultersemail(defaulter_name, defaulter_email,token =this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n    formData.append('defaulter_name', defaulter_name);\n    formData.append('defaulter_email', defaulter_email);\n    formData.append('token', token);\n\n        return this.http.post(this.apiUrl +\"/DefaultersEmail/sendDefaultersemail/\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n        })\n        );\n    }\n\n}\n\n"],"sourceRoot":""}