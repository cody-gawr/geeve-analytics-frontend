{"version":3,"sources":["webpack:///./src/app/patients-detail/dialog-overview-example.html","webpack:///./src/app/patients-detail/patients-detail.component.html","webpack:///./src/app/patients-detail/patients-detail.component.scss","webpack:///./src/app/patients-detail/patients-detail.component.ts","webpack:///./src/app/patients-detail/patients-detail.module.ts","webpack:///./src/app/patients-detail/patients-detail.routing.ts","webpack:///./src/app/patients-detail/patients-detail.service.ts"],"names":[],"mappings":"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","file":"patients-detail-patients-detail-module.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title>Add New Member</h1>\\n<div mat-dialog-content>\\n \\n  <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.invite_member_name\\\" placeholder=\\\"Name\\\">\\n  </mat-form-field>\\n\\n  \\n  <!-- <mat-form-field>\\n    <input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.invite_member_email\\\" placeholder=\\\"Email Address\\\" />\\n\\n  </mat-form-field> -->\\n  \\n\\n\\t<mat-form-field>\\n    <input matInput placeholder=\\\"Enter your email\\\" [(ngModel)]=\\\"data.invite_member_email\\\"  [formControl]=\\\"email\\\" required>\\n    <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n  </mat-form-field>\\n\\n  \\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" tabindex=\\\"2\\\" class=\\\"mat-raised-button mat-dc\\\">Ok</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\" class=\\\"mat-raised-button mat-gray\\\">No Thanks</button>\\n</div>\"","module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <mat-card-title>Patients Listing  <button class=\\\"sa-pull-right mat-raised-button mat-gray\\\" mat-raised-button (click)=\\\"openDialog()\\\">Invite New Member</button></mat-card-title>\\n\\n        <mat-form-field>\\n            <input matInput type='text' class=\\\"form-control\\\" placeholder='Type to filter Patient name...' (keyup)='updateFilter($event)'\\n            />\\n        </mat-form-field>\\n        <ngx-datatable #table class='material responsive-datatable' [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [rows]='rows'>\\n   \\n       <ngx-datatable-column prop=\\\"id\\\" name=\\\"id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Id</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span >\\n               {{rowIndex+1}}\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column prop=\\\"patient_name\\\" name=\\\"patient_name\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Patient Name</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span >\\n            {{value}}\\n          </span>\\n              </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column prop=\\\"planName\\\" name=\\\"planName\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n      <span>Plan Name</span>\\n      </ng-template>\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n        <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'planName')\\\" *ngIf=\\\"!editing[rowIndex + '-planName']\\\">\\n          {{value}}\\n    \\n        </span>\\n            <div *ngIf=\\\"editing[rowIndex+ '-planName']\\\" >\\n              <select  (change)=\\\"updateValue($event, 'member_plan_id', rowIndex)\\\"  >\\n                <option *ngFor=\\\"let plan of membersplan\\\" [value]=\\\"plan.id\\\" [selected]=\\\"plan.id == row.member_plan_id ? true : null\\\">{{plan.planName}} </option>\\n              </select>\\n            </div>\\n            \\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n\\n       <ngx-datatable-column prop=\\\"patient_address\\\" name=\\\"patient_address\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Address</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span >\\n            {{value}}\\n          </span>\\n         \\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column prop=\\\"patient_dob\\\" name=\\\"patient_dob\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n       <span>DOB</span>\\n     </ng-template>\\n       <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n         <span >\\n           {{value}}\\n         </span>\\n        \\n       </ng-template>\\n     </ngx-datatable-column>\\n\\n  \\n          <ngx-datatable-column prop=\\\"patient_age\\\" name=\\\"patient_age\\\">\\n            <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n          <span>Age</span>\\n        </ng-template>\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n            <span >\\n              {{value}}\\n            </span>\\n           \\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n\\n              <ngx-datatable-column prop=\\\"patient_gender\\\" name=\\\"patient_gender\\\">\\n                <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n              <span>Gender</span>\\n            </ng-template>\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n                <span >\\n                  {{value}}\\n                </span>\\n                  </ng-template>\\n            </ngx-datatable-column>\\n\\n\\n            <ngx-datatable-column prop=\\\"patient_email\\\" name=\\\"patient_email\\\">\\n              <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n            <span>Email</span>\\n            </ng-template>\\n            <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n              <span >\\n                {{value}}\\n              </span>\\n              \\n            </ng-template>\\n            </ngx-datatable-column>\\n\\n\\n        <ngx-datatable-column prop=\\\"patient_phone_no\\\" name=\\\"patient_phone_no\\\">\\n          <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Phone No.</span>\\n        </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span >\\n            {{value}}\\n          </span>\\n         \\n        </ng-template>\\n        </ngx-datatable-column>\\n\\n\\n        <ngx-datatable-column prop=\\\"patient_home_phno\\\" name=\\\"patient_home_phno\\\">\\n          <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Home Phone No.</span>\\n        </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n          <span >\\n            {{value}}\\n          </span>\\n             </ng-template>\\n        </ngx-datatable-column>\\n\\n      <ngx-datatable-column prop=\\\"patient_status\\\" name=\\\"patient_status\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n      <span>Status</span>\\n      </ng-template>\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n        <span title=\\\"Double click to edit\\\" (dblclick)=\\\"enableEditing(rowIndex,'patient_status')\\\" *ngIf=\\\"!editing[rowIndex + '-patient_status']\\\">\\n          {{value}}\\n        </span>\\n        <select id=\\\"statusFilter\\\" *ngIf=\\\"editing[rowIndex+ '-patient_status']\\\" (change)=\\\"updateValue($event, 'patient_status', rowIndex)\\\">\\n         <option value=\\\"ACTIVE\\\" [selected]=\\\"row.patient_status =='ACTIVE' ? true : null\\\" >ACTIVE</option>\\n          <option value=\\\"INACTIVE\\\" [selected]=\\\"row.patient_status =='INACTIVE' ? true : null\\\">INACTIVE</option>\\n        </select>\\n       </ng-template>\\n      </ngx-datatable-column>\\n\\n\\n      <ngx-datatable-column name=\\\"id\\\">\\n         <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n        <span>Actions</span>\\n      </ng-template>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" style=\\\"width:266px!important;\\\">\\n          <a [routerLink]=\\\"['/patient-info',value]\\\" class=\\\"action_btn golden\\\" title= 'Patients Details'><i class=\\\"ti-settings  m-r-10\\\"></i></a>\\n          <button class=\\\"action_btn danger\\\" mat-menu-item (click) = \\\"deletePatients(rowIndex)\\\">\\n         <i class=\\\"ti-trash text-danger m-r-10\\\"></i></button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n        </ngx-datatable>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".lds-roller div::after {\\n  background: black; }\\n\\n.spinner {\\n  position: relative;\\n  background: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVtZW1iZXJzL2NsaWVudDIvc3JjL2FwcC9wYXRpZW50cy1kZXRhaWwvcGF0aWVudHMtZGV0YWlsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWlCLEVBQ3BCOztBQUNEO0VBQ0ksbUJBQWtCO0VBQ2xCLGlCQUFnQixFQUNuQiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnRzLWRldGFpbC9wYXRpZW50cy1kZXRhaWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGRzLXJvbGxlciBkaXY6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcbn1cbi5zcGlubmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbn0iXX0= */\"","import { Component, Inject , ViewChild, AfterViewInit } from '@angular/core';\nimport { PatientsDetailService } from './patients-detail.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { EventEmitter , Output, Input} from '@angular/core';\n@Component({\n  selector: 'app-dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example.html',\n})\n\n\nexport class DialogOverviewExampleDialogComponent {\n  public clinic_id:any ={};\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  getErrorMessage() {\n    return this.email.hasError('required')\n      ? 'You must enter a value'\n      : this.email.hasError('email')\n        ? 'Not a valid email'\n        : '';\n        this.emailval.emit(this.email);\n  }\n\n  @Output() public emailval: EventEmitter<any> = new EventEmitter();\n\n  @Output() public onAdd: EventEmitter<any> = new EventEmitter();\n\n  public fileToUpload;\n \n  uploadImage(files: FileList) {\n     \n    this.fileToUpload = files.item(0);\n    this.onAdd.emit(this.fileToUpload);\n  }\n\n\n  file: File;\n  onChange(event: EventTarget) {\n        let eventObj: MSInputMethodContext = <MSInputMethodContext> event;\n        let target: HTMLInputElement = <HTMLInputElement> eventObj.target;\n        let files: FileList = target.files;\n        this.file = files[0];\n        console.log(this.file);\n      //  this.filedata =this.file;\n  }\n}\n\ndeclare var require: any;\nconst data: any = [];\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './patients-detail.component.html',\n  styleUrls: ['./patients-detail.component.scss']\n})\nexport class PatientsDetailComponent implements AfterViewInit {\n  public id:any ={};\n  invite_member_name: string;\n  invite_member_email: string;\n  membersplan:any={};\n  fileInput: any ;\n  patient_status:any;\n  member_plan_id :any;\n clinic_id: any;\n\n  ngAfterViewInit() {\n\n    this.id = this.route.snapshot.paramMap.get(\"id\");\n    \n    this.getPlans();\n    this.getPatients();\n        $('#title').html('Patients Listing');\n        //$('.header_filters').hide();\n        $('.external_clinic').show();\n        $('.dentist_dropdown').hide();\n        $('.header_filters').addClass('flex_direct_mar');\n        \n  }\n  editing = {};\n  rows = [];\n  temp = [...data];\n\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [{ prop: 'id' }, { name: 'planName' }, { name: 'member_plan_id' }, { name: 'patient_address' }, { name: 'patient_age' }, { name: 'patient_dob' }, { name: 'patient_email' }, { name: 'patient_gender' }, { name: 'patient_home_phno' }, { name: 'patient_name' }, { name: 'patient_phone_no' }, { name: 'patient_status' }];\n\n  @ViewChild(PatientsDetailComponent) table: PatientsDetailComponent;\n  constructor(private patientsdetailService: PatientsDetailService, public dialog: MatDialog,private _cookieService: CookieService, private router: Router ,private route: ActivatedRoute) {\n    this.rows = data;\n    this.temp = [...data];\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 1500);\n  }\n\n\n  private warningMessage: string;\n\n  public imageURL:any;\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\n      width: '250px',\n      data: {invite_member_name: this.invite_member_name, address: this.invite_member_email }\n\n    });\n    \n   \n  dialogRef.afterClosed().subscribe(result => {\n    this.clinic_id = $('#currentClinicid').attr('cid');\n    this.patientsdetailService.inviteMember(this.clinic_id,result.invite_member_name, result.invite_member_email).subscribe((res) => {\nconsole.log(res);\n    if(res.message == 'success'){\n        alert('Member has been Invited');\n          this.getPatients();\n          console.log(res);\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }\n    );\n    });\n  }\n\n  private getPatients() {\n \n    this.patientsdetailService.getPatients(this.id).subscribe((res) => {\n  \n      if(res.message == 'success'){\n        this.rows = res.data;\n        console.log(this.rows );\n    \n        this.temp = [...res.data];    \n        // console.log(this.temp )\n        this.table = data;\n\n       }    \n        else if(res.status == '401'){\n              this._cookieService.put(\"username\",'');\n              this._cookieService.put(\"email\", '');\n              this._cookieService.put(\"token\", '');\n              this._cookieService.put(\"userid\", '');\n               this.router.navigateByUrl('/login');\n           }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n  }\n\n  private deletePatients(row) {\n           if(confirm(\"Are you sure to delete Patient?\")) {\n    if(this.rows[row]['id']) {\n      \n  this.patientsdetailService.deletePatients(this.rows[row]['id']).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('Patient Removed');\n          this.getPatients();\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n    }\n    else {\n      this.rows.splice(row, 1);\n    this.rows = [...this.rows];\n\n    }\n  }\n  }\n \n  private getPlans() {\n    this.patientsdetailService.getPlans().subscribe((res) => {\n        if(res.message == 'success'){\n           this.membersplan= res.data;\n       \n        }\n      }, error => {\n        this.warningMessage = \"Please Provide Valid Inputs!\";\n      }    \n      );\n  \n    }\n \n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.patient_name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n  }\n\n  updateValue(event, cell, rowIndex) {\n\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n\n    console.log(this.rows);\n\n    this.patientsdetailService.updatePatients(this.rows[rowIndex]['id'],this.rows[rowIndex]['member_plan_id'],this.rows[rowIndex]['patient_status']).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('patient Updated');\n          this.getPatients();\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );  \n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n\n  }\n\n  enableEditing(rowIndex, cell) {\n    this.editing[rowIndex + '-' + cell] = true;\n\n  }\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { PatientsDetailService } from './patients-detail.service';\nimport { PatientsDetailComponent,\n  DialogOverviewExampleDialogComponent  } from './patients-detail.component';\nimport { PatientsDetailRoutes } from './patients-detail.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(PatientsDetailRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    PatientsDetailService\n  ],\n  entryComponents: [DialogOverviewExampleDialogComponent],\n  declarations: [ PatientsDetailComponent,\n    DialogOverviewExampleDialogComponent ]\n})\nexport class PatientsDetailModule { }","import { Routes } from '@angular/router';\n\nimport { PatientsDetailComponent } from './patients-detail.component';\n\nexport const PatientsDetailRoutes: Routes = [\n  {\n    path: '',\n    component: PatientsDetailComponent,\n    data: {\n      title: 'PatientsDetail'\n    }\n  }\n];\n","import {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n\n@Injectable()\nexport class PatientsDetailService {\n\n   public token: string;\n   public api_url: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        \n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   // Get Dentist\n    getPatients(memberid, token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Patients/getAllPatient?member_plan_id=\"+memberid+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n    updatePatients(patient_id,member_plan_id, patient_status,token = this._cookieService.get(\"token\")): Observable<any> {\n        const formData = new FormData();\n    \n        formData.append('patient_id', patient_id);\n        formData.append('member_plan_id',member_plan_id);\n        formData.append('status',patient_status);\n        formData.append('token', token);\n        \n            return this.http.post(this.apiUrl +\"/Patients/updatePatientByID/\", formData)\n            .pipe(map((response: Response) => {\n                console.log(response);\n                            return response;\n                        })\n            );\n        }\n\n    getPlans(user_id = this._cookieService.get(\"userid\"), token = this._cookieService.get(\"token\")): \n    Observable<any> {\n        return this.http.get(this.apiUrl +\"/MemberPlan/getAllMemberPlans?token=\"+this._cookieService.get(\"token\")+\"&user_id=\"+this._cookieService.get(\"userid\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                    return response;\n                })\n        );\n    }\n\n       // Delete Clinic\n    deletePatients(patient_id, token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n\n    formData.append('patient_id', patient_id);\n    formData.append('token', token);\n\n        return this.http.post(this.apiUrl +\"/Patients/deletePatientByID\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n\n        // Update Clinic\n    inviteMember(clinic_id,invite_member_name, invite_member_email,token = this._cookieService.get(\"token\")): Observable<any> {\n    const formData = new FormData();\n\n    formData.append('clinic_id', clinic_id);\n    formData.append('invite_member_name', invite_member_name);\n    formData.append('invite_member_email', invite_member_email);\n    formData.append('user_id', this._cookieService.get(\"userid\"));\n    formData.append('token', token);\n    \n        return this.http.post(this.apiUrl +\"/InviteMember/add/\", formData)\n        .pipe(map((response: Response) => {\n                     return response;\n                     console.log(response);\n                    })\n        );\n    }\n    logoUpload( formData): Observable<any> {\n        if(this._cookieService.get(\"user_type\") != '1' && this._cookieService.get(\"user_type\") != '2')                 \n        formData.append('id', this._cookieService.get(\"childid\"));\n        else\n        formData.append('id', this._cookieService.get(\"userid\"));\n\n        formData.append('token', this._cookieService.get(\"token\"));\n\n    return this.http.post(this.apiUrl +\"/Practices/logoUpload/\", formData)\n    .pipe(map((response: Response) => {\n                    return response;\n                })\n    );\n    }\n}\n\n"],"sourceRoot":""}