{"version":3,"sources":["webpack:///./src/app/planpayment/planpayment.component.html","webpack:///./src/app/planpayment/planpayment.component.scss","webpack:///./src/app/planpayment/planpayment.component.ts","webpack:///./src/app/planpayment/planpayment.module.ts","webpack:///./src/app/planpayment/planpayment.routing.ts"],"names":[],"mappings":"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","file":"planpayment-planpayment-module.js","sourcesContent":["module.exports = \"<div class=\\\"sa_login_blur\\\" style=\\\"background:url('../../assets/images/background/login-register_60.jpg')!important; background-size:cover!important; filter:blur(20px)!important; position:absolute; width:100%; height: 100vh;\\ndisplay: flex;\\nbackground-size: cover;\\nalign-items: center;\\\"></div>\\n<img class=\\\"login_abso_logo\\\" src=\\\"../assets/images/logo-white.png\\\">\\n<div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/login-register.jpg);\\\">\\n    <div class=\\\"login-register-box\\\">\\n        <mat-card>\\n            <mat-card-content>\\n                    <div class=\\\"text-center\\\">\\n                        <img alt=\\\"homepage\\\" src=\\\"../assets/images/logo-icon.gif\\\">\\n                        <h4 class=\\\"m-t-0\\\">Proceed to Payment</h4>\\n                    </div>\\n\\n                    <div class=\\\"proceed-payment-content\\\">\\n                        <!-- col full-->\\n\\n                        <div class=\\\"selectIcon\\\">\\n                        <select class=\\\"sa_select plan\\\" id=\\\"plans\\\" (change) = \\\"get_amount()\\\">\\n                             <option value =\\\"all\\\">Select Plan</option>\\n                            <option *ngFor=\\\"let plan of plans;let i = index\\\" [value]=\\\"i\\\" [attr.selected] = \\\"plan.id == plan_id ? 'selected' : null\\\"> {{plan.plan}}</option>\\n                        </select> \\n                        </div>\\n\\n                        <!-- col full-->\\n                        <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-center\\\">\\n                            <span> \\n                                <a (click)=\\\"openCheckout()\\\" class=\\\"text-info link\\\">Pay ${{amount}}</a>\\n                            </span>\\n                         <small *ngIf=\\\"successMessage\\\" class=\\\"text-success support-text\\\">{{successMessage}}</small>\\n                        </div>\\n                    </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYW5wYXltZW50L3BsYW5wYXltZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { CookieService, CookieOptionsArgs } from \"angular2-cookie/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { LoginService } from '../login/login.service';\nimport { StripeService, StripeCardComponent, ElementOptions, ElementsOptions } from \"@nomadreservations/ngx-stripe\";\n\n@Component({\n  selector: 'app-planpayment',\n  templateUrl: './planpayment.component.html',\n  styleUrls: ['./planpayment.component.scss']\n})\nexport class PlanpaymentComponent implements OnInit {\n  public form: FormGroup;\n  public errorLogin = false;\n  public plans =[];\n  public plan_id;\n  public encode_string\n  public amount;\n  public token;\n  public user_id;\n  public stripe_plan_id;\n  public planName;\n  public successMessage;\n\n  constructor(private fb: FormBuilder, private router: Router, private loginService: LoginService,private _cookieService: CookieService, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n     this.route.params.subscribe(params => {\n      this.encode_string = this.route.snapshot.paramMap.get(\"id\");\n      this.checkString();\n    });\n    this.form = this.fb.group({\n      uname: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n    this.getPlans();\n  }\n\ncheckString() {\n  var string = atob(this.encode_string);\n  var res = string.split(\"/\");\n  this.plan_id = res[0];\n  this.user_id= res[1];\n  this.loginService.checkuser(this.plan_id, this.user_id).subscribe((res) => {\n       if(res.message == 'success'){\n       }\n       else if(res.message == 'error'){\n          this.router.navigate(['/']);\n       }\n    }, error => {\n    }    \n    );\n}\n  openCheckout() {\n    var handler = (<any>window).StripeCheckout.configure({\n      key: 'pk_test_fgXaq2pYYYwd4H3WbbIl4l8D00A63MKWFc',\n      locale: 'auto',\n      token: token => {\n           this.loginService.createSubscription(token,this.stripe_plan_id,this.user_id).subscribe((res) => {\n           if(res.message == 'success'){\n            this.successMessage = 'Payment Completed Successfully! You will be logged in to the account!';\n\n      setTimeout(() => \n      {\n        this.loginService.autoLogin(this.user_id).subscribe((res) => {\n        if(res.message == 'success'){\n        var datares = [];\n        datares['username'] = res.data.data.username;\n        datares['email'] = res.data.data.email;\n        datares['token'] = res.data.data.token;        \n        datares['userid'] = res.data.data.id;      \n        datares['parentid'] = res.data.data.parent_id;   \n        datares['user_type'] = res.data.data.user_type;       \n        datares['user_image'] = res.data.data.user_image;        \n\n        datares['login_status'] = res.data.data.login_status;        \n        datares['display_name'] = res.data.data.display_name;  \n        datares['dentistid'] = res.data.data.dentist_id;        \n\n        let opts: CookieOptionsArgs = {\n            expires: new Date('2030-07-19')\n        };\n        this._cookieService.put(\"userid\", '', opts);\n        this._cookieService.put(\"childid\", '', opts);\n        this._cookieService.put(\"dentistid\", '', opts);\n\n        this._cookieService.put(\"username\", datares['username'], opts);\n        this._cookieService.put(\"email\", datares['email'], opts);\n        this._cookieService.put(\"token\", datares['token'], opts);\n        this._cookieService.put(\"user_type\", datares['user_type'], opts);\n       \n        this._cookieService.put(\"login_status\", datares['login_status'], opts);\n        this._cookieService.put(\"display_name\", datares['display_name'], opts);\n        this._cookieService.put(\"user_image\", datares['user_image'], opts);\n\n        if(datares['user_type'] == '1') {\n        this.router.navigate(['/users']);\n         this._cookieService.put(\"userid\", datares['userid'], opts);\n      }\n        else if(datares['user_type'] == '2') {\n         this._cookieService.put(\"userid\", datares['userid'], opts);\n\n        this.router.navigate(['/dashboards/cliniciananalysis/1']);\n               }\n               else if(res.message == 'error'){\n                  this.errorLogin  =true;\n               }\n             }\n              }, error => {\n              });\n            },\n            5000);    \n           }\n           else if(res.message == 'error'){\n              this.errorLogin  =true;\n           }\n          }, error => {\n          });\n      }\n     });\n\n    handler.open({      \n      name:  this.planName,\n      amount: this.amount\n    });\n \n  }\n\n getPlans() {\n  this.errorLogin  =false;\n  this.loginService.getPlans().subscribe((res) => {\n       if(res.message == 'success'){\n        res.data.forEach((res,key) => {\n          var temp= {plan:'',allowedClinics:'',description:'',amount:'',discount:'',id:''};\n          if(res.id== this.plan_id) {\n            this.amount = res.amount;\n            this.stripe_plan_id = res.stripe_plan_id;\n            this.planName = res.plan;\n          }\n          temp.id =res.id;          \n          temp.plan =res.plan;\n          temp.allowedClinics =res.allowedClinics;  \n          temp.description =res.description;  \n          temp.amount =res.amount;  \n          temp.discount =res.discount; \n          this.plans.push(temp);\n        });\n       }\n       else if(res.message == 'error'){\n          this.errorLogin  =true;\n       }\n    }, error => {\n    }    \n    );\n  }\n  get_amount() {\n    let id:any =  $('#plans').val();\n    this.amount= this.plans[id].amount;\n    this.stripe_plan_id = this.plans[id].stripe_plan_id;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatIconModule,\n  MatCardModule,\n  MatInputModule,\n  MatCheckboxModule,\n  MatButtonModule\n} from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { PlanpaymentRoutes } from './planpayment.routing';\nimport { PlanpaymentComponent } from './planpayment.component';\n\nimport { LoginService } from '../login/login.service';\nimport { NgxStripeModule } from '@nomadreservations/ngx-stripe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(PlanpaymentRoutes),    \n    NgxStripeModule.forRoot('pk_test_fgXaq2pYYYwd4H3WbbIl4l8D00A63MKWFc'),\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    LoginService\n  ],\n  declarations: [\n    PlanpaymentComponent,\n  ]\n})\nexport class PlanpaymentModule {}\n","import { Routes } from '@angular/router';\n\nimport { PlanpaymentComponent } from './planpayment.component';\n\nexport const PlanpaymentRoutes: Routes = [\n  {\n    path: '',\n    component: PlanpaymentComponent,\n    data: {\n      title: 'Planpayment'\n    }\n  }\n];\n"],"sourceRoot":""}