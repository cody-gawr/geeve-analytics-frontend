{"version":3,"sources":["webpack:///./src/app/clinic-settings/clinic-settings.component.html","webpack:///./src/app/clinic-settings/clinic-settings.component.scss","webpack:///./src/app/clinic-settings/clinic-settings.component.ts","webpack:///./src/app/clinic-settings/clinic-settings.module.ts","webpack:///./src/app/clinic-settings/clinic-settings.routing.ts","webpack:///./src/app/clinic-settings/clinic-settings.service.ts"],"names":[],"mappings":"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","file":"clinic-settings-clinic-settings-module.js","sourcesContent":["module.exports = \"<!-- ============================================================== -->\\n<!-- Card Grid-->\\n<!-- ============================================================== -->\\n<div fxLayout=\\\"row wrap\\\">\\n  <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-card-title>Clinic Settings <button class=\\\"sa-pull-right mat-raised-button mat-gray connect-xero\\\" *ngIf =\\\"xeroConnect == false\\\" mat-raised-button (click) = \\\"openXero()\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\\n         <span class=\\\"org_xero\\\" *ngIf=\\\"xeroOrganization != ''\\\" >- {{xeroOrganization}}</span> <button class=\\\"sa-pull-right mat-raised-button mat-red disconnect-xero\\\" *ngIf =\\\"xeroConnect == true\\\" mat-raised-button (click) = \\\"disconnectXero()\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button></mat-card-title>\\n\\n        <!-- ============================================================== -->\\n        <!-- column -->\\n        <!-- ============================================================== -->\\n        <div fxLayout=\\\"row wrap\\\">\\n        <!-- Card column -->\\n        <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\">\\n\\n                           <form [formGroup]=\\\"form\\\" class=\\\"basic-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                                <div fxLayout=\\\"row wrap\\\">\\n                                  <!-- column -->\\n                                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                    <mat-form-field>\\n                                        <mat-card-title>Clinic Name</mat-card-title>\\n                                      <input matInput placeholder=\\\"\\\" [formControl]=\\\"form.controls['clinicName']\\\" [(ngModel)]= \\\"clinicName\\\">\\n                                    </mat-form-field>\\n                                  </div>\\n                                   <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                    <mat-form-field>\\n                                        <mat-card-title>Contact Name</mat-card-title>\\n                                      <input matInput placeholder=\\\"\\\" [formControl]=\\\"form.controls['contactName']\\\" [(ngModel)]=\\\"contactName\\\">\\n                                    </mat-form-field>\\n                                  </div>\\n                                   <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                    <mat-form-field>\\n                                        <mat-card-title>Address</mat-card-title>\\n                                      <input matInput placeholder=\\\"\\\" [formControl]=\\\"form.controls['address']\\\" [(ngModel)]=\\\"address\\\">\\n                                    </mat-form-field>\\n                                  </div>\\n                                   <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                    <mat-form-field>\\n                                        <mat-card-title>Practice Size</mat-card-title>\\n                                      <input matInput placeholder=\\\"\\\" [formControl]=\\\"form.controls['practice_size']\\\" [(ngModel)]=\\\"practice_size\\\">\\n                                    </mat-form-field>\\n                                  </div>\\n                                   \\n                                 </div> \\n                                  <mat-card-actions>\\n                                    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n                                  </mat-card-actions>\\n                                  <!-- column -->\\n\\n                              </form>\\n\\n\\n        </div>\\n      </div>\\n \\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 90%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvamVldmVhbmFseXRpY3MvY2xpZW50Mi9zcmMvYXBwL2NsaW5pYy1zZXR0aW5ncy9jbGluaWMtc2V0dGluZ3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBZ0I7RUFDaEIsaUJBQWdCO0VBQ2hCLFlBQVcsRUFDWjs7QUFFRDtFQUNFLFdBQVUsRUFDWCIsImZpbGUiOiJzcmMvYXBwL2NsaW5pYy1zZXR0aW5ncy9jbGluaWMtc2V0dGluZ3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mb3JtIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICB3aWR0aDogOTAlO1xufVxuIl19 */\"","import { Component,OnInit, AfterViewInit  } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ClinicSettingsService } from './clinic-settings.service';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { CookieService, CookieOptionsArgs } from \"angular2-cookie/core\";\n\n@Component({\n  selector: 'app-formlayout',\n  templateUrl: './clinic-settings.component.html',\n  styleUrls: ['./clinic-settings.component.scss']\n})\nexport class ClinicSettingsComponent implements OnInit {\n   public form: FormGroup;\n   public errorLogin = false;\n   public clinic_id:any ={};\n\n          private warningMessage: string;\n          public id:any ={};\n          public clinicName:any =0;\n          public contactName =0;\n          // public chartData: any[] = [];\n          public address:any = {};\n          public practice_size:any ={};\n          options: FormGroup;\n          public xero_link;\n          public xeroConnect = false;\n          public xeroOrganization='';\n  constructor(private _cookieService: CookieService, private fb: FormBuilder,  private clinicSettingsService: ClinicSettingsService, private route: ActivatedRoute) {\n    this.options = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto'\n    });\n  }\n  ngOnInit() {\n      this.route.params.subscribe(params => {\n    this.id = this.route.snapshot.paramMap.get(\"id\");\n      this.getClinicSettings();\n          $('#title').html('Clinic Settings');\n         $('.external_clinic').show();\n        $('.dentist_dropdown').hide();\n        $('.header_filters').addClass('flex_direct_mar');\n        this.checkXeroStatus();\n\n     });\n    \n     this.form = this.fb.group({\n      clinicName: [null, Validators.compose([Validators.required])],\n      contactName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      practice_size: [null, Validators.compose([Validators.required])]\n\n    });\n  }\n  // For form validator\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  // Sufix and prefix\n  hide = true;\n\n  getErrorMessage() {\n    return this.email.hasError('required')\n      ? 'You must enter a value'\n      : this.email.hasError('email')\n        ? 'Not a valid email'\n        : '';\n  }\n\n  getClinicSettings() {\n  this.clinicSettingsService.getClinicSettings(this.id).subscribe((res) => {\n       if(res.message == 'success'){\n        this.clinicName = res.data[0].clinicName;\n        this.contactName = res.data[0].contactName;\n        this.address = res.data[0].address;\n        this.practice_size = res.data[0].practice_size;\n\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n  }\n\n  onSubmit() {\n  this.clinicName = this.form.value.clinicName;\n  this.contactName = this.form.value.contactName;\n  this.address = this.form.value.address;\n  this.practice_size = this.form.value.practice_size;\n   this.clinicSettingsService.updateClinicSettings(this.id, this.clinicName,this.contactName,  this.address,this.practice_size ).subscribe((res) => {\n       if(res.message == 'success'){\n        alert('Clinic Settings Updated');\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );\n  } \n\n  getXeroLink(){\n    this.clinicSettingsService.getXeroLink(this.id).subscribe((res) => {\n       if(res.message == 'success'){\n        this.xero_link = res.data.button_link;\n       }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    }    \n    );  \n  }\n\n  public openXero(){\n      var success;\n      var win = window.open(this.xero_link, \"MsgWindow\", \"width=400,height=400\");\n      var self = this;\n     var timer = setInterval(function() { \n        if(win.closed) {\n          self.checkXeroStatus();\n          clearTimeout(timer);\n        }\n      }, 1000);\n  }\n  public checkXeroStatus(){\n        this.clinicSettingsService.checkXeroStatus(this.id).subscribe((res) => {\n       if(res.message == 'success'){\n        if(res.data.xero_connect == 1) {\n        this.xeroConnect = true;\n        this.xeroOrganization = res.data.Name;\n      }\n        else {\n          this.xeroConnect = false;\n           this.xeroOrganization = '';          \n          this.disconnectXero();\n      }\n       }\n       else {\n        //alert('Error Connecting Xero!!');\n        this.xeroConnect = false;\n           this.xeroOrganization = '';          \n\n          this.disconnectXero();\n\n      }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    });  \n }\n public disconnectXero() {\n    this.clinicSettingsService.clearSession(this.id).subscribe((res) => {\n       if(res.message == 'success'){\n      //  alert('Xero Account Disconnected');\n        this.xeroConnect = false;\n           this.xeroOrganization = '';          \n        \n         this.getXeroLink();\n       }\n       else {\n      //  alert('Error Disonnecting Xero!!');\n        this.xeroConnect = true;\n      }\n    }, error => {\n      this.warningMessage = \"Please Provide Valid Inputs!\";\n    });   \n }\n}\n","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ClinicSettingsRoutes } from './clinic-settings.routing';\nimport { QuillModule } from 'ngx-quill';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\nimport { ClinicSettingsComponent } from './clinic-settings.component';\n\nimport { ClinicSettingsService } from './clinic-settings.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ClinicSettingsRoutes),\n    DemoMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    QuillModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    MatTreeModule,\n    MatDatepickerModule,\n    NgMultiSelectDropDownModule.forRoot()\n  ],\n  providers: [\n    ClinicSettingsService\n  ],\n  declarations: [\n    ClinicSettingsComponent\n  ]\n})\nexport class ClinicSettingsModule {}\n","import { Routes } from '@angular/router';\n\nimport { ClinicSettingsComponent } from './clinic-settings.component';\n\nexport const ClinicSettingsRoutes: Routes = [\n  {\n   path: '',\n    component: ClinicSettingsComponent,\n    data: {\n      title: 'Clinic Settings'\n    }\n  }\n];\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { CookieService } from \"angular2-cookie/core\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable()\nexport class ClinicSettingsService {\n\n   public token: string;\n    private headers: HttpHeaders;\n    private apiUrl = environment.apiUrl;\n\n    constructor(private http: HttpClient,private _cookieService: CookieService) {\n        //append headers\n        this.headers = new HttpHeaders();\n        this.headers.append(\"Content-Type\", 'application/json');\n        this.headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        this.headers.append(\"Access-Control-Allow-Headers\", \"Origin, Authorization, Content-Type, Accept\");\n   }\n\n\n   // Get ClinicSettings\n    getClinicSettings( clinic_id='1', user_id = this._cookieService.get(\"userid\"),token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Practices/getPractices?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n       // Get ClinicSettings\n    updateClinicSettings(clinic_id, name, address, contact_name, practice_size, user_id = '23', token = this._cookieService.get(\"token\")): Observable<any> {\n            const formData = new FormData();\n\n    formData.append('clinicName', name);\n    formData.append('address', address);\n    formData.append('contactName', contact_name);\n    formData.append('practice_size', practice_size);\n\n    formData.append('id', clinic_id);\n\n     formData.append('user_id', this._cookieService.get(\"userid\"));\n    formData.append('token', token);\n\n        return this.http.post(this.apiUrl +\"/Practices/update/\", formData)\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n    // Get ClinicSettings\n    getXeroLink( clinic_id='1', user_id = this._cookieService.get(\"userid\"),token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Xeros/startPublic/?getxero=1\", { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    checkXeroStatus( clinic_id='1', user_id = this._cookieService.get(\"userid\"),token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Xeros/getXeroStatus?getxero=1&user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n\n    clearSession( clinic_id='1', user_id = this._cookieService.get(\"userid\"),token = this._cookieService.get(\"token\")): Observable<any> {\n        return this.http.get(this.apiUrl +\"/Xeros/clearSession/?getxero=1?user_id=\"+user_id+\"&clinic_id=\"+clinic_id+\"&token=\"+this._cookieService.get(\"token\"), { headers: this.headers })\n        .pipe(map((response: Response) => {\n                        return response;\n                    })\n        );\n    }\n       \n}\n\n"],"sourceRoot":""}