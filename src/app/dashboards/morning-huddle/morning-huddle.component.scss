.jeeve-legacy-app {
  @import './base.scss';
}

.call-log-panel mat-dialog-container {
  padding: 0;
}

.ai-call-agent-container {
  display: flex;
  align-items: center;
  gap: 12px;

  .ai-call-button,
  .view-log-button {
    min-width: 140px;
    display: flex;
    align-items: center;
    gap: 8px;

    mat-icon {
      font-size: 18px;
      height: 18px;
      width: 18px;
    }
  }

  .ai-call-status {
    display: flex;
    align-items: center;

    mat-icon {
      &.in-progress {
        color: #ffa726;
        animation: spin 2s linear infinite;
      }

      &.completed {
        color: #4caf50;
      }

      &.failed {
        color: #f44336;
      }

      &.not-started {
        color: #9e9e9e;
      }
    }
  }
}

.call-log-sidenav {
  height: 100%;
  width: 400px;
  display: flex;
  flex-direction: column;
  background-color: white;
  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);

  .call-log-header {
    padding: 16px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #e0e0e0;

    h2 {
      margin: 0;
      font-size: 1.25rem;
    }
  }

  .call-log-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;

    .log-section {
      padding: 16px;

      h3 {
        margin: 0 0 16px 0;
        font-size: 1rem;
        color: #666;
      }
    }
  }

  mat-tab-group {
    flex: 1;
    overflow: hidden;

    ::ng-deep {
      .mat-tab-body-wrapper {
        flex: 1;
        overflow: hidden;
      }

      .mat-tab-body-content {
        height: 100%;
        overflow-y: auto;
      }
    }
  }

  .log-item {
    margin-bottom: 16px;
    padding: 12px;
    border-radius: 8px;
    background-color: #f5f5f5;

    &.user-response {
      background-color: #e3f2fd;
      margin-left: 20px;
    }

    .timestamp {
      font-size: 0.8rem;
      color: #666;
      margin-bottom: 4px;
    }

    .message {
      font-size: 0.9rem;
      line-height: 1.4;
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
