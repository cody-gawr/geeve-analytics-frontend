import { ElementRef, EventEmitter, OnInit, Renderer2 } from '@angular/core';
import { InputMaskOptions } from './input-mask-options';
import * as i0 from "@angular/core";
export declare class InputMaskAngularDirective implements OnInit {
    private elementRef;
    private renderer;
    maskFilled: EventEmitter<boolean>;
    extractedValue: EventEmitter<string>;
    formattedText: EventEmitter<string>;
    placeholder: EventEmitter<string>;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    private _value;
    set value(value: string);
    private _primaryFormat;
    set primaryFormat(value: string);
    private _options;
    set options(value: InputMaskOptions);
    ngOnInit(): void;
    private setupListener;
    static ɵfac: i0.ɵɵFactoryDef<InputMaskAngularDirective>;
    static ɵdir: i0.ɵɵDirectiveDefWithMeta<InputMaskAngularDirective, "input[mask]", never, { "value": "value"; "primaryFormat": "mask"; "options": "options"; }, { "maskFilled": "maskFilled"; "extractedValue": "extractedValue"; "formattedText": "formattedText"; "placeholder": "placeholder"; }, never>;
}
